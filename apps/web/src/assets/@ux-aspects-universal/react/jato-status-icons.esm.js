import { u as useIconProps, i as iconPropTypes } from './prop-types.esm.js';
import * as React from 'react';
import { forwardRef } from 'react';
import './_tslib.esm.js';
import './direction.esm.js';
import '@react-aria/utils';
import 'clsx';
import './use-mutation-observer.esm.js';
import './reducer-provider.esm.js';
import './use-unique-id.esm.js';
import 'prop-types';

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ApprovedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-06, #009952ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M6.923 2.537c.403-.95 1.75-.95 2.154 0a1.17 1.17 0 0 0 1.609.586c.92-.469 1.953.397 1.65 1.385a1.17 1.17 0 0 0 .857 1.482c1.006.233 1.24 1.56.374 2.122a1.17 1.17 0 0 0-.297 1.686c.621.825-.053 1.992-1.078 1.866a1.17 1.17 0 0 0-1.311 1.1c-.054 1.032-1.32 1.493-2.025.738a1.17 1.17 0 0 0-1.712 0c-.704.755-1.97.294-2.025-.737a1.17 1.17 0 0 0-1.311-1.1c-1.025.125-1.699-1.042-1.077-1.867a1.17 1.17 0 0 0-.298-1.686c-.866-.562-.632-1.89.374-2.122a1.17 1.17 0 0 0 .856-1.482c-.301-.988.73-1.854 1.651-1.385a1.17 1.17 0 0 0 1.609-.586",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-status-rating-06, #009952ff)",
    fillRule: "evenodd",
    d: "M11.394 5.457a.707.707 0 0 0-1 0L7.048 8.801 5.607 7.358a.707.707 0 0 0-1 1l2.442 2.444 4.345-4.344a.707.707 0 0 0 0-1",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
ApprovedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CloudEditIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-10, #3382ffff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M5.846 10.703a.25.25 0 0 0 .32.32l1.704-.611s3.943-3.937 5.741-5.741l-.169.169-.707.707-1.413-1.413c-1.94 1.946-4.859 4.87-4.859 4.87zm6.182-7.277.17-.17zm0 0 1.414 1.413.353-.352c1.061-1.06-.353-2.475-1.413-1.414z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M6.504 11.965c-.997.357-1.96-.608-1.598-1.604L5.6 8.455l4.342-4.352A3.4 3.4 0 0 0 8.014 3.5C6.306 3.5 4.948 4.89 4.6 6.6 3.135 7.013 2 8.499 2 10c0 1.767 1.476 2.886 3.34 2.993V13h5.668C12.484 13 14 11.575 14 10c0-1.31-.578-2.263-1.707-2.597L8.42 11.277z",
    opacity: ".9",
    fillOpacity: "1"
  }));
});
CloudEditIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CommentsIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M6.125 10.499v1.875l1.563-1.875h4.062c.345 0 .625-.28.625-.625v-5a.625.625 0 0 0-.625-.625h-7.5a.625.625 0 0 0-.625.625v5c0 .345.28.625.625.625zM8 11.124h3.75c.69 0 1.25-.56 1.25-1.25v-5c0-.69-.56-1.25-1.25-1.25h-7.5c-.69 0-1.25.56-1.25 1.25v5c0 .69.56 1.25 1.25 1.25H5.5v1.25c0 .59.744.851 1.113.39z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M12.375 9.874c0 .345-.28.625-.625.625H7.688l-1.563 1.875v-1.875H4.25a.625.625 0 0 1-.625-.625v-5c0-.345.28-.625.625-.625h7.5c.345 0 .625.28.625.625z",
    fillOpacity: "1"
  }));
});
CommentsIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CrossRefIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-16, #5672baff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M11.056 2.143a.5.5 0 1 0-.7.714L11.524 4H10.25a.5.5 0 0 0 0 1h1.274l-1.168 1.143a.5.5 0 1 0 .7.714L13.465 4.5zM11.056 9.143a.5.5 0 1 0-.7.714L11.524 11H10.25a.5.5 0 0 0 0 1h1.274l-1.168 1.143a.5.5 0 1 0 .7.714l2.409-2.357z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M2.563 10a.5.5 0 0 0 0 1zm0 1h2.27v-1h-2.27zm3.655-.923 1.987-4.77-.923-.384-1.987 4.77zM8.667 5h2.208V4H8.667zm-.462.308A.5.5 0 0 1 8.667 5V4a1.5 1.5 0 0 0-1.385.923zM4.833 11a1.5 1.5 0 0 0 1.385-.923l-.923-.385a.5.5 0 0 1-.462.308z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "m5.78 5.701-.11-.204A1.5 1.5 0 0 0 4.555 5H2.563a.5.5 0 0 0 0 1h1.992a.5.5 0 0 1 .371.166l.4.734zm1.478 4.75.572 1.052A1.5 1.5 0 0 0 8.945 12H11.5a.5.5 0 0 0 0-1H8.945a.5.5 0 0 1-.371-.165L7.717 9.26z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
CrossRefIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DenyIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "8",
    fill: "var(--jato-status-rating-01, #b50600ff)",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M12.286 8a.75.75 0 0 1-.75.75H4.464a.75.75 0 1 1 0-1.5h7.072a.75.75 0 0 1 .75.75",
    clipRule: "evenodd",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
DenyIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditingIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-15, #005959ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M3.846 11.703a.25.25 0 0 0 .32.32l1.704-.611s3.942-3.937 5.741-5.742l-.17.17h.001l-.707.707-1.413-1.413-4.859 4.87zm6.182-7.277.17-.17zm0 0 1.413 1.413.353-.353c1.062-1.06-.352-2.475-1.412-1.413z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
EditingIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ErrorSmallIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "6",
    fill: "var(--jato-status-rating-02, #e60054ff)",
    fillOpacity: "1"
  })), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M5.518 5.518a.59.59 0 0 1 .834 0l4.13 4.13a.59.59 0 1 1-.834.834l-4.13-4.13a.59.59 0 0 1 0-.834",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.583 5.417a.59.59 0 0 1 0 .834L6.25 10.583a.59.59 0 0 1-.834-.834l4.331-4.332a.59.59 0 0 1 .835 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h12v12H0z",
    transform: "translate(2 2)",
    fillOpacity: "1"
  }))));
});
ErrorSmallIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ErrorIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "8",
    fill: "var(--jato-status-rating-02, #e60054ff)",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11.03 4.97a.75.75 0 0 1 0 1.06l-5 5a.75.75 0 1 1-1.06-1.06l5-5a.75.75 0 0 1 1.06 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M4.97 4.97a.75.75 0 0 1 1.06 0l5 5a.75.75 0 1 1-1.06 1.06l-5-5a.75.75 0 0 1 0-1.06",
    clipRule: "evenodd",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
ErrorIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ExternalDocumentIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-10, #3382ffff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-background-elevation-level-4, #ffff)",
    d: "M7.15 8.15c-.2.2-.2.51 0 .71s.51.2.71 0L13 3.71V6.5c0 .28.22.5.5.5s.5-.22.5-.5V2H9.5c-.28 0-.5.22-.5.5s.22.5.5.5h2.79L7.14 8.15z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-background-elevation-level-4, #ffff)",
    d: "M12 11c0 .55-.45 1-1 1H5c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1h2V3H5c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V9h-1z",
    fillOpacity: "1"
  }));
});
ExternalDocumentIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FlaggedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M5.5 4a.5.5 0 0 0-1 0v8a.5.5 0 0 0 1 0V9h7l-1.875-2.5L12.5 4z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
FlaggedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ForwardHistoryIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-10, #3382ffff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M4.5 5.823a.5.5 0 0 1 .5.5v1.368l.724.363.086.053a.5.5 0 0 1-.439.876l-.095-.036-1-.5L4 8.31V6.323a.5.5 0 0 1 .5-.5",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M9 2a2 2 0 0 1 1.6.8l2 2.667q.184.246.285.533H11.75L9.8 3.4A1 1 0 0 0 9 3H5a1 1 0 0 0-1 1v.035a3.5 3.5 0 1 1 0 6.929V12a1 1 0 0 0 1 1h6l.031-.002v1L11 14H5a2 2 0 0 1-2-2v-1.337a3.5 3.5 0 0 1 0-6.327V4a2 2 0 0 1 2-2zM4.5 5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M11.884 7.15a.5.5 0 0 1 .707-.007L15 9.5l-2.41 2.357a.5.5 0 1 1-.698-.714L13.06 10H10.5A1.5 1.5 0 0 0 9 11.5a.5.5 0 0 1-1 0A2.5 2.5 0 0 1 10.5 9h2.56l-1.168-1.143a.5.5 0 0 1-.008-.707",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: "4",
    fillOpacity: "1"
  }))));
});
ForwardHistoryIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityHighIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-high, #e86100ff)",
    fillRule: "evenodd",
    d: "M2.15 10.85c.2.2.51.2.71 0L8.01 5.7l5.15 5.15c.2.2.51.2.71 0s.2-.51 0-.71L8.02 4.29l-5.87 5.86c-.2.2-.2.51 0 .71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PriorityHighIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImpactRatingCriticalIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-severity-impact-rating-critical, #b50600ff)",
    d: "M4.96 15c-.55 0-1.23-.39-1.5-.87L.42 8.87c-.28-.48-.28-1.26 0-1.73l3.04-5.27c.27-.48.95-.87 1.5-.87h6.08c.55 0 1.23.39 1.5.87l3.04 5.27c.28.48.28 1.26 0 1.73l-3.04 5.27c-.27.48-.95.87-1.5.87H4.96z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }));
});
ImpactRatingCriticalIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImpactRatingHighIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "var(--jato-severity-impact-rating-high, #e86100ff)",
    d: "M7.29.71.706 7.293a1 1 0 0 0 0 1.414L7.29 15.29a1 1 0 0 0 1.414 0l6.583-6.583a1 1 0 0 0 0-1.414L8.704.71a1 1 0 0 0-1.414 0",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
ImpactRatingHighIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImpactRatingLowIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "var(--jato-severity-impact-rating-low, #00668fff)",
    d: "M8.868 13.48a1 1 0 0 1-1.736 0L.855 2.497A1 1 0 0 1 1.723 1h12.554a1 1 0 0 1 .868 1.496z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 7c0 .55-.45 1-1 1s-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1zM8 11a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
ImpactRatingLowIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImpactRatingMinorIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "#c08b19",
    d: "M8.868 2.52a1 1 0 0 0-1.736 0L.855 13.503A1 1 0 0 0 1.723 15h12.554a1 1 0 0 0 .868-1.496z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 9c0 .55-.45 1-1 1s-1-.45-1-1V6c0-.55.45-1 1-1s1 .45 1 1zM8 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
ImpactRatingMinorIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImpactRatingVeryHighIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-severity-impact-rating-very-high, #e60054ff)",
    d: "M1 2c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v8c0 .55-.37 1.26-.81 1.58l-5.37 3.84c-.45.32-1.18.32-1.63 0l-5.37-3.84c-.45-.32-.81-1.03-.81-1.58V2z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }));
});
ImpactRatingVeryHighIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const InProcessIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-qualitative-09, #940656ff)",
    d: "M0 4a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4z",
    fillOpacity: "1"
  }), React.createElement("path", {
    stroke: "var(--jato-background-elevation-level-4, #ffff)",
    strokeLinecap: "round",
    d: "M2.584 10.583a6 6 0 0 1 10.443-5.859",
    strokeOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-background-elevation-level-4, #ffff)",
    fillRule: "evenodd",
    d: "M7.5 4.5A.5.5 0 0 1 8 5v3.217l2.257 1.354a.5.5 0 1 1-.514.858L7 8.783V5a.5.5 0 0 1 .5-.5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    stroke: "var(--jato-background-elevation-level-4, #ffff)",
    strokeLinecap: "round",
    d: "M13.5 3v2h-2",
    strokeOpacity: "1"
  }), React.createElement("path", {
    stroke: "var(--jato-background-elevation-level-4, #ffff)",
    strokeDasharray: "0.01 2.5",
    strokeLinecap: "round",
    strokeWidth: "1.5",
    d: "M4.625 12.563c.897.614 1.63 1 2.719 1.062 1.01.057 2.207.129 3.125-.312.843-.406 1.65-1.298 2.219-2.032.688-.888.86-1.664.968-2.781",
    strokeOpacity: "1"
  }));
});
InProcessIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const InfoSmallIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "11",
    height: "11",
    x: "3",
    y: "2",
    fill: "var(--jato-qualitative-10, #3382ffff)",
    rx: "3",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8.95 6.656c0-.414-.269-.656-.6-.656s-.6.242-.6.656v3.703c0 .415.269.657.6.657s.6-.242.6-.657z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8.35",
    cy: "4.256",
    r: ".6",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  }));
});
InfoSmallIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const InfoIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-10, #3382ffff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8.9 7c0-.414-.358-.75-.8-.75s-.8.336-.8.75v4.5c0 .414.358.75.8.75s.8-.336.8-.75z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8.1",
    cy: "4.3",
    r: ".8",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  }));
});
InfoIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LockedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-11, #35006eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M4 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h5a2 2 0 0 0 1.732-1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5.72l-.12-.2A2 2 0 0 0 8 2z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M12 6v1h-2V6a1 1 0 1 1 2 0M9 7V6a2 2 0 1 1 4 0v1a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2V8a1 1 0 0 1 1-1m4 1H9v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
LockedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityLowIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-low, #00668fff)",
    fillRule: "evenodd",
    d: "M2.15 5.15c.2-.2.51-.2.71 0l5.15 5.15 5.15-5.15c.2-.2.51-.2.71 0s.2.51 0 .71l-5.85 5.85-5.87-5.86c-.2-.2-.2-.51 0-.71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PriorityLowIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityLowerIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-very-low, #0836d6ff)",
    fillRule: "evenodd",
    d: "M2.15 7.15c.2-.2.51-.2.71 0l5.15 5.15 5.15-5.15c.2-.2.51-.2.71 0s.2.51 0 .71l-5.85 5.85-5.87-5.86c-.2-.2-.2-.51 0-.71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-very-low, #0836d6ff)",
    fillRule: "evenodd",
    d: "M2.15 3.15c.2-.2.51-.2.71 0L8.01 8.3l5.15-5.15c.2-.2.51-.2.71 0s.2.51 0 .71L8.02 9.71 2.15 3.85c-.2-.2-.2-.51 0-.71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PriorityLowerIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityLowestIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-lowest, #001f9cff)",
    fillRule: "evenodd",
    d: "M2.15 9.15c.2-.2.51-.2.71 0l5.15 5.15 5.15-5.15c.2-.2.51-.2.71 0s.2.51 0 .71l-5.85 5.85-5.85-5.85c-.2-.2-.2-.51 0-.71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-lowest, #001f9cff)",
    fillRule: "evenodd",
    d: "M2.15 5.15c.2-.2.51-.2.71 0l5.15 5.15 5.15-5.15c.2-.2.51-.2.71 0s.2.51 0 .71l-5.85 5.85-5.87-5.86c-.2-.2-.2-.51 0-.71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-lowest, #001f9cff)",
    fillRule: "evenodd",
    d: "M2.15 1.15c.2-.2.51-.2.71 0L8.01 6.3l5.14-5.15c.2-.2.51-.2.71 0s.2.51 0 .71L8.01 7.71 2.15 1.85c-.2-.2-.2-.51 0-.71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PriorityLowestIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityMediumIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "#c08b19",
    d: "M8 13.5a.47.47 0 0 1-.35-.15l-5-5c-.2-.2-.2-.51 0-.71l5-4.99c.2-.2.51-.2.71 0l5 5c.2.2.2.51 0 .71l-5 5c-.1.1-.23.15-.35.15zM3.71 8 8 12.29 12.29 8 8 3.71z",
    fillOpacity: "1"
  }));
});
PriorityMediumIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MissingIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-03, #5407b3ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11.642 6.412a2.74 2.74 0 0 0-1.803.32zm1.597.89a2.7 2.7 0 0 0-1.597-.89zm-3.4-.57a2.64 2.64 0 0 0-1.176 1.39zm.755 6.935c0-.345.28-.625.625-.625h.009a.625.625 0 1 1 0 1.25h-.01a.625.625 0 0 1-.624-.625",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M11.642 6.412a2.74 2.74 0 0 0-1.803.32 2.64 2.64 0 0 0-1.176 1.39.625.625 0 1 0 1.175.426c.11-.303.328-.563.62-.73.294-.167.64-.23.98-.173.337.057.64.227.856.476s.332.561.331.88c0 .326-.262.663-.744.975a4.3 4.3 0 0 1-.87.425l-.011.004h-.002a.625.625 0 0 0-.43.629l.036.666a.625.625 0 0 0 1.248-.067l-.012-.219c.204-.091.46-.22.72-.389.548-.354 1.315-1.016 1.315-2.023.001-.624-.226-1.227-.636-1.7a2.7 2.7 0 0 0-1.597-.89",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M5 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h3v-1H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4a1 1 0 0 1 .8.4l.96 1.6h1.126a2 2 0 0 0-.286-.533l-1-1.667A2 2 0 0 0 9 2z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
MissingIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const NewIndicatorIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-15, #005959ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8.03 4a.6.6 0 0 1 .6.6v2.46l2.132-1.23a.6.6 0 1 1 .6 1.04L9.23 8.1l2.132 1.231a.6.6 0 1 1-.6 1.04L8.63 9.14V11.6a.6.6 0 1 1-1.2 0V9.14L5.3 10.37a.6.6 0 1 1-.6-1.04L6.83 8.1 4.7 6.87a.6.6 0 0 1 .6-1.039l2.13 1.23V4.6a.6.6 0 0 1 .6-.6",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
NewIndicatorIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityNoneIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-none, #7e8794ff)",
    d: "M4 12.5a.47.47 0 0 1-.35-.15c-.2-.2-.2-.51 0-.71l8-7.99c.2-.2.51-.2.71 0s.2.51 0 .71l-8.01 7.99c-.1.1-.23.15-.35.15M4.09 9.79l.71-.71-1.09-1.09L8 3.7l1.09 1.09.71-.71-1.44-1.44c-.2-.2-.51-.2-.71 0l-5 5.01c-.2.2-.2.51 0 .71L4.09 9.8zM13.35 7.65l-1.44-1.44-.71.71 1.09 1.09L8 12.3l-1.09-1.09-.71.71 1.44 1.44a.485.485 0 0 0 .7 0l5-5c.2-.2.2-.51 0-.71z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-none, #7e8794ff)",
    d: "M4 12.5a.47.47 0 0 1-.35-.15c-.2-.2-.2-.51 0-.71l8-7.99c.2-.2.51-.2.71 0s.2.51 0 .71l-8.01 7.99c-.1.1-.23.15-.35.15",
    fillOpacity: "1"
  }));
});
PriorityNoneIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const OnHoldIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-01, #b50600ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M7.099 2.165a.5.5 0 0 1 .87.335v5.009a.5.5 0 0 0 1 0V3.443a.5.5 0 0 1 1 0v5.064a.5.5 0 1 0 1 0v-3.02c0-.066 0-.195.132-.338a.5.5 0 0 1 .869.338v5.55c0 .913-.48 1.645-1.283 2.17-.813.532-2.092.591-3.258.591-1.073 0-1.76-.21-2.34-.59-1.402-.918-1.85-2.579-2.616-4.05a.625.625 0 0 1 .996-.73l.647.933a.5.5 0 0 0 .854-.354V3.554c0-.11.032-.22.119-.323a.506.506 0 0 1 .762 0 .5.5 0 0 1 .119.323v3.954a.5.5 0 0 0 1 0V2.5c0-.065.042-.239.129-.335",
    clipRule: "evenodd",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: "4",
    fillOpacity: "1"
  }))));
});
OnHoldIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const OutdatedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-02, #e60054ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M5.5 2a.5.5 0 0 0-.5.5V3H3a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1h-2v-.5a.5.5 0 0 0-1 0V3H6v-.5a.5.5 0 0 0-.5-.5m-2 3a.5.5 0 0 0-.5.5v6a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-6a.5.5 0 0 0-.5-.5z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M7.5 6.5a.5.5 0 0 1 1 0V9a.5.5 0 0 1-1 0z",
    fillOpacity: "1"
  }), React.createElement("rect", {
    width: "1",
    height: "1",
    x: "7.5",
    y: "10",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: ".5",
    fillOpacity: "1"
  }));
});
OutdatedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PinnedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-03, #5407b3ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M9.485 2.707a.5.5 0 0 0-.707.707l.202.202-3.03 2.626a1 1 0 0 0-1.415 0L3.121 7.656l2.122 2.122-1.768 1.768a.5.5 0 1 0 .707.707l1.768-1.768 2.12 2.121 1.415-1.414a1 1 0 0 0 0-1.414l2.627-3.03.202.202a.5.5 0 0 0 .707 0 .5.5 0 0 0 0-.707z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PinnedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PreparingIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-04, #eb38afff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M5 3.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v1.688h-.5.5v.016a1 1 0 0 1-.007.11 2 2 0 0 1-.043.274c-.047.224-.14.527-.323.863-.274.505-.739 1.066-1.513 1.546.81.492 1.284 1.059 1.554 1.573.178.338.261.641.3.867a2.3 2.3 0 0 1 .033.385V12.5a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5v-1.687h.5H5v-.017a1 1 0 0 1 .007-.11q.008-.105.043-.274c.047-.224.14-.527.323-.863.274-.505.739-1.066 1.513-1.546-.81-.492-1.284-1.059-1.554-1.573a3 3 0 0 1-.3-.867A2.2 2.2 0 0 1 5 5.178zm1 1.711v.03q.002.049.018.152c.024.137.078.338.2.572.227.432.713 1.016 1.782 1.492C9.017 7 9.507 6.419 9.748 5.974c.13-.24.194-.45.224-.594q.023-.109.026-.161L10 5.185V4H6v1.212m2 3.332C6.985 9 6.495 9.581 6.254 10.026c-.13.24-.194.45-.224.594a2 2 0 0 0-.028.197V12h4v-1.242a1 1 0 0 0-.018-.151 2 2 0 0 0-.2-.572C9.556 9.603 9.07 9.02 8 8.543",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M10 12H6V9l2-1 2 1z",
    opacity: ".3",
    fillOpacity: "1"
  }));
});
PreparingIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const QuestionIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-03, #5407b3ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M7.908 4.4c-.943 0-1.708.765-1.708 1.708a.6.6 0 0 1-1.2 0 2.908 2.908 0 0 1 5.815 0v.03l-.003.03c-.097.97-.62 1.446-1.068 1.853q-.137.123-.258.242c-.106.105-.216.21-.315.303l-.119.112a4 4 0 0 0-.32.334c-.146.179-.215.33-.223.519l-.001 1.038a.6.6 0 1 1-1.2 0V9.531c.01-.542.226-.949.496-1.279.132-.162.28-.309.42-.442l.14-.132c.092-.088.18-.17.273-.264.148-.147.275-.266.384-.368.382-.357.542-.507.594-.968A1.71 1.71 0 0 0 7.908 4.4m0 8.65a.625.625 0 1 0 0-1.25.625.625 0 0 0 0 1.25",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
QuestionIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RejectedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-02, #e60054ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M6.923 2.537c.403-.95 1.75-.95 2.154 0a1.17 1.17 0 0 0 1.609.586c.92-.469 1.953.397 1.65 1.385a1.17 1.17 0 0 0 .857 1.482c1.006.233 1.24 1.56.374 2.122a1.17 1.17 0 0 0-.297 1.686c.621.825-.053 1.992-1.078 1.866a1.17 1.17 0 0 0-1.311 1.1c-.054 1.032-1.32 1.493-2.025.738a1.17 1.17 0 0 0-1.712 0c-.704.755-1.97.294-2.025-.737a1.17 1.17 0 0 0-1.311-1.1c-1.025.125-1.699-1.042-1.077-1.867a1.17 1.17 0 0 0-.298-1.686c-.866-.562-.632-1.89.374-2.122a1.17 1.17 0 0 0 .856-1.482c-.301-.988.73-1.854 1.651-1.385a1.17 1.17 0 0 0 1.609-.586",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-status-rating-02, #e60054ff)",
    fillRule: "evenodd",
    d: "M10.671 5.329a.715.715 0 0 0-1.011 0L8 6.989l-1.56-1.56a.715.715 0 1 0-1.01 1.012L6.989 8l-1.66 1.66a.715.715 0 0 0 1.01 1.011L8 9.011l1.56 1.56a.715.715 0 1 0 1.01-1.012L9.011 8l1.66-1.66a.715.715 0 0 0 0-1.01",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
RejectedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ReservedLockedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-07, #00399cff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11 5.5v1.525c.57.116 1 .62 1 1.225v3.25a1.5 1.5 0 0 1-1.5 1.5h-5A1.5 1.5 0 0 1 4 11.5V8.25c0-.605.43-1.11 1-1.225V5.5c0-1.485 1.191-3 3-3s3 1.515 3 3m-5 0c0-1 .809-2 2-2s2 1 2 2V7H6z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
ReservedLockedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ReservedOwnerIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11 5.5v1.525c.57.116 1 .62 1 1.225v3.25a1.5 1.5 0 0 1-1.5 1.5h-5A1.5 1.5 0 0 1 4 11.5V8.25c0-.605.43-1.11 1-1.225V5.5c0-1.485 1.191-3 3-3s3 1.515 3 3m-5 0c0-1 .809-2 2-2s2 1 2 2V7H6zm2.5 5.059a.75.75 0 1 0-1 0V11a.5.5 0 0 0 1 0z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
ReservedOwnerIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RetentionIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-16, #5672baff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M4 10.5a.5.5 0 0 1 .5-.5h6.816a.5.5 0 0 1 .31.108L12.75 11l-1.123.892a.5.5 0 0 1-.311.108H4.5a.5.5 0 0 1-.5-.5zM4 7.5a.5.5 0 0 1 .5-.5h4.816a.5.5 0 0 1 .31.108L10.75 8l-1.123.892A.5.5 0 0 1 9.316 9H4.5a.5.5 0 0 1-.5-.5zM4 4.5a.5.5 0 0 1 .5-.5h2.816a.5.5 0 0 1 .31.108L8.75 5l-1.123.892A.5.5 0 0 1 7.316 6H4.5a.5.5 0 0 1-.5-.5z",
    fillOpacity: "1"
  }));
});
RetentionIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SharedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-16, #5672baff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.607 3.5a1.643 1.643 0 0 0-1.623 1.896L6.069 6.854a1.643 1.643 0 1 0 .082 2.204l2.855 1.428q-.041.18-.042.37a1.643 1.643 0 1 0 .556-1.231L6.531 8.13a1.7 1.7 0 0 0-.015-.382L9.432 6.29a1.643 1.643 0 1 0 1.176-2.79",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
SharedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SignDeclinedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-01, #b50600ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M3.622 12.376c.535.536 2.12-.78 3.086-1.747L9.646 7.69 8.307 6.352 5.37 9.29c-.806.806-2.283 2.55-1.748 3.086M8.977 5.683l1.338 1.339.986-.986c.483-.483 1.62-1.762 1.022-2.361-.67-.67-2.12.78-2.361 1.023z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    stroke: "var(--jato-status-rating-01, #b50600ff)",
    strokeLinecap: "round",
    strokeWidth: ".5",
    d: "M3.72 5.72a.75.75 0 0 1 1.06 0l5.5 5.5a.75.75 0 1 1-1.06 1.06l-5.5-5.5a.75.75 0 0 1 0-1.06Z",
    fillOpacity: "1",
    strokeOpacity: "1"
  }));
});
SignDeclinedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SignedPendingIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "#8b3cb0",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "5.875",
    cy: "12.875",
    r: ".875",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8.875",
    cy: "12.875",
    r: ".875",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "11.875",
    cy: "12.875",
    r: ".875",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M3.622 11.876c.535.536 2.12-.78 3.086-1.747L9.646 7.19 8.307 5.852 5.37 8.79c-.806.806-2.283 2.55-1.748 3.086M8.977 5.183l1.338 1.339.986-.986c.483-.483 1.62-1.762 1.022-2.361-.67-.67-2.12.78-2.361 1.023z",
    fillOpacity: "1"
  }));
});
SignedPendingIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SignedIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "#d28100",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M3.622 11.876c.535.536 2.12-.78 3.086-1.747L9.646 7.19 8.307 5.852 5.37 8.79c-.806.806-2.283 2.55-1.748 3.086M8.977 5.183l1.338 1.339.986-.986c.483-.483 1.62-1.762 1.022-2.361-.67-.67-2.12.78-2.361 1.023z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M16 9.575c-.627.576-1.184 1.368-1.575 2.245a1.8 1.8 0 0 1-1.376 1.05c-.397.05-.774-.06-1.038-.38 1.442-1.07 1.586-2.646 1.157-3.571-.116-.251-.292-.49-.535-.64a.93.93 0 0 0-.906-.05c-.288.138-.5.406-.653.722q-.236.482-.362 1.27c-.113.72-.1 1.34.025 1.86-1.09.493-2.868.76-5.667.365a.5.5 0 1 0-.14.99c2.885.407 4.877.16 6.209-.44.493.7 1.278.963 2.038.865a2.8 2.8 0 0 0 2.16-1.633 6.4 6.4 0 0 1 .663-1.15zm-4.3.802c.073-.467.174-.784.273-.988a.8.8 0 0 1 .16-.239.6.6 0 0 1 .128.189c.21.452.219 1.39-.61 2.154a4.4 4.4 0 0 1 .049-1.116",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
SignedIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SuccessSmallIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "6",
    fill: "var(--jato-status-rating-06, #009952ff)",
    fillOpacity: "1"
  })), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11.305 5.546a.583.583 0 0 1 0 .823L7.05 10.625 4.695 8.271a.582.582 0 1 1 .824-.824l1.53 1.53 3.433-3.431a.58.58 0 0 1 .823 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h12v12H0z",
    transform: "translate(2 2)",
    fillOpacity: "1"
  }))));
});
SuccessSmallIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SuccessIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "8",
    fill: "var(--jato-status-rating-06, #009952ff)",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M12.043 4.961a.72.72 0 0 1 0 1.02L6.774 11.25 3.957 8.433a.721.721 0 0 1 1.02-1.02L6.774 9.21l4.25-4.249a.72.72 0 0 1 1.02 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
SuccessIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusCriticalIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-severity-system-status-critical, #b50600ff)",
    d: "M4.96 15c-.55 0-1.23-.39-1.5-.87L.42 8.87c-.28-.48-.28-1.26 0-1.73l3.04-5.27c.27-.48.95-.87 1.5-.87h6.08c.55 0 1.23.39 1.5.87l3.04 5.27c.28.48.28 1.26 0 1.73l-3.04 5.27c-.27.48-.95.87-1.5.87H4.96z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }));
});
SystemStatusCriticalIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusInformationIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "var(--jato-severity-system-status-information, #3382ffff)",
    d: "M8.868 13.48a1 1 0 0 1-1.736 0L.855 2.497A1 1 0 0 1 1.723 1h12.554a1 1 0 0 1 .868 1.496z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 7c0 .55-.45 1-1 1s-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1zM8 11a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
SystemStatusInformationIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusMajorIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-severity-system-status-major, #e86100ff)",
    d: "M1 2c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v8c0 .55-.37 1.26-.81 1.58l-5.37 3.84c-.45.32-1.18.32-1.63 0l-5.37-3.84c-.45-.32-.81-1.03-.81-1.58V2z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }));
});
SystemStatusMajorIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusMinorIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "#c08b19",
    d: "M7.29.71.706 7.293a1 1 0 0 0 0 1.414L7.29 15.29a1 1 0 0 0 1.414 0l6.583-6.583a1 1 0 0 0 0-1.414L8.704.71a1 1 0 0 0-1.414 0",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M9 8c0 .55-.45 1-1 1s-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1zM8 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
SystemStatusMinorIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusNoneIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-severity-system-status-none, #7e8794ff)",
    fillRule: "evenodd",
    d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("rect", {
    width: "7.939",
    height: "1",
    x: "4.75",
    y: "10.614",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: ".5",
    transform: "rotate(-45 4.75 10.614)",
    fillOpacity: "1",
    strokeOpacity: "1"
  }));
});
SystemStatusNoneIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusNormalIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m4 8 3 3 5-5",
    strokeOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-severity-system-status-normal, #009952ff)",
    fillRule: "evenodd",
    d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-severity-system-status-normal, #009952ff)",
    fillRule: "evenodd",
    d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11.798 4.961a.72.72 0 0 1 0 1.02l-5.27 5.269-2.817-2.817a.721.721 0 0 1 1.02-1.02L6.529 9.21l4.249-4.249a.72.72 0 0 1 1.02 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
SystemStatusNormalIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SystemStatusUnknownIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-severity-system-status-unknown, #763bdcff)",
    fillRule: "evenodd",
    d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8 4.6c-.943 0-1.708.764-1.708 1.708a.6.6 0 0 1-1.2 0 2.908 2.908 0 0 1 5.816 0v.03l-.003.03c-.098.97-.621 1.445-1.069 1.853q-.136.122-.258.242c-.105.105-.216.209-.315.302l-.118.113a4 4 0 0 0-.32.334c-.156.19-.225.349-.225.557a.6.6 0 1 1-1.2 0c0-.56.22-.98.496-1.317.133-.162.28-.309.42-.442l.14-.133c.093-.087.18-.17.274-.263.147-.148.274-.266.383-.368.382-.357.542-.507.594-.968A1.71 1.71 0 0 0 8 4.6",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    strokeWidth: ".2",
    d: "M8 11.4a.724.724 0 1 1 0 1.45.724.724 0 0 1 0-1.45Z",
    fillOpacity: "1",
    strokeOpacity: "1"
  }));
});
SystemStatusUnknownIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TeamsIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-07, #763bdcff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M2.697 12.505h5.575c.385 0 .697-.29.697-.65V6.65c0-.36-.312-.651-.697-.651H2.697C2.312 6 2 6.291 2 6.65v5.205c0 .36.312.65.697.65m.92-5.15h3.61v.709H5.873v3.087H4.97V8.064H3.617z",
    clipRule: "evenodd",
    opacity: ".9",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11.402 11.077V7.672a.62.62 0 0 0-.62-.619H9.438v5.253a.75.75 0 0 1-.743.757H5.967a3.02 3.02 0 0 0 2.134 1.102 3.095 3.095 0 0 0 3.301-3.088M9.079 5.609A1.857 1.857 0 1 0 7.33 5.5h1.363c.14 0 .273.04.385.11",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M11.857 7.432v3.71q0 .428-.093.825.184.038.379.038A1.857 1.857 0 0 0 14 10.148V7.672a.62.62 0 0 0-.62-.619h-1.63a.7.7 0 0 1 .107.38m1.524-2.855a1.238 1.238 0 1 1-2.476 0 1.238 1.238 0 0 1 2.476 0",
    clipRule: "evenodd",
    opacity: ".8",
    fillOpacity: "1"
  }));
});
TeamsIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeDoneIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8",
    cy: "9",
    r: "4.5",
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    strokeOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M6.2 2.5a.5.5 0 0 1 .5-.5h2.6a.5.5 0 0 1 0 1h-.8v.938a.5.5 0 0 1-1 0V3h-.8a.5.5 0 0 1-.5-.5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M13 9A5 5 0 1 1 3 9a5 5 0 0 1 10 0",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-qualitative-08, #52960eff)",
    fillRule: "evenodd",
    d: "M8 5.25a3.75 3.75 0 1 0 0 7.5 3.75 3.75 0 0 0 0-7.5M3.75 9a4.25 4.25 0 1 1 8.5 0 4.25 4.25 0 0 1-8.5 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-qualitative-08, #52960eff)",
    fillRule: "evenodd",
    d: "M9.941 7.561a.214.214 0 0 1 0 .294L7.4 10.5 6.059 9.104a.214.214 0 0 1 0-.294.195.195 0 0 1 .282 0L7.4 9.91l2.259-2.35a.195.195 0 0 1 .282 0",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-qualitative-08, #52960eff)",
    d: "M10.212 7.301a.57.57 0 0 0-.824 0L7.4 9.371l-.788-.821a.57.57 0 0 0-.824 0 .59.59 0 0 0 0 .814L7.4 11.04l2.812-2.926a.59.59 0 0 0 0-.814",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.625 5.351a.6.6 0 0 1-.094-.843l.653-.816a.6.6 0 1 1 .938.75l-.653.816a.6.6 0 0 1-.844.093",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
TimeDoneIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeExpiredIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-02, #e60054ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M13 9A5 5 0 1 1 3 9a5 5 0 0 1 10 0m-5 4a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.625 5.351a.6.6 0 0 1-.094-.843l.653-.816a.6.6 0 1 1 .938.75l-.653.816a.6.6 0 0 1-.844.093M6.2 2.5a.5.5 0 0 1 .5-.5h2.6a.5.5 0 0 1 0 1h-.8v.938a.5.5 0 0 1-1 0V3h-.8a.5.5 0 0 1-.5-.5M7.75 9.016c0 .414.269.656.6.656s.6-.242.6-.656V6.313c0-.415-.269-.657-.6-.657s-.6.242-.6.657z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8.35",
    cy: "11.416",
    r: ".6",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    transform: "rotate(-180 8.35 11.416)",
    fillOpacity: "1"
  }));
});
TimeExpiredIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeExpiringSoonIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-03, #e86100ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M13 9A5 5 0 1 1 3 9a5 5 0 0 1 10 0m-5 4a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M6.2 2.5a.5.5 0 0 1 .5-.5h2.6a.5.5 0 0 1 0 1h-.8v.938a.5.5 0 0 1-1 0V3h-.8a.5.5 0 0 1-.5-.5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M5.115 4.916A5 5 0 0 1 8.07 4L8 9z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.625 5.351a.6.6 0 0 1-.094-.843l.653-.816a.6.6 0 1 1 .938.75l-.653.816a.6.6 0 0 1-.844.093",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
TimeExpiringSoonIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeHalfIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M13 9A5 5 0 1 1 3 9a5 5 0 0 1 10 0m-5 4a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M6.2 2.5a.5.5 0 0 1 .5-.5h2.6a.5.5 0 0 1 0 1h-.8v.938a.5.5 0 0 1-1 0V3h-.8a.5.5 0 0 1-.5-.5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M8 4a5 5 0 0 1 0 10V4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.625 5.351a.6.6 0 0 1-.094-.843l.653-.816a.6.6 0 1 1 .938.75l-.653.816a.6.6 0 0 1-.844.093",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
TimeHalfIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimePendingIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-status-rating-03, #e86100ff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M7.504 6.385c.276 0 .5.225.5.501v1.936l1.58 1.055.08.064c.14.142.182.355.107.54l-.047.09a.5.5 0 0 1-.605.185l-.09-.046-1.8-1.202-.008-.004-.01-.006a.5.5 0 0 1-.132-.142L7.05 9.3a1 1 0 0 1-.026-.069l-.015-.073a1 1 0 0 1-.005-.078V6.886c0-.276.225-.5.5-.5m1.97 3.659a.3.3 0 0 1 .047.038zm-1.67-3.158L7.8 6.834l-.002-.007q.006.029.007.06",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8 4a5 5 0 1 1-.001 10A5 5 0 0 1 8 4m0 1a4 4 0 1 0 0 8 4 4 0 0 0 0-8",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M10.804 2.202a.5.5 0 0 1 .615-.145l.086.054 1.3 1a.5.5 0 0 1-.524.846l-.086-.054-1.3-1-.074-.07a.5.5 0 0 1-.017-.631M4.55 2.057a.5.5 0 0 1 .597.777l-.073.069-1.3 1-.086.054a.5.5 0 0 1-.524-.847l1.3-1z",
    fillOpacity: "1"
  }));
});
TimePendingIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeQuarterIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M13 9A5 5 0 1 1 3 9a5 5 0 0 1 10 0m-5 4a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M6.2 2.5a.5.5 0 0 1 .5-.5h2.6a.5.5 0 0 1 0 1h-.8v.938a.5.5 0 0 1-1 0V3h-.8a.5.5 0 0 1-.5-.5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M8 4a5 5 0 0 1 5 5H8z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.625 5.351a.6.6 0 0 1-.094-.843l.653-.816a.6.6 0 1 1 .938.75l-.653.816a.6.6 0 0 1-.844.093",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
TimeQuarterIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeThreeQuarterIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M13 9A5 5 0 1 1 3 9a5 5 0 0 1 10 0m-5 4a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M6.2 2.5a.5.5 0 0 1 .5-.5h2.6a.5.5 0 0 1 0 1h-.8v.938a.5.5 0 0 1-1 0V3h-.8a.5.5 0 0 1-.5-.5",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M8 4a5 5 0 1 1-5 5h5z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M10.625 5.351a.6.6 0 0 1-.094-.843l.653-.816a.6.6 0 1 1 .938.75l-.653.816a.6.6 0 0 1-.844.093",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
TimeThreeQuarterIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityUrgentIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-urgent, #b50600ff)",
    fillRule: "evenodd",
    d: "M2.15 6.85c.2.2.51.2.71 0L8.01 1.7l5.15 5.15c.2.2.51.2.71 0s.2-.51 0-.71L8.02.29 2.17 6.14c-.2.2-.2.51 0 .71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-urgent, #b50600ff)",
    fillRule: "evenodd",
    d: "M2.15 10.85c.2.2.51.2.71 0L8.01 5.7l5.15 5.15c.2.2.51.2.71 0s.2-.51 0-.71L8.02 4.29l-5.87 5.86c-.2.2-.2.51 0 .71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-urgent, #b50600ff)",
    fillRule: "evenodd",
    d: "M2.15 14.85c.2.2.51.2.71 0L8.01 9.7l5.14 5.15c.2.2.51.2.71 0s.2-.51 0-.71L8.01 8.29l-5.86 5.86c-.2.2-.2.51 0 .71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PriorityUrgentIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PriorityVeryHighIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    fill: "var(--jato-priority-very-high, #e60054ff)",
    fillRule: "evenodd",
    d: "M2.15 8.85c.2.2.51.2.71 0L8.01 3.7l5.15 5.15c.2.2.51.2.71 0s.2-.51 0-.71L8.02 2.29 2.15 8.15c-.2.2-.2.51 0 .71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-priority-very-high, #e60054ff)",
    fillRule: "evenodd",
    d: "M2.15 12.85c.2.2.51.2.71 0L8.01 7.7l5.15 5.15c.2.2.51.2.71 0s.2-.51 0-.71L8.02 6.29l-5.87 5.86c-.2.2-.2.51 0 .71z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }));
});
PriorityVeryHighIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WaitingIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-04, #eb38afff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M8 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2M13 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2M3 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2M4.499 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2M11.5 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2M11.5 12.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2M4.499 12.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
    fillOpacity: "1"
  }));
});
WaitingIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WarningSmallIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "var(--jato-status-rating-03, #e86100ff)",
    d: "M8.913 2.744a.822.822 0 0 0-1.427 0L2.328 11.77A.822.822 0 0 0 3.042 13h10.316a.822.822 0 0 0 .714-1.23z",
    fillOpacity: "1"
  })), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8.848 8.25c0 .414-.268.75-.6.75-.33 0-.6-.336-.6-.75V5.281c0-.414.27-.687.6-.687.332 0 .6.273.6.687z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8.248",
    cy: "10.759",
    r: ".6",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  }), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h12v12H0z",
    transform: "translate(2.2 2)",
    fillOpacity: "1"
  }))));
});
WarningSmallIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WarningIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style,
    getId
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("g", {
    clipPath: `url(#${getId('uxa-icon-id-1')})`
  }, React.createElement("path", {
    fill: "var(--jato-status-rating-03, #e86100ff)",
    d: "M8.951 2.325a1.096 1.096 0 0 0-1.902 0L.17 14.36c-.417.73.11 1.639.951 1.639h13.756c.84 0 1.368-.909.95-1.64z",
    fillOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M8.9 10.25c0 .414-.358.75-.8.75s-.8-.336-.8-.75v-4.5c0-.414.358-.75.8-.75s.8.336.8.75z",
    clipRule: "evenodd",
    fillOpacity: "1"
  }), React.createElement("circle", {
    cx: "8.1",
    cy: "13.088",
    r: ".9",
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillOpacity: "1"
  })), React.createElement("defs", null, React.createElement("clipPath", {
    id: getId('uxa-icon-id-1')
  }, React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    d: "M0 0h16v16H0z",
    fillOpacity: "1"
  }))));
});
WarningIcon.propTypes = iconPropTypes;

/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WorkflowIcon = forwardRef((props, ref) => {
  const {
    iconProps,
    label,
    titleId,
    style
  } = useIconProps(props);
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    style: Object.assign(Object.assign({}, style), {
      fill: 'none'
    })
  }, iconProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("rect", {
    width: "16",
    height: "16",
    fill: "var(--jato-qualitative-08, #52960eff)",
    rx: "4",
    fillOpacity: "1"
  }), React.createElement("rect", {
    width: "3",
    height: "3",
    x: "9.5",
    y: "2.5",
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: ".563",
    strokeOpacity: "1"
  }), React.createElement("rect", {
    width: "3",
    height: "3",
    x: "2.5",
    y: "6.5",
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: ".563",
    strokeOpacity: "1"
  }), React.createElement("rect", {
    width: "3",
    height: "3",
    x: "9.5",
    y: "10.5",
    stroke: "var(--jato-graph-typography-overlay-figures, #ffff)",
    rx: ".563",
    strokeOpacity: "1"
  }), React.createElement("path", {
    fill: "var(--jato-graph-typography-overlay-figures, #ffff)",
    fillRule: "evenodd",
    d: "M9 4H5.5A1.5 1.5 0 0 0 4 5.5V6h1v-.5a.5.5 0 0 1 .5-.5H9zm-4 6H4v.5A1.5 1.5 0 0 0 5.5 12H9v-1H5.5a.5.5 0 0 1-.5-.5z",
    clipRule: "evenodd",
    opacity: ".8",
    fillOpacity: "1"
  }));
});
WorkflowIcon.propTypes = iconPropTypes;

export { ApprovedIcon, CloudEditIcon, CommentsIcon, CrossRefIcon, DenyIcon, EditingIcon, ErrorIcon, ErrorSmallIcon, ExternalDocumentIcon, FlaggedIcon, ForwardHistoryIcon, ImpactRatingCriticalIcon, ImpactRatingHighIcon, ImpactRatingLowIcon, ImpactRatingMinorIcon, ImpactRatingVeryHighIcon, InProcessIcon, InfoIcon, InfoSmallIcon, LockedIcon, MissingIcon, NewIndicatorIcon, OnHoldIcon, OutdatedIcon, PinnedIcon, PreparingIcon, PriorityHighIcon, PriorityLowIcon, PriorityLowerIcon, PriorityLowestIcon, PriorityMediumIcon, PriorityNoneIcon, PriorityUrgentIcon, PriorityVeryHighIcon, QuestionIcon, RejectedIcon, ReservedLockedIcon, ReservedOwnerIcon, RetentionIcon, SharedIcon, SignDeclinedIcon, SignedIcon, SignedPendingIcon, SuccessIcon, SuccessSmallIcon, SystemStatusCriticalIcon, SystemStatusInformationIcon, SystemStatusMajorIcon, SystemStatusMinorIcon, SystemStatusNoneIcon, SystemStatusNormalIcon, SystemStatusUnknownIcon, TeamsIcon, TimeDoneIcon, TimeExpiredIcon, TimeExpiringSoonIcon, TimeHalfIcon, TimePendingIcon, TimeQuarterIcon, TimeThreeQuarterIcon, WaitingIcon, WarningIcon, WarningSmallIcon, WorkflowIcon };
