import { _ as __rest } from './_tslib.esm.js';
import PropTypes__default from 'prop-types';
import * as React from 'react';
import { forwardRef } from 'react';
import '@react-aria/utils';
import 'clsx';
import { u as useUniqueId } from './use-unique-id.esm.js';
import './reducer-provider.esm.js';

function useLogoProps(_a) {
  var {
      width,
      height,
      style,
      label
    } = _a,
    props = __rest(_a, ["width", "height", "style", "label"]);
  const logoId = useUniqueId('uxa-logo-clip-path');
  const titleId = useUniqueId('uxa-logo-svg-title');
  return {
    titleId,
    getClipPathId: id => id.replace(/uxa-logo-clip-path-(\d+)/g, `${logoId}-$1`),
    style: Object.assign({
      width: width !== null && width !== void 0 ? width : 'var(--uxa-logo__width, 101px)',
      height: height !== null && height !== void 0 ? height : 'var(--uxa-logo__height, 19px)',
      fill: 'var(--uxa-logo__fill, currentColor)',
      flex: 'none'
    }, style),
    logoProps: Object.assign({
      'aria-labelledby': label ? titleId : undefined
    }, props)
  };
}

const OpentextLogo = forwardRef((_a, ref) => {
  var {
      width,
      height,
      label = 'OpenText'
    } = _a,
    props = __rest(_a, ["width", "height", "label"]);
  const {
    logoProps,
    titleId,
    style
  } = useLogoProps(Object.assign({
    width,
    height,
    label
  }, props));
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 244 46",
    style: style
  }, logoProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    d: "M32.8 21c0 7.4-4.4 15.4-16 15.4C8.4 36.4.7 31.8.7 21c0-8.9 5.8-15.8 17.2-15.2 12.2.7 14.9 9.9 14.9 15.2zm-21.7-5.6C10 17 9.6 19 9.6 21c0 4.5 2.3 8.6 7.2 8.6 4.8 0 7.1-3.8 7.1-8.2 0-3.2-.8-5.6-2.5-7.1-1.8-1.6-3.9-1.7-5.2-1.6-2.4.1-3.9.9-5.1 2.7zm100-6.3c.9-.9 1.4-1.6 3-2.3 1.4-.6 3.3-1 5.5-1 1.8 0 3.8.3 5.3 1.1 3.1 1.6 4 4.2 4 8.8v20H120V19.2c0-2.6-.1-3.6-.4-4.4-.7-1.6-2.2-2.2-4-2.2-4.6 0-4.6 3.6-4.6 7.3v15.8h-8.8V6.5h8.9v2.6zM98 28.1c-.8 1.7-3.4 8.3-14.9 8.3-8.9 0-15.1-5.3-15.1-14.9 0-7 3.6-15.7 15.4-15.7 1.8 0 6.9-.2 10.8 3.8 3.9 4.1 4.1 9.8 4.2 13.1H76.9c0 3.6 2.1 7.3 6.9 7.3 4.8 0 6.5-3.1 7.6-5.1l6.6 3.2zm-8.8-10.8c-.2-1.2-.4-2.9-1.7-4.1-1.1-1.1-2.8-1.6-4.3-1.6-2.1 0-3.6 1-4.5 1.9-1.2 1.3-1.5 2.6-1.8 3.9l12.3-.1zm131.5-4.7h5.8v-6h-5.8V.4h-8.8v6.1h-1.4l-4 6h5.4v13.9c0 2.8.1 4.9 1.3 6.6 1.9 2.7 5.2 2.9 8.3 2.9 1.6 0 2.8-.2 4.6-.5v-6.7l-3.1.1c-2.4 0-2.4-1.5-2.3-3.3V12.6zM133.1.4h8.8v6.1h9.1l-4 6h-5.2v13c-.1 1.8-.1 3.3 2.3 3.3l3.1-.1v6.7c-1.9.3-3 .5-4.6.5-3 0-6.4-.2-8.3-2.9-1.2-1.7-1.3-3.8-1.3-6.6V.4zm101.5 12.2h-1.1V7.4h-2v-.9h5v.9h-2v5.2zm8.5 0H242V8.9l.1-1.2-.3 1-1.3 4h-1l-1.3-4-.3-1 .1 1.2v3.7h-1v-6h1.5l1.5 4.8 1.5-4.8h1.5v6z"
  }), React.createElement("path", {
    d: "M178.6 28.1l-1.7 2.5c-1.6 2.2-4.5 5.7-13 5.7-8.9 0-14.8-5.3-14.8-14.9 0-7 3.6-15.7 15.4-15.7 1.8 0 6.9-.2 10.8 3.8 3.9 4.1 4.1 9.8 4.2 13.1h-21.4c-.1 3.6 1.8 7.3 6.5 7.3 4.8 0 6.2-3.1 7.3-5.1l6.7 3.3zm-8.2-10.8c-.2-1.2-.4-2.9-1.7-4.1-1.1-1.1-2.8-1.6-4.3-1.6-2.1 0-3.6 1-4.5 1.9-1.2 1.3-1.5 2.6-1.8 3.9l12.3-.1z"
  }), React.createElement("path", {
    d: "M208.7 35.7l-11-15.3 9.1-13.8h-10l-4.3 6.5-4.7-6.5h-10l9.9 13.8-10.2 15.3h10l5.3-8.1 5.8 8.1h10.1zM44.9 9.1c.8-1.3 3.5-3.3 7.8-3.3 7.3 0 12.5 5.4 12.5 15.1 0 6-2.2 15.4-12.9 15.4-3.8 0-6.8-2.1-7.5-3.3v12.2H36V6.5h8.9v2.6zm6 3.4c-1.6 0-3.3.6-4.5 2.2-1.3 1.5-1.8 3.8-1.8 6.4 0 3.4 1 5.5 2.1 6.7 1 1.1 2.5 1.8 4 1.8 4.3 0 6.2-4.4 6.2-8.7 0-3.6-1.1-7.4-4.7-8.2-.5-.1-.9-.2-1.3-.2z"
  }));
});
OpentextLogo.propTypes = {
  width: PropTypes__default.string,
  height: PropTypes__default.string,
  label: PropTypes__default.string
};

const OpentextLoginLogo = forwardRef((_a, ref) => {
  var {
      width = '189px',
      height = '31px',
      label = 'OpenText'
    } = _a,
    props = __rest(_a, ["width", "height", "label"]);
  const {
    logoProps,
    titleId,
    style
  } = useLogoProps(Object.assign({
    width,
    height,
    label
  }, props));
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 189 31",
    style: style
  }, logoProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    d: "M60.4089 15.095C60.4089 19.6932 57.7616 24.6751 50.6586 24.6751C45.5404 24.6726 40.875 21.817 40.875 15.095C40.875 9.51947 44.392 5.23607 51.3569 5.61989C58.7745 6.03697 60.4115 11.7865 60.4115 15.095H60.4089ZM47.1774 11.5946C46.5149 12.613 46.272 13.8387 46.272 15.0618C46.272 17.8816 47.666 20.4378 50.6586 20.4378C53.6512 20.4378 54.9761 18.0863 54.9761 15.2997C54.9761 13.3295 54.4876 11.7993 53.4798 10.8475C52.3646 9.82908 51.1113 9.79326 50.3465 9.86234C48.8144 9.96469 47.9089 10.4739 47.1774 11.5946Z"
  }), React.createElement("path", {
    d: "M107.941 7.67414C108.463 7.11632 108.811 6.69924 109.752 6.24634C110.588 5.89834 111.772 5.61944 113.059 5.61944C114.138 5.61944 115.359 5.79343 116.297 6.31543C118.213 7.32614 118.699 8.96376 118.699 11.7835V24.2192H113.371V13.979C113.371 12.3414 113.335 11.7503 113.128 11.2615C112.711 10.2867 111.77 9.86701 110.726 9.86701C107.905 9.86701 107.905 12.1315 107.905 14.3961V24.2192H102.541V6.07234H107.938V7.67414H107.941Z"
  }), React.createElement("path", {
    d: "M99.9961 19.5238C99.505 20.5601 97.9243 24.6747 90.9415 24.6747C85.5446 24.6747 81.7488 21.3713 81.7488 15.4144C81.7488 11.0261 83.9076 5.61943 91.0822 5.61943C92.1616 5.61943 95.2949 5.48637 97.6276 7.99397C99.9961 10.5374 100.134 14.089 100.203 16.1462H87.2148C87.179 18.4108 88.4681 20.6753 91.3584 20.6753C94.2488 20.6753 95.2923 18.7588 95.9548 17.4717L99.9936 19.5264L99.9961 19.5238ZM94.6682 12.7994C94.5634 12.0317 94.4252 11.0236 93.6579 10.2227C92.9954 9.55995 91.9877 9.21195 91.0464 9.21195C89.7573 9.21195 88.8518 9.83885 88.33 10.3967C87.5985 11.1976 87.4246 12.0343 87.2506 12.7994H94.6682Z"
  }), React.createElement("path", {
    d: "M174.559 9.83934H178.112V6.07282H174.595V2.25H169.267V6.07282H168.423L165.983 9.83934H169.267V18.4727C169.267 20.2152 169.303 21.5023 170.035 22.5821C171.183 24.2529 173.204 24.3579 175.048 24.3579C176.022 24.3579 176.718 24.2529 177.869 24.079V19.8979L175.953 19.967C174.526 19.967 174.526 19.0254 174.559 17.9123V9.83678V9.83934Z"
  }), React.createElement("path", {
    d: "M121.37 2.25H126.698V6.07282H132.235L129.798 9.83934H126.664V17.9148C126.629 19.0305 126.629 19.9695 128.058 19.9695L129.974 19.9005V24.0815C128.826 24.2555 128.127 24.3604 127.153 24.3604C125.306 24.3604 123.288 24.2555 122.14 22.5846C121.408 21.5048 121.372 20.2152 121.372 18.4752V2.25H121.37Z"
  }), React.createElement("path", {
    d: "M183.046 9.839H182.389V6.62773H181.174V6.07248H184.238V6.62773H183.046V9.839ZM188.208 9.839H187.561L187.584 7.51307L187.617 6.74032L187.436 7.3749L186.663 9.839H186.072L185.121 6.75055L185.167 7.51051L185.19 9.83644H184.555V6.06736H185.451L186.392 9.04066L187.31 6.06736H188.205V9.83644L188.208 9.839Z"
  }), React.createElement("path", {
    d: "M149.02 19.5394L147.999 21.1156C147.045 22.5178 145.247 24.6723 140.101 24.6723C134.954 24.6723 131.077 21.3689 131.077 15.4121C131.077 11.0238 133.236 5.61707 140.41 5.61707C141.49 5.61707 144.623 5.48402 146.956 7.99162C149.324 10.535 149.462 14.0866 149.531 16.1439H136.543C136.507 18.4084 137.627 20.6729 140.518 20.6729C143.408 20.6729 144.283 18.7564 144.945 17.4693L149.02 19.542V19.5394ZM143.996 12.7996C143.891 12.0319 143.753 11.0238 142.986 10.2229C142.323 9.56015 141.316 9.21216 140.374 9.21216C139.085 9.21216 138.18 9.83906 137.658 10.3969C136.926 11.1978 136.753 12.0345 136.579 12.7996H143.996Z"
  }), React.createElement("path", {
    d: "M167.272 24.2221L160.612 14.6701L166.167 6.07264H160.07L157.448 10.1309L154.616 6.07264H148.521L154.514 14.6701L148.342 24.2221H154.44L157.678 19.2069L161.177 24.2221H167.272Z"
  }), React.createElement("path", {
    d: "M67.7783 7.67414C68.2899 6.89371 69.9345 5.61944 72.5486 5.61944C77.0068 5.61944 80.1401 8.99959 80.1401 15.0588C80.1401 18.7869 78.7819 24.6721 72.3235 24.6721C70.001 24.6721 68.2003 23.3799 67.7425 22.6174V30.2298H62.3788V6.07234H67.7757V7.67414H67.7783ZM71.4001 9.8056C70.4256 9.8056 69.4153 10.1945 68.6505 11.1669C67.8832 12.1059 67.5353 13.567 67.5353 15.1535C67.5353 17.2926 68.162 18.5899 68.8244 19.3345C69.4434 20.033 70.3566 20.4322 71.2262 20.4322C73.8377 20.4322 74.9862 17.6815 74.9862 15.023C74.9862 12.7866 74.3237 10.4197 72.1317 9.90028C71.8887 9.83631 71.6431 9.80304 71.4001 9.80304V9.8056Z"
  }), React.createElement("g", {
    clipPath: "url(#clip0_29544_370)"
  }, React.createElement("path", {
    d: "M0 4.5C0 2.01472 2.01472 0 4.5 0H25.5C27.9853 0 30 2.01472 30 4.5V25.5C30 27.9853 27.9853 30 25.5 30H4.5C2.01472 30 0 27.9853 0 25.5V4.5Z",
    fill: "url(#paint0_linear_29544_370)"
  }), React.createElement("path", {
    d: "M20.9916 12.9348C20.9916 12.7616 21.1339 12.6173 21.3091 12.6173H22.9758C23.0837 12.6173 23.1834 12.5643 23.2424 12.4727L24.5102 10.517C24.6486 10.3053 24.4961 10.0266 24.2436 10.0266H21.3356C21.1606 10.0266 21.0182 9.88405 21.0182 9.70905V7.7151C21.0182 7.54009 20.8757 7.39355 20.7007 7.39355H17.6665C17.4915 7.39355 17.3489 7.53591 17.3489 7.71111V13.2611C16.2807 11.2074 14.1349 9.80402 11.6601 9.80402C8.11998 9.80402 5.25 12.674 5.25 16.2141C5.25 19.7543 8.11998 22.6244 11.6601 22.6244C14.1387 22.6244 16.2873 21.2166 17.3539 19.158C17.3724 20.0615 17.4612 20.7734 17.8761 21.3865C18.6657 22.5382 20.0576 22.6095 21.3274 22.6095C21.9176 22.6095 22.3592 22.5546 22.9961 22.4588C23.1528 22.4345 23.2688 22.3001 23.2688 22.1432V19.8701C23.2688 19.691 23.1203 19.5466 22.9391 19.5526L21.9502 19.5892C20.9673 19.5892 20.9918 18.9453 20.9918 18.1748L20.9916 12.9348ZM11.6599 19.0917C10.0707 19.0917 8.78257 17.8033 8.78257 16.2141C8.78257 14.6249 10.0709 13.3366 11.6599 13.3366C13.2489 13.3366 14.5373 14.6249 14.5373 16.2141C14.5373 17.8033 13.2489 19.0917 11.6599 19.0917Z",
    fill: "white"
  })), React.createElement("defs", null, React.createElement("linearGradient", {
    id: "paint0_linear_29544_370",
    x1: "4.5",
    y1: "4.39364",
    x2: "25.3125",
    y2: "25.2061",
    gradientUnits: "userSpaceOnUse"
  }, React.createElement("stop", {
    stopColor: "#1A6AFF"
  }), React.createElement("stop", {
    offset: "1",
    stopColor: "#00008B"
  })), React.createElement("clipPath", {
    id: "clip0_29544_370"
  }, React.createElement("rect", {
    width: "30",
    height: "30",
    fill: "white"
  }))));
});
OpentextLoginLogo.propTypes = {
  width: PropTypes__default.string,
  height: PropTypes__default.string,
  label: PropTypes__default.string
};

const OpentextSmallLogo = forwardRef((_a, ref) => {
  var {
      width = '26px',
      height = '20px',
      label = 'OpenText'
    } = _a,
    props = __rest(_a, ["width", "height", "label"]);
  const {
    logoProps,
    titleId,
    style
  } = useLogoProps(Object.assign({
    width,
    height,
    label
  }, props));
  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 26 20",
    style: style
  }, logoProps), label && React.createElement("title", {
    id: titleId
  }, label), React.createElement("path", {
    d: "M16.7189 0.00534528H20.801C21.0366 0.00534528 21.2283 0.192426 21.2283 0.422268V3.04139C21.2283 3.27124 21.4201 3.45831 21.6557 3.45831H25.5707C25.9104 3.45831 26.1159 3.82446 25.9296 4.10241L24.2228 6.67075C24.1434 6.79102 24.0091 6.86051 23.8639 6.86051H21.6201C21.3845 6.86051 21.1927 7.04759 21.1927 7.27743V14.1593C21.1599 15.1669 21.1599 16.0168 22.4831 16.0168L23.8146 15.9687C24.0584 15.9606 24.2584 16.1504 24.2584 16.3856V19.3708C24.2584 19.5766 24.1023 19.753 23.8913 19.7851C23.0338 19.9107 22.4393 19.9829 21.6448 19.9829C19.9352 19.9829 18.0613 19.8893 16.9983 18.3766C16.3216 17.4012 16.2887 16.2359 16.2887 14.6618V0.416922C16.2887 0.187081 16.4805 0 16.7161 0L16.7189 0.00534528Z",
    style: {
      fill: 'var(--uxa-logo__fill, currentColor)'
    }
  }), React.createElement("path", {
    d: "M9.19011 3.1829C3.98201 2.86219 -0.31105 7.05012 0.0177095 12.1307C0.288936 16.3213 3.77379 19.7181 8.06959 19.9827C13.2777 20.3034 17.5707 16.1155 17.242 11.0349C16.9708 6.84433 13.4859 3.44749 9.19285 3.18023L9.19011 3.1829ZM9.13258 15.3324C6.59839 15.6451 4.46693 13.5659 4.78473 11.0911C5.00116 9.40734 6.39839 8.04432 8.12438 7.83319C10.6586 7.52049 12.79 9.60243 12.4722 12.0746C12.2558 13.7583 10.8586 15.1186 9.13258 15.3324Z",
    style: {
      fill: 'var(--uxa-logo__fill, currentColor)'
    }
  }));
});
OpentextSmallLogo.propTypes = {
  width: PropTypes__default.string,
  height: PropTypes__default.string,
  label: PropTypes__default.string
};

export { OpentextLoginLogo, OpentextLogo, OpentextSmallLogo, useLogoProps };
