import { ThemeProps } from 'styled-components';
type StyledTheme = ThemeProps<typeof microFocusDark>;
export declare const microFocusDark: {
    colorGray95: string;
    colorGray95Rgb: string;
    colorGray95Contrast: string;
    colorGray95ContrastRgb: string;
    colorGray90: string;
    colorGray90Rgb: string;
    colorGray90Contrast: string;
    colorGray90ContrastRgb: string;
    colorGray80: string;
    colorGray80Rgb: string;
    colorGray80Contrast: string;
    colorGray80ContrastRgb: string;
    colorGray75: string;
    colorGray75Rgb: string;
    colorGray75Contrast: string;
    colorGray75ContrastRgb: string;
    colorGray70: string;
    colorGray70Rgb: string;
    colorGray70Contrast: string;
    colorGray70ContrastRgb: string;
    colorGray60: string;
    colorGray60Rgb: string;
    colorGray60Contrast: string;
    colorGray60ContrastRgb: string;
    colorGray50: string;
    colorGray50Rgb: string;
    colorGray50Contrast: string;
    colorGray50ContrastRgb: string;
    colorGray40: string;
    colorGray40Rgb: string;
    colorGray40Contrast: string;
    colorGray40ContrastRgb: string;
    colorGray30: string;
    colorGray30Rgb: string;
    colorGray30Contrast: string;
    colorGray30ContrastRgb: string;
    colorGray25: string;
    colorGray25Rgb: string;
    colorGray25Contrast: string;
    colorGray25ContrastRgb: string;
    colorGray20: string;
    colorGray20Rgb: string;
    colorGray20Contrast: string;
    colorGray20ContrastRgb: string;
    colorGray10: string;
    colorGray10Rgb: string;
    colorGray10Contrast: string;
    colorGray10ContrastRgb: string;
    colorGray05: string;
    colorGray05Rgb: string;
    colorGray05Contrast: string;
    colorGray05ContrastRgb: string;
    colorBlue: string;
    colorBlueRgb: string;
    colorBlueContrast: string;
    colorBlueContrastRgb: string;
    colorWhite: string;
    colorWhiteRgb: string;
    colorWhiteContrast: string;
    colorWhiteContrastRgb: string;
    colorBlack: string;
    colorBlackRgb: string;
    colorBlackContrast: string;
    colorBlackContrastRgb: string;
    colorStatusSuccess: string;
    colorStatusSuccessRgb: string;
    colorStatusSuccessContrast: string;
    colorStatusSuccessContrastRgb: string;
    colorStatusWarning: (props: StyledTheme) => string;
    colorStatusWarningRgb: (props: StyledTheme) => string;
    colorStatusWarningContrast: (props: StyledTheme) => string;
    colorStatusWarningContrastRgb: (props: StyledTheme) => string;
    colorStatusError: string;
    colorStatusErrorRgb: string;
    colorStatusErrorContrast: string;
    colorStatusErrorContrastRgb: string;
    colorStatusInfo: string;
    colorStatusInfoRgb: string;
    colorStatusInfoContrast: string;
    colorStatusInfoContrastRgb: string;
    colorSeverityNormal: string;
    colorSeverityNormalRgb: string;
    colorSeverityNormalContrast: string;
    colorSeverityNormalContrastRgb: string;
    colorSeverityMinor: (props: StyledTheme) => string;
    colorSeverityMinorRgb: (props: StyledTheme) => string;
    colorSeverityMinorContrast: (props: StyledTheme) => string;
    colorSeverityMinorContrastRgb: (props: StyledTheme) => string;
    colorSeverityMajor: string;
    colorSeverityMajorRgb: string;
    colorSeverityMajorContrast: string;
    colorSeverityMajorContrastRgb: string;
    colorSeverityCritical: string;
    colorSeverityCriticalRgb: string;
    colorSeverityCriticalContrast: string;
    colorSeverityCriticalContrastRgb: string;
    colorSeverityWarning: string;
    colorSeverityWarningRgb: string;
    colorSeverityWarningContrast: string;
    colorSeverityWarningContrastRgb: string;
    colorSeverityUnknown: string;
    colorSeverityUnknownRgb: string;
    colorSeverityUnknownContrast: string;
    colorSeverityUnknownContrastRgb: string;
    colorSeverityNone: string;
    colorSeverityNoneRgb: string;
    colorSeverityNoneContrast: string;
    colorSeverityNoneContrastRgb: string;
    colorPrimary: (props: StyledTheme) => string;
    colorPrimaryRgb: (props: StyledTheme) => string;
    colorPrimaryContrast: (props: StyledTheme) => string;
    colorPrimaryContrastRgb: (props: StyledTheme) => string;
    colorPrimaryHover: string;
    colorPrimaryHoverRgb: string;
    colorPrimaryHoverContrast: string;
    colorPrimaryHoverContrastRgb: string;
    colorPrimaryActive: string;
    colorPrimaryActiveRgb: string;
    colorPrimaryActiveContrast: string;
    colorPrimaryActiveContrastRgb: string;
    colorPrimaryFocus: (props: StyledTheme) => string;
    colorPrimaryFocusRgb: (props: StyledTheme) => string;
    colorPrimaryFocusContrast: (props: StyledTheme) => string;
    colorPrimaryFocusContrastRgb: (props: StyledTheme) => string;
    colorPrimaryFlat: string;
    colorPrimaryFlatHover: (props: StyledTheme) => string;
    colorPrimaryFlatActive: (props: StyledTheme) => string;
    colorPrimaryFlatFocus: (props: StyledTheme) => string;
    colorSecondary: string;
    colorSecondaryRgb: string;
    colorSecondaryContrast: string;
    colorSecondaryContrastRgb: string;
    colorSecondaryHover: string;
    colorSecondaryHoverRgb: string;
    colorSecondaryHoverContrast: string;
    colorSecondaryHoverContrastRgb: string;
    colorSecondaryActive: string;
    colorSecondaryActiveRgb: string;
    colorSecondaryActiveContrast: string;
    colorSecondaryActiveContrastRgb: string;
    colorSecondaryFocus: (props: StyledTheme) => string;
    colorSecondaryFocusRgb: (props: StyledTheme) => string;
    colorSecondaryFocusContrast: (props: StyledTheme) => string;
    colorSecondaryFocusContrastRgb: (props: StyledTheme) => string;
    colorSecondaryFlat: string;
    colorSecondaryFlatHover: string;
    colorSecondaryFlatActive: string;
    colorSecondaryFlatFocus: (props: StyledTheme) => string;
    colorNegative: (props: StyledTheme) => string;
    colorNegativeRgb: (props: StyledTheme) => string;
    colorNegativeContrast: (props: StyledTheme) => string;
    colorNegativeContrastRgb: (props: StyledTheme) => string;
    colorNegativeHover: string;
    colorNegativeHoverRgb: string;
    colorNegativeHoverContrast: string;
    colorNegativeHoverContrastRgb: string;
    colorNegativeActive: string;
    colorNegativeActiveRgb: string;
    colorNegativeActiveContrast: string;
    colorNegativeActiveContrastRgb: string;
    colorNegativeFocus: (props: StyledTheme) => string;
    colorNegativeFocusRgb: (props: StyledTheme) => string;
    colorNegativeFocusContrast: (props: StyledTheme) => string;
    colorNegativeFocusContrastRgb: (props: StyledTheme) => string;
    colorNegativeFlat: string;
    colorNegativeFlatHover: (props: StyledTheme) => string;
    colorNegativeFlatActive: (props: StyledTheme) => string;
    colorNegativeFlatFocus: (props: StyledTheme) => string;
    colorBubbleGum: string;
    colorBubbleGumRgb: string;
    colorBubbleGumContrast: string;
    colorBubbleGumContrastRgb: string;
    colorSalmonPink: string;
    colorSalmonPinkRgb: string;
    colorSalmonPinkContrast: string;
    colorSalmonPinkContrastRgb: string;
    colorSalmonRed: string;
    colorSalmonRedRgb: string;
    colorSalmonRedContrast: string;
    colorSalmonRedContrastRgb: string;
    colorRed: string;
    colorRedRgb: string;
    colorRedContrast: string;
    colorRedContrastRgb: string;
    colorPlum: string;
    colorPlumRgb: string;
    colorPlumContrast: string;
    colorPlumContrastRgb: string;
    colorCherryRed: string;
    colorCherryRedRgb: string;
    colorCherryRedContrast: string;
    colorCherryRedContrastRgb: string;
    colorNeonPink: string;
    colorNeonPinkRgb: string;
    colorNeonPinkContrast: string;
    colorNeonPinkContrastRgb: string;
    colorHotPink: string;
    colorHotPinkRgb: string;
    colorHotPinkContrast: string;
    colorHotPinkContrastRgb: string;
    colorMagenta: string;
    colorMagentaRgb: string;
    colorMagentaContrast: string;
    colorMagentaContrastRgb: string;
    colorFuchsia: string;
    colorFuchsiaRgb: string;
    colorFuchsiaContrast: string;
    colorFuchsiaContrastRgb: string;
    colorPurple: string;
    colorPurpleRgb: string;
    colorPurpleContrast: string;
    colorPurpleContrastRgb: string;
    colorTaffy: string;
    colorTaffyRgb: string;
    colorTaffyContrast: string;
    colorTaffyContrastRgb: string;
    colorBarbiePink: string;
    colorBarbiePinkRgb: string;
    colorBarbiePinkContrast: string;
    colorBarbiePinkContrastRgb: string;
    colorFlamingo: string;
    colorFlamingoRgb: string;
    colorFlamingoContrast: string;
    colorFlamingoContrastRgb: string;
    colorCarnationPink: string;
    colorCarnationPinkRgb: string;
    colorCarnationPinkContrast: string;
    colorCarnationPinkContrastRgb: string;
    colorPaleEggplant: string;
    colorPaleEggplantRgb: string;
    colorPaleEggplantContrast: string;
    colorPaleEggplantContrastRgb: string;
    colorViolet: string;
    colorVioletRgb: string;
    colorVioletContrast: string;
    colorVioletContrastRgb: string;
    colorIndigo: string;
    colorIndigoRgb: string;
    colorIndigoContrast: string;
    colorIndigoContrastRgb: string;
    colorPalePurple: string;
    colorPalePurpleRgb: string;
    colorPalePurpleContrast: string;
    colorPalePurpleContrastRgb: string;
    colorMauve: string;
    colorMauveRgb: string;
    colorMauveContrast: string;
    colorMauveContrastRgb: string;
    colorIris: string;
    colorIrisRgb: string;
    colorIrisContrast: string;
    colorIrisContrastRgb: string;
    colorDarkUltramarine: string;
    colorDarkUltramarineRgb: string;
    colorDarkUltramarineContrast: string;
    colorDarkUltramarineContrastRgb: string;
    colorDarkBlue: string;
    colorDarkBlueRgb: string;
    colorDarkBlueContrast: string;
    colorDarkBlueContrastRgb: string;
    colorUltramarine: string;
    colorUltramarineRgb: string;
    colorUltramarineContrast: string;
    colorUltramarineContrastRgb: string;
    colorSteelblue: string;
    colorSteelblueRgb: string;
    colorSteelblueContrast: string;
    colorSteelblueContrastRgb: string;
    colorCerulean: string;
    colorCeruleanRgb: string;
    colorCeruleanContrast: string;
    colorCeruleanContrastRgb: string;
    colorSkyblue: string;
    colorSkyblueRgb: string;
    colorSkyblueContrast: string;
    colorSkyblueContrastRgb: string;
    colorAqua: string;
    colorAquaRgb: string;
    colorAquaContrast: string;
    colorAquaContrastRgb: string;
    colorPaleAqua: string;
    colorPaleAquaRgb: string;
    colorPaleAquaContrast: string;
    colorPaleAquaContrastRgb: string;
    colorArcticBlue: string;
    colorArcticBlueRgb: string;
    colorArcticBlueContrast: string;
    colorArcticBlueContrastRgb: string;
    colorSapphire: string;
    colorSapphireRgb: string;
    colorSapphireContrast: string;
    colorSapphireContrastRgb: string;
    colorPacificBlue: string;
    colorPacificBlueRgb: string;
    colorPacificBlueContrast: string;
    colorPacificBlueContrastRgb: string;
    colorLightBlue: string;
    colorLightBlueRgb: string;
    colorLightBlueContrast: string;
    colorLightBlueContrastRgb: string;
    colorLightCyan: string;
    colorLightCyanRgb: string;
    colorLightCyanContrast: string;
    colorLightCyanContrastRgb: string;
    colorMint: string;
    colorMintRgb: string;
    colorMintContrast: string;
    colorMintContrastRgb: string;
    colorAquamarine: string;
    colorAquamarineRgb: string;
    colorAquamarineContrast: string;
    colorAquamarineContrastRgb: string;
    colorPaleGreen: string;
    colorPaleGreenRgb: string;
    colorPaleGreenContrast: string;
    colorPaleGreenContrastRgb: string;
    colorEmerald: string;
    colorEmeraldRgb: string;
    colorEmeraldContrast: string;
    colorEmeraldContrastRgb: string;
    colorPaleEmerald: string;
    colorPaleEmeraldRgb: string;
    colorPaleEmeraldContrast: string;
    colorPaleEmeraldContrastRgb: string;
    colorLeafGreen: string;
    colorLeafGreenRgb: string;
    colorLeafGreenContrast: string;
    colorLeafGreenContrastRgb: string;
    colorSeaGreen: string;
    colorSeaGreenRgb: string;
    colorSeaGreenContrast: string;
    colorSeaGreenContrastRgb: string;
    colorForestGreen: string;
    colorForestGreenRgb: string;
    colorForestGreenContrast: string;
    colorForestGreenContrastRgb: string;
    colorOlive: string;
    colorOliveRgb: string;
    colorOliveContrast: string;
    colorOliveContrastRgb: string;
    colorLime: string;
    colorLimeRgb: string;
    colorLimeContrast: string;
    colorLimeContrastRgb: string;
    colorAcidGreen: string;
    colorAcidGreenRgb: string;
    colorAcidGreenContrast: string;
    colorAcidGreenContrastRgb: string;
    colorYellowGreen: string;
    colorYellowGreenRgb: string;
    colorYellowGreenContrast: string;
    colorYellowGreenContrastRgb: string;
    colorCanaryYellow: string;
    colorCanaryYellowRgb: string;
    colorCanaryYellowContrast: string;
    colorCanaryYellowContrastRgb: string;
    colorPaleLemon: string;
    colorPaleLemonRgb: string;
    colorPaleLemonContrast: string;
    colorPaleLemonContrastRgb: string;
    colorYellow: string;
    colorYellowRgb: string;
    colorYellowContrast: string;
    colorYellowContrastRgb: string;
    colorOrange: string;
    colorOrangeRgb: string;
    colorOrangeContrast: string;
    colorOrangeContrastRgb: string;
    colorGoldenrod: string;
    colorGoldenrodRgb: string;
    colorGoldenrodContrast: string;
    colorGoldenrodContrastRgb: string;
    colorAmber: string;
    colorAmberRgb: string;
    colorAmberContrast: string;
    colorAmberContrastRgb: string;
    colorPaleAmber: string;
    colorPaleAmberRgb: string;
    colorPaleAmberContrast: string;
    colorPaleAmberContrastRgb: string;
    colorOrangeJuice: string;
    colorOrangeJuiceRgb: string;
    colorOrangeJuiceContrast: string;
    colorOrangeJuiceContrastRgb: string;
    colorCopper: string;
    colorCopperRgb: string;
    colorCopperContrast: string;
    colorCopperContrastRgb: string;
    colorOchre: string;
    colorOchreRgb: string;
    colorOchreContrast: string;
    colorOchreContrastRgb: string;
    colorGoldenBrown: string;
    colorGoldenBrownRgb: string;
    colorGoldenBrownContrast: string;
    colorGoldenBrownContrastRgb: string;
    colorDarkOlive: string;
    colorDarkOliveRgb: string;
    colorDarkOliveContrast: string;
    colorDarkOliveContrastRgb: string;
    colorDarkGreen: string;
    colorDarkGreenRgb: string;
    colorDarkGreenContrast: string;
    colorDarkGreenContrastRgb: string;
    colorAvocado: string;
    colorAvocadoRgb: string;
    colorAvocadoContrast: string;
    colorAvocadoContrastRgb: string;
    colorOliveOil: string;
    colorOliveOilRgb: string;
    colorOliveOilContrast: string;
    colorOliveOilContrastRgb: string;
    colorCamel: string;
    colorCamelRgb: string;
    colorCamelContrast: string;
    colorCamelContrastRgb: string;
    colorKhaki: string;
    colorKhakiRgb: string;
    colorKhakiContrast: string;
    colorKhakiContrastRgb: string;
    colorChampagne: string;
    colorChampagneRgb: string;
    colorChampagneContrast: string;
    colorChampagneContrastRgb: string;
    colorCitron: string;
    colorCitronRgb: string;
    colorCitronContrast: string;
    colorCitronContrastRgb: string;
    colorWarmGray: string;
    colorWarmGrayRgb: string;
    colorWarmGrayContrast: string;
    colorWarmGrayContrastRgb: string;
    colorCoolGray: string;
    colorCoolGrayRgb: string;
    colorCoolGrayContrast: string;
    colorCoolGrayContrastRgb: string;
    applicationColor: (props: StyledTheme) => string;
    applicationColorRgb: (props: StyledTheme) => string;
    applicationColorContrast: (props: StyledTheme) => string;
    applicationColorContrastRgb: (props: StyledTheme) => string;
    applicationBackgroundColor: (props: StyledTheme) => string;
    spacing2xs: string;
    spacingXs: string;
    spacingS: string;
    spacingM: string;
    spacingL: string;
    spacingXl: string;
    spacing2xl: string;
    spacing3xl: string;
    spacing4xl: string;
    spacingXxs: string;
    spacingXxl: string;
    spacingXxl2: string;
    typographyLinkOpacityHover: string;
    typographyLinkBorderRadiusFocus: string;
    typographyLinkOutlineColorFocus: (props: StyledTheme) => string;
    typographyLinkOutlineOffsetFocus: string;
    typographyLinkTextDecorationHover: string;
    typographyFontFamily: string;
    typographyFontFamilyRoboto: string;
    typographyFontFamilyZhHans: string;
    typographyFontFamilyJa: string;
    typographyFontFamilyKo: string;
    typographyFontSizeXsmall: string;
    typographyFontSizeSmall: string;
    typographyFontSize: string;
    typographyFontSizeLarge: string;
    typographyFontSizeXlarge: string;
    typographyFontWeightThin: string;
    typographyFontWeightLight: string;
    typographyFontWeightRegular: string;
    typographyFontWeightMedium: string;
    typographyFontWeightSemibold: string;
    typographyFontWeightBold: string;
    typographyFontWeightBlack: string;
    typographyColorHighEmphasis: (props: StyledTheme) => string;
    typographyColorHighEmphasisRgb: (props: StyledTheme) => string;
    typographyColorHighEmphasisContrast: (props: StyledTheme) => string;
    typographyColorHighEmphasisContrastRgb: (props: StyledTheme) => string;
    typographyColorBody: (props: StyledTheme) => string;
    typographyColorBodyRgb: (props: StyledTheme) => string;
    typographyColorBodyContrast: (props: StyledTheme) => string;
    typographyColorBodyContrastRgb: (props: StyledTheme) => string;
    typographyColorSecondary: (props: StyledTheme) => string;
    typographyColorSecondaryRgb: (props: StyledTheme) => string;
    typographyColorSecondaryContrast: (props: StyledTheme) => string;
    typographyColorSecondaryContrastRgb: (props: StyledTheme) => string;
    typographyColorTertiary: (props: StyledTheme) => string;
    typographyColorTertiaryRgb: (props: StyledTheme) => string;
    typographyColorTertiaryContrast: (props: StyledTheme) => string;
    typographyColorTertiaryContrastRgb: (props: StyledTheme) => string;
    typographyColorLightest: (props: StyledTheme) => string;
    typographyColorLightestRgb: (props: StyledTheme) => string;
    typographyColorLightestContrast: (props: StyledTheme) => string;
    typographyColorLightestContrastRgb: (props: StyledTheme) => string;
    typographyColorPlaceholder: string;
    typographyColorPlaceholderRgb: string;
    typographyColorPlaceholderContrast: string;
    typographyColorPlaceholderContrastRgb: string;
    typographyColorDisabled: string;
    typographyColorDisabledRgb: string;
    typographyColorDisabledContrast: string;
    typographyColorDisabledContrastRgb: string;
    typographyColorLink: string;
    typographyColorLinkRgb: string;
    typographyColorLinkContrast: string;
    typographyColorLinkContrastRgb: string;
    typographyColorLinkHover: string;
    typographyColorLinkFocus: (props: StyledTheme) => string;
    typographyColorLinkActive: (props: StyledTheme) => string;
    typographyColorLinkVisited: (props: StyledTheme) => string;
    typographyColor: (props: StyledTheme) => string;
    typographyColorRgb: (props: StyledTheme) => string;
    typographyColorContrast: (props: StyledTheme) => string;
    typographyColorContrastRgb: (props: StyledTheme) => string;
    typographyHeading1FontSize: string;
    typographyHeading1FontWeight: (props: StyledTheme) => string;
    typographyHeading1Color: (props: StyledTheme) => string;
    typographyHeading1TextTransform: string;
    typographyHeading1LineHeight: string;
    typographyHeading2FontSize: string;
    typographyHeading2FontWeight: (props: StyledTheme) => string;
    typographyHeading2Color: (props: StyledTheme) => string;
    typographyHeading2TextTransform: string;
    typographyHeading2LineHeight: string;
    typographyHeading3FontSize: string;
    typographyHeading3FontWeight: (props: StyledTheme) => string;
    typographyHeading3Color: (props: StyledTheme) => string;
    typographyHeading3TextTransform: string;
    typographyHeading3LineHeight: string;
    typographyHeading4FontSize: string;
    typographyHeading4FontWeight: (props: StyledTheme) => string;
    typographyHeading4Color: (props: StyledTheme) => string;
    typographyHeading4TextTransform: string;
    typographyHeading4LineHeight: string;
    typographyHeading5FontSize: string;
    typographyHeading5FontWeight: (props: StyledTheme) => string;
    typographyHeading5Color: (props: StyledTheme) => string;
    typographyHeading5TextTransform: string;
    typographyHeading5LineHeight: string;
    typographyHeading6FontSize: string;
    typographyHeading6FontWeight: (props: StyledTheme) => string;
    typographyHeading6Color: (props: StyledTheme) => string;
    typographyHeading6TextTransform: string;
    typographyHeading6LineHeight: string;
    typographyBodyFontSize: (props: StyledTheme) => string;
    typographyBodyFontWeight: (props: StyledTheme) => string;
    typographyBodyColor: (props: StyledTheme) => string;
    typographyBodyTextTransform: string;
    typographyBodyLineHeight: string;
    typographyBodyLargeFontSize: (props: StyledTheme) => string;
    typographyBodyLargeFontWeight: (props: StyledTheme) => string;
    typographyBodyLargeColor: (props: StyledTheme) => string;
    typographyBodyLargeTextTransform: string;
    typographyBodyLargeLineHeight: string;
    typographyBodySmallFontSize: (props: StyledTheme) => string;
    typographyBodySmallFontWeight: (props: StyledTheme) => string;
    typographyBodySmallColor: (props: StyledTheme) => string;
    typographyBodySmallTextTransform: string;
    typographyBodySmallLineHeight: string;
    typographyLinkFontSize: string;
    typographyLinkFontWeight: (props: StyledTheme) => string;
    typographyLinkColor: (props: StyledTheme) => string;
    typographyLinkTextTransform: string;
    typographyLinkLineHeight: string;
    typographyLinkTextDecoration: string;
    typographyLinkColorHover: (props: StyledTheme) => string;
    typographyLinkColorActive: (props: StyledTheme) => string;
    typographyLinkColorVisited: (props: StyledTheme) => string;
    typographyLinkColorFocus: (props: StyledTheme) => string;
    typographyLabelFontSize: (props: StyledTheme) => string;
    typographyLabelFontWeight: (props: StyledTheme) => string;
    typographyLabelColor: (props: StyledTheme) => string;
    typographyLabelTextTransform: string;
    typographyLabelLineHeight: string;
    focusOutlineColor: string;
    focusOutlineOffset: string;
    focusOutlineWidth: string;
    focusOutlineStyle: string;
    focusIndicatorBoxShadow: (props: StyledTheme) => string;
    focusIndicatorOutline: (props: StyledTheme) => string;
    overlayZIndex: string;
    elevationBackgroundColorBase: (props: StyledTheme) => string;
    elevationBoxShadowBase: string;
    elevationBorderColorBase: string;
    elevationBackgroundColor1: (props: StyledTheme) => string;
    elevationBoxShadowColor1: string;
    elevationBoxShadow1: (props: StyledTheme) => string;
    elevationBorderColor1: string;
    elevationBackgroundColor2: (props: StyledTheme) => string;
    elevationBoxShadowColor2: string;
    elevationBoxShadow2: (props: StyledTheme) => string;
    elevationBorderColor2: (props: StyledTheme) => string;
    elevationBackgroundColor3: (props: StyledTheme) => string;
    elevationBoxShadowColor3: string;
    elevationBoxShadow3: (props: StyledTheme) => string;
    elevationBorderColor3: (props: StyledTheme) => string;
    elevationBackgroundColor4: (props: StyledTheme) => string;
    elevationBoxShadowColor4: string;
    elevationBoxShadow4: (props: StyledTheme) => string;
    elevationBorderColor4: (props: StyledTheme) => string;
    elevationBackgroundColor: (props: StyledTheme) => string;
    elevationBoxShadow: (props: StyledTheme) => string;
    elevationBorderColor: (props: StyledTheme) => string;
    productIconPaddingInline: string;
    productIconFontWeight: (props: StyledTheme) => string;
    accordionBorderWidth: string;
    accordionBorderStyle: string;
    accordionBorderColor: (props: StyledTheme) => string;
    accordionHeaderGap: string;
    accordionHeaderFontWeight: (props: StyledTheme) => string;
    accordionHeaderFontSize: (props: StyledTheme) => string;
    accordionHeaderColor: (props: StyledTheme) => string;
    accordionHeaderBackgroundColor: string;
    accordionHeaderBackgroundColorHover: (props: StyledTheme) => string;
    accordionHeaderPaddingInline: string;
    accordionHeaderPaddingBlock: string;
    accordionHeaderBorderTopWidth: (props: StyledTheme) => string;
    accordionHeaderBorderTopStyle: (props: StyledTheme) => string;
    accordionHeaderBorderTopColor: (props: StyledTheme) => string;
    accordionHeaderFocusOutlineOffset: string;
    accordionIconTransform: string;
    accordionIconTransformExpanded: string;
    accordionIconSize: string;
    accordionIconHeight: string;
    accordionIconFill: (props: StyledTheme) => string;
    accordionContentPaddingBlock: string;
    accordionContentPaddingInline: string;
    accordionContentPaddingInlineLeadingIcon: (props: StyledTheme) => string;
    alertFontSize: (props: StyledTheme) => string;
    alertFontWeight: (props: StyledTheme) => string;
    alertMinHeight: string;
    alertLineHeight: string;
    alertHeight: string;
    alertBorderWidth: string;
    alertBorderStyle: string;
    alertBorderColor: string;
    alertPaddingInline: string;
    alertPaddingBlock: string;
    alertBackgroundColorInfo: (props: StyledTheme) => string;
    alertColorInfo: (props: StyledTheme) => string;
    alertBackgroundColorError: (props: StyledTheme) => string;
    alertColorError: (props: StyledTheme) => string;
    alertBackgroundColorSuccess: (props: StyledTheme) => string;
    alertColorSuccess: (props: StyledTheme) => string;
    alertBackgroundColorWarning: (props: StyledTheme) => string;
    alertColorWarning: (props: StyledTheme) => string;
    alertBackgroundColorDark: (props: StyledTheme) => string;
    alertColorDark: (props: StyledTheme) => string;
    alertIconWidth: string;
    alertIconHeight: string;
    alertIconFontSize: (props: StyledTheme) => string;
    alertIconMarginInlineEnd: string;
    alertDismissBorder: string;
    alertDismissBorderRadius: string;
    alertDismissBackgroundColor: string;
    alertDismissCursor: string;
    alertDismissPaddingInline: string;
    alertDismissPaddingBlock: string;
    alertDismissMinWidth: string;
    alertDismissMarginInlineStart: string;
    alertDismissOutlineOffsetFocus: string;
    alertLinkFontWeight: (props: StyledTheme) => string;
    appLayoutGridTemplateColumns: string;
    appLayoutGridTemplateRows: string;
    appLayoutHeight: string;
    appLayoutAlertsGridColumn: string;
    appLayoutMastheadGridColumn: string;
    appLayoutSideMenuGridColumn: string;
    appLayoutMainContentGridColumn: string;
    appLayoutOverflowX: string;
    appLayoutOverflowY: string;
    appContentLayoutHeight: string;
    avatarBorderRadius: string;
    avatarColor: string;
    avatarBorderColorHover: string;
    avatarBorderColorActive: string;
    avatarBorderColorBordered: string;
    avatarOutlineFocused: (props: StyledTheme) => string;
    avatarOutlineOffsetFocused: (props: StyledTheme) => string;
    avatarSizeXs: string;
    avatarFontSizeXs: string;
    avatarLineHeightXs: string;
    avatarFontWeightXs: string;
    avatarBorderWidthXs: string;
    avatarSizeSm: string;
    avatarFontSizeSm: string;
    avatarLineHeightSm: string;
    avatarFontWeightSm: string;
    avatarBorderWidthSm: string;
    avatarSizeMd: string;
    avatarFontSizeMd: string;
    avatarLineHeightMd: string;
    avatarFontWeightMd: string;
    avatarBorderWidthMd: string;
    avatarSizeLg: string;
    avatarFontSizeLg: string;
    avatarLineHeightLg: string;
    avatarFontWeightLg: string;
    avatarBorderWidthLg: string;
    jatoAvatarBackgroundPink: string;
    jatoAvatarBackgroundPurple: string;
    jatoAvatarBackgroundBlue: string;
    jatoAvatarBackgroundCerulean: string;
    jatoAvatarBackgroundTeal: string;
    jatoAvatarBackgroundNavy: string;
    jatoAvatarBackgroundSteel: string;
    breadcrumbsDisplay: string;
    breadcrumbsMinHeight: string;
    breadcrumbColor: (props: StyledTheme) => string;
    breadcrumbFontWeight: string;
    breadcrumbFontSize: string;
    breadcrumbGap: string;
    breadcrumbTextDecoration: string;
    breadcrumbOutline: string;
    breadcrumbHeight: string;
    breadcrumbWidth: string;
    breadcrumbPaddingInline: string;
    breadcrumbPaddingBlock: string;
    breadcrumbBorderRadius: string;
    breadcrumbColorHover: (props: StyledTheme) => string;
    breadcrumbTextDecorationHover: string;
    breadcrumbCursorHover: string;
    breadcrumbColorActive: (props: StyledTheme) => string;
    breadcrumbTextDecorationActive: string;
    breadcrumbCursorActive: string;
    breadcrumbColorCurrent: (props: StyledTheme) => string;
    breadcrumbFontWeightCurrent: string;
    breadcrumbTextDecorationCurrent: string;
    breadcrumbCursorCurrent: string;
    breadcrumbOutlineOffsetFocus: string;
    breadcrumbOverflowButtonColor: (props: StyledTheme) => string;
    breadcrumbOverflowButtonColorHover: (props: StyledTheme) => string;
    breadcrumbOverflowButtonColorActive: (props: StyledTheme) => string;
    breadcrumbSeparatorBackgroundImage: string;
    breadcrumbSeparatorWidth: string;
    breadcrumbSeparatorHeight: string;
    breadcrumbSeparatorFontSize: string;
    breadcrumbSeparatorColor: (props: StyledTheme) => string;
    breadcrumbSeparatorDisplay: string;
    breadcrumbFontSizeMasthead: string;
    breadcrumbColorMasthead: (props: StyledTheme) => string;
    breadcrumbColorMastheadHover: (props: StyledTheme) => string;
    breadcrumbColorMastheadCurrent: (props: StyledTheme) => string;
    breadcrumbSeparatorColorMasthead: (props: StyledTheme) => string;
    breadcrumbSeparatorBackgroundImageMasthead: string;
    breadcrumbListColumnGap: string;
    breadcrumbButtonColor: (props: StyledTheme) => string;
    breadcrumbButtonColorHover: (props: StyledTheme) => string;
    breadcrumbButtonColorActive: (props: StyledTheme) => string;
    breadcrumbButtonColorFocused: (props: StyledTheme) => string;
    breadcrumbCollapsedMenuItemsColor: (props: StyledTheme) => string;
    breadcrumbCollapsedMenuItemsColorHover: (props: StyledTheme) => string;
    breadcrumbCollapsedMenuItemsColorActive: (props: StyledTheme) => string;
    buttonColumnGap: string;
    buttonFontSize: (props: StyledTheme) => string;
    buttonCursor: string;
    buttonHeight: string;
    buttonPaddingInline: string;
    buttonPaddingBlock: string;
    buttonFontWeight: (props: StyledTheme) => string;
    buttonTextTransform: string;
    buttonLineHeight: string;
    buttonBorderColor: (props: StyledTheme) => string;
    buttonBorderRadius: string;
    buttonBorderWidth: string;
    buttonBorderStyle: string;
    buttonMinWidth: string;
    buttonBoxShadow: string;
    buttonTextAlign: string;
    buttonBoxSizing: string;
    buttonIconSize: string;
    buttonCursorDisabled: string;
    buttonBoxShadowFocused: (props: StyledTheme) => string;
    buttonColorPrimary: (props: StyledTheme) => string;
    buttonBackgroundColorPrimary: (props: StyledTheme) => string;
    buttonBorderColorPrimary: string;
    buttonBorderWidthPrimary: string;
    buttonBorderStylePrimary: string;
    buttonBoxShadowPrimaryHover: string;
    buttonBorderColorPrimaryHover: (props: StyledTheme) => string;
    buttonColorPrimaryHover: (props: StyledTheme) => string;
    buttonBackgroundColorPrimaryHover: (props: StyledTheme) => string;
    buttonBoxShadowPrimaryActive: string;
    buttonBorderColorPrimaryActive: (props: StyledTheme) => string;
    buttonColorPrimaryActive: (props: StyledTheme) => string;
    buttonBackgroundColorPrimaryActive: (props: StyledTheme) => string;
    buttonBoxShadowPrimaryFocused: (props: StyledTheme) => string;
    buttonBorderColorPrimaryFocused: (props: StyledTheme) => string;
    buttonColorPrimaryFocused: (props: StyledTheme) => string;
    buttonBackgroundColorPrimaryFocused: (props: StyledTheme) => string;
    buttonColorPrimaryDisabled: (props: StyledTheme) => string;
    buttonBackgroundColorPrimaryDisabled: (props: StyledTheme) => string;
    buttonBorderColorPrimaryDisabled: (props: StyledTheme) => string;
    buttonColorSecondary: (props: StyledTheme) => string;
    buttonBackgroundColorSecondary: string;
    buttonBorderColorSecondary: (props: StyledTheme) => string;
    buttonBorderWidthSecondary: string;
    buttonBorderStyleSecondary: string;
    buttonBoxShadowSecondaryHover: string;
    buttonBorderColorSecondaryHover: (props: StyledTheme) => string;
    buttonColorSecondaryHover: (props: StyledTheme) => string;
    buttonBackgroundColorSecondaryHover: (props: StyledTheme) => string;
    buttonBoxShadowSecondaryActive: string;
    buttonBorderColorSecondaryActive: (props: StyledTheme) => string;
    buttonColorSecondaryActive: (props: StyledTheme) => string;
    buttonBackgroundColorSecondaryActive: (props: StyledTheme) => string;
    buttonBoxShadowSecondaryFocused: (props: StyledTheme) => string;
    buttonBorderColorSecondaryFocused: (props: StyledTheme) => string;
    buttonColorSecondaryFocused: (props: StyledTheme) => string;
    buttonBackgroundColorSecondaryFocused: (props: StyledTheme) => string;
    buttonColorSecondaryDisabled: (props: StyledTheme) => string;
    buttonBackgroundColorSecondaryDisabled: string;
    buttonBorderColorSecondaryDisabled: (props: StyledTheme) => string;
    buttonColorNegative: (props: StyledTheme) => string;
    buttonBackgroundColorNegative: (props: StyledTheme) => string;
    buttonBorderColorNegative: string;
    buttonBorderWidthNegative: string;
    buttonBorderStyleNegative: string;
    buttonBoxShadowNegativeHover: string;
    buttonBorderColorNegativeHover: (props: StyledTheme) => string;
    buttonColorNegativeHover: (props: StyledTheme) => string;
    buttonBackgroundColorNegativeHover: (props: StyledTheme) => string;
    buttonBoxShadowNegativeActive: string;
    buttonBorderColorNegativeActive: (props: StyledTheme) => string;
    buttonColorNegativeActive: (props: StyledTheme) => string;
    buttonBackgroundColorNegativeActive: (props: StyledTheme) => string;
    buttonBoxShadowNegativeFocused: (props: StyledTheme) => string;
    buttonBorderColorNegativeFocused: (props: StyledTheme) => string;
    buttonColorNegativeFocused: (props: StyledTheme) => string;
    buttonBackgroundColorNegativeFocused: (props: StyledTheme) => string;
    buttonColorNegativeDisabled: (props: StyledTheme) => string;
    buttonBackgroundColorNegativeDisabled: (props: StyledTheme) => string;
    buttonBorderColorNegativeDisabled: string;
    buttonHeightFlat: (props: StyledTheme) => string;
    buttonFontSizeFlat: (props: StyledTheme) => string;
    buttonFontWeightFlat: (props: StyledTheme) => string;
    buttonTextTransformFlat: (props: StyledTheme) => string;
    buttonLineHeightFlat: (props: StyledTheme) => string;
    buttonPaddingInlineFlat: string;
    buttonPaddingBlockFlat: string;
    buttonBackgroundColorFlat: string;
    buttonBorderColorFlat: string;
    buttonBorderWidthFlat: (props: StyledTheme) => string;
    buttonBorderStyleFlat: (props: StyledTheme) => string;
    buttonBorderRadiusFlat: (props: StyledTheme) => string;
    buttonCursorFlat: (props: StyledTheme) => string;
    buttonMinWidthFlat: (props: StyledTheme) => string;
    buttonBackgroundColorFlatExpanded: (props: StyledTheme) => string;
    buttonBackgroundColorFlatExpandedHover: (props: StyledTheme) => string;
    buttonBackgroundColorFlatExpandedActive: (props: StyledTheme) => string;
    buttonColorFlatPrimary: (props: StyledTheme) => string;
    buttonBackgroundColorFlatPrimary: string;
    buttonBorderColorFlatPrimary: string;
    buttonBorderWidthFlatPrimary: string;
    buttonBorderStyleFlatPrimary: string;
    buttonBoxShadowFlatPrimaryHover: string;
    buttonBorderColorFlatPrimaryHover: (props: StyledTheme) => string;
    buttonColorFlatPrimaryHover: (props: StyledTheme) => string;
    buttonBackgroundColorFlatPrimaryHover: (props: StyledTheme) => string;
    buttonBoxShadowFlatPrimaryActive: string;
    buttonBorderColorFlatPrimaryActive: (props: StyledTheme) => string;
    buttonColorFlatPrimaryActive: (props: StyledTheme) => string;
    buttonBackgroundColorFlatPrimaryActive: (props: StyledTheme) => string;
    buttonColorFlatPrimaryDisabled: (props: StyledTheme) => string;
    buttonBackgroundColorFlatPrimaryDisabled: string;
    buttonBorderColorFlatPrimaryDisabled: string;
    buttonBoxShadowFlatPrimaryFocused: (props: StyledTheme) => string;
    buttonBorderColorFlatPrimaryFocused: (props: StyledTheme) => string;
    buttonColorFlatPrimaryFocused: (props: StyledTheme) => string;
    buttonBackgroundColorFlatPrimaryFocused: (props: StyledTheme) => string;
    buttonColorFlatSecondary: (props: StyledTheme) => string;
    buttonBackgroundColorFlatSecondary: (props: StyledTheme) => string;
    buttonBorderColorFlatSecondary: (props: StyledTheme) => string;
    buttonBorderWidthFlatSecondary: string;
    buttonBorderStyleFlatSecondary: string;
    buttonFontWeightFlatSecondary: (props: StyledTheme) => string;
    buttonBoxShadowFlatSecondaryHover: string;
    buttonBorderColorFlatSecondaryHover: (props: StyledTheme) => string;
    buttonColorFlatSecondaryHover: (props: StyledTheme) => string;
    buttonBackgroundColorFlatSecondaryHover: (props: StyledTheme) => string;
    buttonBoxShadowFlatSecondaryActive: string;
    buttonBorderColorFlatSecondaryActive: (props: StyledTheme) => string;
    buttonColorFlatSecondaryActive: (props: StyledTheme) => string;
    buttonBackgroundColorFlatSecondaryActive: (props: StyledTheme) => string;
    buttonColorFlatSecondaryDisabled: (props: StyledTheme) => string;
    buttonBackgroundColorFlatSecondaryDisabled: string;
    buttonBorderColorFlatSecondaryDisabled: string;
    buttonBoxShadowFlatSecondaryFocused: (props: StyledTheme) => string;
    buttonBorderColorFlatSecondaryFocused: (props: StyledTheme) => string;
    buttonColorFlatSecondaryFocused: (props: StyledTheme) => string;
    buttonBackgroundColorFlatSecondaryFocused: (props: StyledTheme) => string;
    buttonColorFlatNegative: (props: StyledTheme) => string;
    buttonBackgroundColorFlatNegative: string;
    buttonBorderColorFlatNegative: (props: StyledTheme) => string;
    buttonBorderWidthFlatNegative: string;
    buttonBorderStyleFlatNegative: string;
    buttonBoxShadowFlatNegativeHover: string;
    buttonBorderColorFlatNegativeHover: (props: StyledTheme) => string;
    buttonColorFlatNegativeHover: (props: StyledTheme) => string;
    buttonBackgroundColorFlatNegativeHover: (props: StyledTheme) => string;
    buttonBoxShadowFlatNegativeActive: string;
    buttonBorderColorFlatNegativeActive: (props: StyledTheme) => string;
    buttonColorFlatNegativeActive: (props: StyledTheme) => string;
    buttonBackgroundColorFlatNegativeActive: (props: StyledTheme) => string;
    buttonColorFlatNegativeDisabled: (props: StyledTheme) => string;
    buttonBackgroundColorFlatNegativeDisabled: string;
    buttonBorderColorFlatNegativeDisabled: (props: StyledTheme) => string;
    buttonBoxShadowFlatNegativeFocused: (props: StyledTheme) => string;
    buttonBorderColorFlatNegativeFocused: (props: StyledTheme) => string;
    buttonColorFlatNegativeFocused: (props: StyledTheme) => string;
    buttonBackgroundColorFlatNegativeFocused: (props: StyledTheme) => string;
    buttonColumnGapSmall: (props: StyledTheme) => string;
    buttonHeightSmall: string;
    buttonMinWidthSmall: string;
    buttonBorderRadiusSmall: (props: StyledTheme) => string;
    buttonPaddingInlineSmall: string;
    buttonPaddingBlockSmall: string;
    buttonFontSizeSmall: (props: StyledTheme) => string;
    buttonPaddingInlineFlatSmall: string;
    buttonPaddingBlockFlatSmall: string;
    buttonColumnGapLarge: (props: StyledTheme) => string;
    buttonHeightLarge: string;
    buttonMinWidthLarge: string;
    buttonBorderRadiusLarge: (props: StyledTheme) => string;
    buttonPaddingInlineLarge: string;
    buttonPaddingBlockLarge: string;
    buttonFontSizeLarge: string;
    buttonPaddingInlineFlatLarge: string;
    buttonPaddingBlockFlatLarge: string;
    cardGap: string;
    cardPaddingBlock: string;
    cardPaddingInline: string;
    cardBorderRadius: string;
    cardBackgroundColor: (props: StyledTheme) => string;
    cardBoxShadow: (props: StyledTheme) => string;
    cardOutlineFocus: (props: StyledTheme) => string;
    cardOutlineOffsetFocus: string;
    cardBoxShadowBasicHover: (props: StyledTheme) => string;
    cardBoxShadowBasicActive: (props: StyledTheme) => string;
    cardBoxShadowThumbnailActive: (props: StyledTheme) => string;
    cardBoxShadowPreviewActive: (props: StyledTheme) => string;
    cardImageWidth: (props: StyledTheme) => string;
    cardImageHeight: string;
    cardImageMarginInline: (props: StyledTheme) => string;
    cardImageMarginBlockStart: (props: StyledTheme) => string;
    cardImageMarginBlockEnd: string;
    cardHeaderGap: string;
    cardTitleFontSize: string;
    cardTitleFontWeight: string;
    cardTitleLineHeight: string;
    cardTitleColor: (props: StyledTheme) => string;
    cardTitleFontWeightThumbnail: string;
    cardTitleFontSizeThumbnail: string;
    cardTitleLineHeightThumbnail: string;
    cardSubtitleFontSize: string;
    cardSubtitleFontWeight: string;
    cardSubtitleLineHeight: string;
    cardSubtitleColor: (props: StyledTheme) => string;
    cardBodyGap: string;
    cardAvatarSize: string;
    cardThumbnailSize: string;
    cardChipListGap: string;
    cardContentFontSize: string;
    cardContentFontWeight: string;
    cardContentLineHeight: string;
    cardContentColor: (props: StyledTheme) => string;
    cardContentFontSizeSmall: string;
    cardContentColorSmall: (props: StyledTheme) => string;
    cardFooterGapStacked: string;
    cardFooterLeadingGap: string;
    cardFooterTrailingGap: string;
    checkboxWidth: string;
    checkboxHeight: (props: StyledTheme) => string;
    checkboxBorderStyle: string;
    checkboxBorderWidth: string;
    checkboxBorderColor: (props: StyledTheme) => string;
    checkboxBorderRadius: string;
    checkboxCursor: string;
    checkboxBackgroundColor: string;
    checkboxMarginBlock: string;
    checkboxBackgroundColorHover: (props: StyledTheme) => string;
    checkboxBorderColorHover: (props: StyledTheme) => string;
    checkboxBackgroundColorFocused: (props: StyledTheme) => string;
    checkboxBackgroundColorActive: (props: StyledTheme) => string;
    checkboxBorderColorActive: (props: StyledTheme) => string;
    checkboxBackgroundColorChecked: (props: StyledTheme) => string;
    checkboxBorderColorChecked: (props: StyledTheme) => string;
    checkboxBorderWidthChecked: string;
    checkboxBackgroundColorCheckedHover: (props: StyledTheme) => string;
    checkboxBackgroundColorCheckedActive: (props: StyledTheme) => string;
    checkboxBackgroundColorIndeterminate: (props: StyledTheme) => string;
    checkboxBorderColorIndeterminate: (props: StyledTheme) => string;
    checkboxBorderWidthIndeterminate: string;
    checkboxBackgroundColorIndeterminateHover: (props: StyledTheme) => string;
    checkboxBackgroundColorIndeterminateActive: (props: StyledTheme) => string;
    checkboxCursorReadonly: string;
    checkboxBackgroundColorReadonly: (props: StyledTheme) => string;
    checkboxBorderColorReadonly: (props: StyledTheme) => string;
    checkboxBackgroundColorReadonlyChecked: (props: StyledTheme) => string;
    checkboxBorderColorReadonlyChecked: (props: StyledTheme) => string;
    checkboxBackgroundColorDisabled: string;
    checkboxBorderColorDisabled: (props: StyledTheme) => string;
    checkboxCursorDisabled: string;
    checkboxBackgroundColorCheckedDisabled: (props: StyledTheme) => string;
    checkboxBorderColorCheckedDisabled: (props: StyledTheme) => string;
    checkboxBackgroundColorIndeterminateDisabled: (props: StyledTheme) => string;
    checkboxBorderColorIndeterminateDisabled: (props: StyledTheme) => string;
    checkboxLabelColor: (props: StyledTheme) => string;
    checkboxLabelMarginBlockStart: string;
    checkboxLabelMarginInlineEnd: string;
    checkboxLabelMarginBlockEnd: string;
    checkboxLabelMarginInlineStart: (props: StyledTheme) => string;
    checkboxLabelMarginInline: (props: StyledTheme) => string;
    checkboxLabelMarginBlock: (props: StyledTheme) => string;
    checkboxLabelFontSize: string;
    checkboxLabelFontWeight: string;
    checkboxLabelLineHeight: string;
    checkboxLabelFontWeightChecked: string;
    checkboxLabelColorDisabled: (props: StyledTheme) => string;
    checkboxTickBackgroundImageHover: string;
    checkboxTickBackgroundImageActive: string;
    checkboxTickBackgroundImageChecked: string;
    checkboxTickBackgroundImageCheckedHover: (props: StyledTheme) => string;
    checkboxTickBackgroundImageCheckedActive: (props: StyledTheme) => string;
    checkboxTickBackgroundImageCheckedReadonly: (props: StyledTheme) => string;
    checkboxTickBackgroundImageCheckedDisabled: (props: StyledTheme) => string;
    checkboxTickBackgroundImageIndeterminate: string;
    checkboxTickBackgroundImageIndeterminateHover: (props: StyledTheme) => string;
    checkboxTickBackgroundImageIndeterminateActive: (props: StyledTheme) => string;
    checkboxTickBackgroundImageIndeterminateDisabled: (props: StyledTheme) => string;
    checkboxGroupGap: string;
    checkboxGroupGapCompact: string;
    checkboxGroupGapSpacious: string;
    checkboxGroupGapHorizontal: string;
    checkboxGroupGapHorizontalCompact: string;
    checkboxGroupGapHorizontalSpacious: string;
    checkboxContainerHeight: string;
    checkboxContainerBorderRadius: string;
    checkboxContainerBackgroundColor: string;
    checkboxContainerPaddingInline: string;
    checkboxContainerPaddingBlock: string;
    checkboxContainerAlignItems: string;
    checkboxContainerBackgroundColorHover: string;
    checkboxContainerBackgroundColorActive: string;
    chipHeight: string;
    chipBorderRadius: string;
    chipBorderWidth: string;
    chipBorderStyle: string;
    chipBorderColor: string;
    chipPaddingInlineStart: string;
    chipPaddingInlineEnd: string;
    chipFontWeight: string;
    chipColor: (props: StyledTheme) => string;
    chipBackgroundColor: string;
    chipFontSize: (props: StyledTheme) => string;
    chipCursor: string;
    chipBoxShadow: string;
    chipTransition: string;
    chipContentContainerColumnGap: string;
    chipContentContainerLineHeight: string;
    chipFontSizeLarge: (props: StyledTheme) => string;
    chipPaddingInlineStartLarge: string;
    chipPaddingInlineEndLarge: string;
    chipHeightLarge: string;
    chipBoxShadowFocused: (props: StyledTheme) => string;
    chipCursorSelectable: string;
    chipBoxShadowSelectable: string;
    chipBackgroundColorSelectableHover: (props: StyledTheme) => string;
    chipBorderColorSelectableHover: (props: StyledTheme) => string;
    chipBoxShadowSelectableHover: string;
    chipBackgroundColorSelectableActive: (props: StyledTheme) => string;
    chipBorderColorSelectableActive: (props: StyledTheme) => string;
    chipBoxShadowSelectableActive: string;
    chipPaddingInlineEndRemovable: string;
    chipPaddingInlineEndLargeRemovable: string;
    chipBackgroundColorRemovableHover: (props: StyledTheme) => string;
    chipBorderColorRemovableHover: (props: StyledTheme) => string;
    chipBackgroundColorRemovableActive: (props: StyledTheme) => string;
    chipBorderColorRemovableActive: (props: StyledTheme) => string;
    chipFontWeightSelected: string;
    chipColorSelected: (props: StyledTheme) => string;
    chipBackgroundColorSelected: string;
    chipBorderColorSelected: string;
    chipBorderWidthSelected: string;
    chipBoxShadowSelected: string;
    chipBackgroundColorSelectedHover: string;
    chipBorderColorSelectedHover: string;
    chipBoxShadowSelectedHover: string;
    chipBackgroundColorSelectedActive: (props: StyledTheme) => string;
    chipBorderColorSelectedActive: (props: StyledTheme) => string;
    chipBoxShadowSelectedActive: (props: StyledTheme) => string;
    chipBoxShadowSelectedFocused: (props: StyledTheme) => string;
    chipBoxShadowSelectableFocused: (props: StyledTheme) => string;
    chipBackgroundColorReadonly: (props: StyledTheme) => string;
    chipBorderColorReadonly: (props: StyledTheme) => string;
    chipBoxShadowReadonly: (props: StyledTheme) => string;
    chipBackgroundColorDisabled: string;
    chipBorderColorDisabled: string;
    chipColorDisabled: string;
    chipBoxShadowDisabled: string;
    chipBackgroundColorDragging: (props: StyledTheme) => string;
    chipBorderColorDragging: (props: StyledTheme) => string;
    chipBorderWidthDragging: (props: StyledTheme) => string;
    chipBoxShadowDragging: (props: StyledTheme) => string;
    chipRemoveContainerWidth: string;
    chipRemoveContainerHeight: string;
    chipRemoveContainerPaddingInlineEnd: string;
    chipRemoveContainerWidthLarge: string;
    chipRemoveContainerPaddingInlineEndLarge: string;
    chipRemoveBorderRadius: string;
    chipRemoveSize: string;
    chipRemoveColor: (props: StyledTheme) => string;
    chipRemoveBackgroundColor: string;
    chipRemoveBorderWidth: string;
    chipRemoveBorderStyle: string;
    chipRemoveBorderColor: string;
    chipRemoveBorder: (props: StyledTheme) => string;
    chipRemoveBackgroundColorHover: (props: StyledTheme) => string;
    chipRemoveColorHover: (props: StyledTheme) => string;
    chipRemoveBackgroundColorActive: (props: StyledTheme) => string;
    chipRemoveColorActive: (props: StyledTheme) => string;
    chipRemoveBackgroundColorSelectedHover: string;
    chipRemoveColorSelectedHover: (props: StyledTheme) => string;
    chipRemoveColorDisabled: (props: StyledTheme) => string;
    chipRemoveBoxShadowFocused: (props: StyledTheme) => string;
    chipRemoveIconSize: string;
    chipColorTagSize: string;
    chipColorTagBorderRadius: string;
    chipColorTagOpacity: string;
    chipColorTagBoxShadow: string;
    chipColorTagSizeLarge: string;
    chipAvatarSize: string;
    chipAvatarBorderRadius: string;
    chipAvatarFontWeight: (props: StyledTheme) => string;
    chipAvatarFontSize: string;
    chipAvatarTextAlign: string;
    chipAvatarMarginStart: (props: StyledTheme) => string;
    chipAvatarBackgroundSize: string;
    chipAvatarOpacity: string;
    chipAvatarBoxShadow: string;
    chipAvatarSizeLarge: string;
    chipAvatarFontSizeLarge: string;
    chipAvatarMarginStartLarge: (props: StyledTheme) => string;
    chipAvatarBackgroundColorDisabled: (props: StyledTheme) => string;
    chipAvatarOpacityDisabled: string;
    chipAvatarImageBoxShadow: string;
    chipMultiSelectMaxHeight: string;
    chipMultiSelectBorderWidth: string;
    chipMultiSelectBorderStyle: string;
    chipMultiSelectBorderColor: (props: StyledTheme) => string;
    chipMultiSelectDisplay: string;
    chipMultiSelectGap: string;
    chipMultiSelectPaddingInline: string;
    chipMultiSelectPaddingBlock: string;
    chipMultiSelectOverflow: string;
    chipMultiSelectAlignItems: string;
    chipMultiSelectPosition: string;
    chipMultiSelectMinHeight: string;
    chipMultiSelectBoxSizing: string;
    chipMultiSelectBorderRadius: string;
    chipMultiSelectJustifyContent: string;
    chipMultiSelectOverflowY: string;
    chipMultiSelectPaddingInlineStart: string;
    chipMultiSelectFontSize: string;
    chipMultiSelectBoxShadow: (props: StyledTheme) => string;
    chipMultiSelectFontFamily: (props: StyledTheme) => string;
    chipMultiSelectMaxHeightLarge: string;
    chipMultiSelectArrowTopLarge: string;
    chipMultiSelectClearTopLarge: string;
    chipMultiSelectFlexWrap: string;
    chipMultiSelectPaddingInlineStartEmpty: string;
    chipMultiSelectBorderActive: (props: StyledTheme) => string;
    chipMultiSelectFlexWrapActive: string;
    chipMultiSelectBorderColorError: (props: StyledTheme) => string;
    chipMultiSelectBorderColorSuccess: (props: StyledTheme) => string;
    chipMultiSelectBackgroundColorDisabled: (props: StyledTheme) => string;
    chipMultiSelectBorderColorDisabled: (props: StyledTheme) => string;
    chipMultiSelectArrowColorDisabled: (props: StyledTheme) => string;
    chipMultiSelectBorderColorHover: (props: StyledTheme) => string;
    chipMultiSelectBorderColorActive: (props: StyledTheme) => string;
    chipMultiSelectContainerDisplay: string;
    chipMultiSelectContainerGap: string;
    chipMultiSelectContainerFlexWrap: string;
    chipMultiSelectContainerWidth: string;
    chipMultiSelectContainerPaddingInlineEnd: string;
    chipMultiSelectContainerBoxSizing: string;
    chipMultiSelectContainerCursor: string;
    chipMultiSelectInputBorder: string;
    chipMultiSelectInputBoxSizing: string;
    chipMultiSelectInputMinHeight: string;
    chipMultiSelectInputDisplay: string;
    chipMultiSelectInputFlex: string;
    chipMultiSelectInputMinWidth: string;
    chipMultiSelectInputOutline: string;
    chipMultiSelectInputColor: (props: StyledTheme) => string;
    chipMultiSelectInputFontSize: (props: StyledTheme) => string;
    chipMultiSelectInputFontFamily: (props: StyledTheme) => string;
    chipMultiSelectArrowTop: string;
    chipMultiSelectArrowPosition: string;
    chipMultiSelectArrowInsetInlineEnd: string;
    chipMultiSelectArrowTransform: string;
    chipMultiSelectArrowFontSize: string;
    chipMultiSelectArrowColor: (props: StyledTheme) => string;
    chipMultiSelectClearPosition: string;
    chipMultiSelectClearTop: string;
    chipMultiSelectClearInsetInlineEnd: string;
    chipMultiSelectClearTransform: string;
    chipMultiSelectCounterMarginInlineStart: string;
    chipMultiSelectCounterDisplay: string;
    chipMultiSelectCounterAlignItems: string;
    chipMultiSelectCounterBackgroundColor: (props: StyledTheme) => string;
    chipMultiSelectCounterBackgroundColorSelectableHover: (props: StyledTheme) => string;
    chipMultiSelectCounterColor: (props: StyledTheme) => string;
    chipMultiSelectCounterCursor: string;
    chipMultiSelectChipMaxWidth: string;
    chipMultiSelectChipOverflow: string;
    chipMultiSelectChipTextOverflow: string;
    chipMultiSelectChipWhiteSpace: string;
    chipMultiSelectChipBackgroundColorDisabled: string;
    chipMultiSelectChipColor: (props: StyledTheme) => string;
    chipMultiSelectChipColorDisabled: (props: StyledTheme) => string;
    coachmarkContainerWidth: string;
    coachmarkContainerBorder: string;
    coachmarkBorderColor: string;
    coachmarkBorderRadius: string;
    coachmarkBackground: string;
    coachmarkBoxShadow: string;
    coachmarkColor: string;
    coachmarkLayoutPaddingInline: string;
    coachmarkLayoutPaddingBlock: string;
    coachmarkLayoutBackground: string;
    coachmarkDividerColor: string;
    coachmarkContentFontWeight: string;
    coachmarkContentFontSize: string;
    coachmarkContentLineHeight: string;
    coachmarkContentLetterSpacing: string;
    coachmarkContentColor: string;
    coachmarkHeaderTitleFontWeight: string;
    coachmarkHeaderTitleFontSize: string;
    coachmarkHeaderTitleLineHeight: string;
    coachmarkHeaderTitleLetterSpacing: string;
    coachmarkHeaderTitleColor: string;
    coachmarkFooterFontWeight: string;
    coachmarkFooterFontSize: string;
    coachmarkFooterLineHeight: string;
    coachmarkFooterLetterSpacing: string;
    typographyLinkColorDisabled: string;
    coachmarkSlidePaginationMarkerBackgroundColor: string;
    coachmarkSlidePaginationSelectedBackgroundColor: string;
    coachmarkNextButtonColor: string;
    coachmarkNextButtonPaddingBlock: string;
    coachmarkNextButtonPaddingInline: string;
    coachmarkNextButtonBorderRadius: string;
    coachmarkNextButtonHeight: string;
    datePickerPaddingInline: string;
    datePickerPaddingBlock: string;
    datePickerFontWeight: (props: StyledTheme) => string;
    datePickerHeaderFontWeight: (props: StyledTheme) => string;
    datePickerHeaderMarginBlockEnd: string;
    datePickerHeaderControlBorderRadius: string;
    datePickerHeaderControlIconSize: string;
    datePickerHeaderControlIconTransformRtl: string;
    datePickerSelectMonthMinWidth: string;
    datePickerSelectYearMinWidth: string;
    datePickerSelectSeparatorMinWidth: string;
    datePickerSelectOutlineFocus: string;
    datePickerSelectOutlineOffsetFocus: string;
    datePickerCalendarHeaderColor: (props: StyledTheme) => string;
    datePickerCalendarHeaderMarginBlockEnd: string;
    datePickerCalendarHeaderFontSize: string;
    datePickerCalendarHeaderDayFontWeight: (props: StyledTheme) => string;
    datePickerGridGridTemplateColumns: string;
    datePickerGridGap: string;
    datePickerGridColumnGap: string;
    datePickerGridCellWidth: string;
    datePickerGridCellMinWidth: string;
    datePickerGridCellHeight: (props: StyledTheme) => string;
    datePickerGridCellFontSize: string;
    datePickerGridCellBackgroundColor: string;
    datePickerGridCellBorder: string;
    datePickerGridCellBorderRadius: string;
    datePickerGridCellPaddingInline: string;
    datePickerGridCellPaddingBlock: string;
    datePickerGridCellColor: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorHover: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorActive: (props: StyledTheme) => string;
    datePickerGridCellBorderToday: string;
    datePickerGridCellColorToday: (props: StyledTheme) => string;
    datePickerGridCellFontWeightToday: (props: StyledTheme) => string;
    datePickerGridCellColorTodaySelected: (props: StyledTheme) => string;
    datePickerGridCellColorSelected: (props: StyledTheme) => string;
    datePickerGridCellFontWeightSelected: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorSelected: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowSelected: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowSelectionStart: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorSelectionStart: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorSelectionStartActive: (props: StyledTheme) => string;
    datePickerGridCellBorderRadiusSelectionStart: string;
    datePickerGridCellColorSelectionStart: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorUnderlayStart: string;
    datePickerGridCellBackgroundColorSelectionEnd: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorSelectionEndActive: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowSelectionEnd: (props: StyledTheme) => string;
    datePickerGridCellBorderRadiusSelectionEnd: string;
    datePickerGridCellColorSelectionEnd: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorUnderlayEnd: string;
    datePickerGridCellBorderRadiusSelectionBetween: string;
    datePickerGridCellColorSelectionBetween: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorSelectionBetween: (props: StyledTheme) => string;
    datePickerGridCellColorDisabled: (props: StyledTheme) => string;
    datePickerGridCellColorDisabledSelected: (props: StyledTheme) => string;
    datePickerGridCellBackgroundColorDisabledSelected: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowDisabledSelected: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowDisabledSelectionStart: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowDisabledSelectionEnd: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowFocused: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowFocusedSelected: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowFocusedSelectionStart: (props: StyledTheme) => string;
    datePickerGridCellBoxShadowFocusedSelectionEnd: (props: StyledTheme) => string;
    datePickerGridCellColorOutsideOfMonth: string;
    datePickerGridCellColorOutsideOfMonthDateRange: string;
    datePickerDropdownColumnGap: string;
    datePickerDropdownWidth: string;
    datePickerDropdownHeight: string;
    datePickerDropdownPaddingInline: string;
    datePickerDropdownBorderRadius: string;
    datePickerDropdownBorderColor: (props: StyledTheme) => string;
    datePickerDropdownBackgroundColorHover: (props: StyledTheme) => string;
    datePickerDropdownBorderColorHover: (props: StyledTheme) => string;
    datePickerDropdownBoxShadowHover: string;
    datePickerDropdownBackgroundColorActive: (props: StyledTheme) => string;
    datePickerDropdownBorderColorActive: (props: StyledTheme) => string;
    datePickerDropdownBorderColorFocused: (props: StyledTheme) => string;
    datePickerDropdownBoxShadowFocused: string;
    datePickerDropdownValueColor: (props: StyledTheme) => string;
    datePickerDropdownValueFontSize: string;
    datePickerDropdownValueFontWeight: string;
    datePickerDropdownValueColorHover: (props: StyledTheme) => string;
    datePickerDropdownValueColorActive: (props: StyledTheme) => string;
    datePickerDropdownArrowMinWidth: string;
    datePickerDropdownArrowFontSize: string;
    datePickerDropdownArrowColor: (props: StyledTheme) => string;
    datePickerDropdownArrowColorHover: (props: StyledTheme) => string;
    datePickerDropdownArrowColorActive: (props: StyledTheme) => string;
    dateRangePickerSummaryBorderBottom: (props: StyledTheme) => string;
    dateRangePickerSummaryHeight: string;
    dateRangePickerSummaryMarginInline: string;
    dateRangePickerSummaryMarginBlock: string;
    dateRangePickerSummaryPaddingInline: string;
    dateRangePickerSummaryPaddingBlock: string;
    dateRangePickerSummarySectionMarginBlockEnd: string;
    dateRangePickerSummarySectionFontWeight: (props: StyledTheme) => string;
    dateRangePickerSummarySectionFontSize: (props: StyledTheme) => string;
    dateRangePickerSelectHeaderColor: (props: StyledTheme) => string;
    dateRangePickerDateHeaderColor: (props: StyledTheme) => string;
    dateRangePickerTimeHeaderHeight: string;
    dateRangePickerSummarySeparatorWidth: string;
    dateRangePickerSummarySeparatorColor: (props: StyledTheme) => string;
    dateRangePickerSummarySeparatorPaddingBlockStart: string;
    dateRangePickerSummarySeparatorIconSize: string;
    dateRangePickerSummaryIconTransformRtl: string;
    dateRangePickerSummaryDurationMarginInline: string;
    dateRangePickerSummaryDurationMarginBlock: string;
    dateRangePickerSummaryDurationFontSize: (props: StyledTheme) => string;
    dateTimePickerInputDividerHeight: string;
    dateTimePickerInputDividerMarginInline: string;
    dateTimePickerInputDividerMarginBlock: string;
    dateTimePickerInputDividerMarginBlockStart: string;
    dateTimePickerInputDividerMarginBlockEnd: string;
    dateTimePickerInputDividerColor: (props: StyledTheme) => string;
    dateTimePickerInputAdditionalContentMarginBlockStart: string;
    dateTimePickerInputAdditionalContentAlignItems: string;
    dialogMaxHeight: string;
    dialogBackgroundColor: (props: StyledTheme) => string;
    dialogBoxShadow: (props: StyledTheme) => string;
    dialogBorderColor: (props: StyledTheme) => string;
    dialogBorderStyle: string;
    dialogBorderWidth: string;
    dialogBorder: (props: StyledTheme) => string;
    dialogBorderRadius: string;
    dialogBorderRadiusDrawer: string;
    dialogOverflow: string;
    dialogBorderRadiusModalPanelStart: string;
    dialogBorderRadiusModalPanelEnd: string;
    dialogBorderRadiusModalPanelTop: string;
    dialogBorderRadiusModalPanelBottom: string;
    dialogWidth: string;
    dialogWidthSmall: string;
    dialogWidthLarge: string;
    dialogLayoutGridTemplateRows: string;
    dialogLayoutGridTemplateColumns: string;
    dialogLayoutGridTemplateAreas: string;
    dialogEmphasisIndicatorWidth: string;
    dialogEmphasisIndicatorMarginBlockStart: string;
    dialogEmphasisIndicatorMarginBlockEnd: string;
    dialogEmphasisIndicatorMarginInlineStart: string;
    dialogEmphasisIndicatorMarginInlineEnd: string;
    dialogEmphasisIndicatorBorderRadius: string;
    dialogIconFill: (props: StyledTheme) => string;
    dialogIconSize: string;
    dialogIconMarginInlineStart: string;
    dialogIconMarginInlineEnd: string;
    dialogIconMarginInline: (props: StyledTheme) => string;
    dialogIconMarginBlockStart: string;
    dialogIconMarginBlockEnd: string;
    dialogIconMarginBlock: (props: StyledTheme) => string;
    dialogIconColorInfo: (props: StyledTheme) => string;
    dialogIconColorError: (props: StyledTheme) => string;
    dialogIconColorSuccess: (props: StyledTheme) => string;
    dialogIconColorWarning: (props: StyledTheme) => string;
    dialogIconColorQuestion: (props: StyledTheme) => string;
    dialogHeaderColor: (props: StyledTheme) => string;
    dialogHeaderGap: string;
    dialogHeaderMarginInline: string;
    dialogHeaderMarginBlock: string;
    dialogHeaderPaddingInline: string;
    dialogHeaderPaddingBlock: string;
    dialogHeaderFontSize: string;
    dialogHeaderFontWeight: (props: StyledTheme) => string;
    dialogHeaderLetterSpacing: string;
    dialogHeaderLineHeight: string;
    dialogHeaderOverflowContent: string;
    dialogHeaderPaddingInlineModalMessage: string;
    dialogHeaderMarginInlineModalMessage: string;
    dialogHeaderMarginInlineModalPanel: string;
    dialogHeaderMarginBlockModalPanel: string;
    dialogHeaderPaddingInlineModalPanel: string;
    dialogHeaderPaddingBlockModalPanel: string;
    dialogHeaderTitlePaddingInlineStart: string;
    dialogHeaderTitlePaddingInlineEnd: string;
    dialogHeaderTitlePaddingInline: (props: StyledTheme) => string;
    dialogHeaderTitlePaddingBlockStart: string;
    dialogHeaderTitlePaddingBlockEnd: string;
    dialogHeaderTitlePaddingBlock: (props: StyledTheme) => string;
    dialogHeaderSubtitleFontSize: string;
    dialogHeaderSubtitleFontWeight: string;
    dialogHeaderSubtitleLineHeight: string;
    dialogHeaderSubtitleTextColor: (props: StyledTheme) => string;
    dialogHeaderSubtitlePaddingInlineStart: string;
    dialogHeaderSubtitlePaddingInlineEnd: string;
    dialogHeaderSubtitlePaddingInline: (props: StyledTheme) => string;
    dialogHeaderSubtitlePaddingBlockStart: string;
    dialogHeaderSubtitlePaddingBlockEnd: string;
    dialogHeaderSubtitlePaddingBlock: (props: StyledTheme) => string;
    dialogContentColor: (props: StyledTheme) => string;
    dialogContentFontWeight: (props: StyledTheme) => string;
    dialogContentFontSize: (props: StyledTheme) => string;
    dialogContentLineHeight: (props: StyledTheme) => string;
    dialogContentMarginInline: string;
    dialogContentMarginBlock: string;
    dialogContentPaddingInline: string;
    dialogContentPaddingBlock: string;
    dialogContentBackground: string;
    dialogContentBackgroundRepeat: string;
    dialogContentBackgroundSize: string;
    dialogContentBackgroundAttachment: string;
    dialogContentFocusOutlineOffset: (props: StyledTheme) => string;
    dialogContentPaddingBlockModalMessage: (props: StyledTheme) => string;
    dialogContentMarginInlineModalPanel: string;
    dialogContentMarginBlockModalPanel: string;
    dialogContentMaskImageTop: string;
    dialogContentMaskImageBottom: string;
    dialogContentMaskImageBoth: string;
    dialogFooterBorderStyle: string;
    dialogFooterBorderTopWidth: string;
    dialogFooterBorderRightWidth: string;
    dialogFooterBorderBottomWidth: string;
    dialogFooterBorderLeftWidth: string;
    dialogFooterGap: string;
    dialogFooterBorderColor: (props: StyledTheme) => string;
    dialogFooterOverflowContent: string;
    dialogFooterPaddingInline: string;
    dialogFooterPaddingBlock: string;
    dialogFooterMainPaddingInline: string;
    dialogFooterMainPaddingBlock: string;
    dialogFooterMarginInline: string;
    dialogFooterMarginBlock: string;
    dialogFooterMarginInlineModalPanel: string;
    dialogFooterMarginBlockModalPanel: string;
    dialogFooterPaddingInlineModalPanel: string;
    dialogFooterPaddingBlockModalPanel: string;
    overlayBackdropBackground: (props: StyledTheme) => string;
    overlayBackdropBackdropFilter: string;
    dialogDismissButtonPosition: string;
    dialogDismissButtonTop: (props: StyledTheme) => string;
    dialogDismissButtonInsetInlineEnd: (props: StyledTheme) => string;
    dialogDismissButtonSize: string;
    dialogDismissButtonAlign: string;
    dialogDismissButtonContainerPosition: string;
    flyoutBackgroundColor: (props: StyledTheme) => string;
    flyoutBorderColor: (props: StyledTheme) => string;
    flyoutColor: (props: StyledTheme) => string;
    flyoutBorderRadius: (props: StyledTheme) => string;
    flyoutWrapperBorderRadius: (props: StyledTheme) => string;
    flyoutContentPaddingInlineBelow: (props: StyledTheme) => string;
    flyoutContentPaddingBlockBelow: (props: StyledTheme) => string;
    flyoutContentBoxShadowBelow: string;
    flyoutContentPaddingInlineAbove: (props: StyledTheme) => string;
    flyoutContentPaddingBlockAbove: (props: StyledTheme) => string;
    flyoutContentBoxShadowAbove: string;
    flyoutContentPaddingInlineAfter: (props: StyledTheme) => string;
    flyoutContentPaddingBlockAfter: (props: StyledTheme) => string;
    flyoutContentBoxShadowAfter: string;
    flyoutContentPaddingInlineBefore: (props: StyledTheme) => string;
    flyoutContentPaddingBlockBefore: (props: StyledTheme) => string;
    flyoutContentBoxShadowBefore: string;
    drawerContainerBackgroundColor: (props: StyledTheme) => string;
    drawerAnimationDuration: string;
    drawerContentBorderRadius: string;
    drawerContentBoxShadow: (props: StyledTheme) => string;
    drawerContentBackgroundColor: (props: StyledTheme) => string;
    drawerContentBorderStyle: string;
    drawerContentBorderColor: string;
    drawerContentBorderWidthTopStart: string;
    drawerContentBorderWidthRightStart: string;
    drawerContentBorderWidthBottomStart: string;
    drawerContentBorderWidthLeftStart: string;
    drawerContentBorderWidthTopEnd: string;
    drawerContentBorderWidthRightEnd: string;
    drawerContentBorderWidthBottomEnd: string;
    drawerContentBorderWidthLeftEnd: string;
    drawerContentBorderWidthTopTop: string;
    drawerContentBorderWidthRightTop: string;
    drawerContentBorderWidthBottomTop: string;
    drawerContentBorderWidthLeftTop: string;
    drawerContentBorderWidthTopBottom: string;
    drawerContentBorderWidthRightBottom: string;
    drawerContentBorderWidthBottomBottom: string;
    drawerContentBorderWidthLeftBottom: string;
    drawerResizeHandleSize: string;
    drawerResizeHandleBorderWidth: string;
    drawerResizeHandleBorderStyle: string;
    drawerResizeHandleBorderColor: string;
    drawerResizeHandleBorderColorHover: (props: StyledTheme) => string;
    drawerResizeHandleWidthVertical: (props: StyledTheme) => string;
    drawerResizeHandleHeightHorizontal: (props: StyledTheme) => string;
    drawerResizeHandleIconSize: string;
    drawerResizeHandleIconFill: (props: StyledTheme) => string;
    drawerResizeHandleIconFillHover: (props: StyledTheme) => string;
    formGap: string;
    formFieldLabelMarginBlockEnd: string;
    formFieldLabelLineHeight: (props: StyledTheme) => string;
    formFieldLabelMarginBlockEndHorizontal: string;
    formFieldFeedbackColumnGap: string;
    formFieldFeedbackMarginBlockStart: string;
    formFieldFeedbackBoxShadow: string;
    formFieldFeedbackBorderRadius: string;
    formFieldFeedbackBorderWidthTop: string;
    formFieldFeedbackBorderWidthRight: string;
    formFieldFeedbackBorderWidthBottom: string;
    formFieldFeedbackBorderWidthLeft: string;
    formFieldFeedbackPaddingInline: string;
    formFieldFeedbackPaddingBlock: string;
    formFieldFeedbackContentFontSize: string;
    formFieldFeedbackContentColor: (props: StyledTheme) => string;
    formFieldFeedbackContentLineHeight: string;
    formFieldFeedbackContentFontWeight: string;
    formFieldFeedbackBackgroundError: string;
    formFieldFeedbackBorderColorError: string;
    formFieldFeedbackBackgroundSuccess: string;
    formFieldFeedbackBorderColorSuccess: string;
    formFieldFeedbackMarginBlockStartHorizontal: (props: StyledTheme) => string;
    formFieldFeedbackIconSize: string;
    formFieldFeedbackIconColorError: (props: StyledTheme) => string;
    formFieldFeedbackIconColorSuccess: (props: StyledTheme) => string;
    formFieldFeedbackMarginBlockEndSmall: string;
    formFieldFeedbackMarginBlockEndMedium: string;
    formFieldFeedbackMarginBlockEndLarge: string;
    formFieldGroupGap: string;
    formFieldGroupLabelFontWeight: (props: StyledTheme) => string;
    formFieldGroupLabelFontSize: (props: StyledTheme) => string;
    formFieldGroupLabelColor: (props: StyledTheme) => string;
    formActionGroupGap: string;
    formActionGroupMarginBlockStart: (props: StyledTheme) => string;
    requiredIndicatorColor: (props: StyledTheme) => string;
    requiredIndicatorWidth: string;
    iconButtonPaddingInline: string;
    iconButtonPaddingBlock: string;
    iconButtonBorderRadius: (props: StyledTheme) => string;
    iconButtonWidth: string;
    iconButtonOverflow: string;
    iconButtonCursor: (props: StyledTheme) => string;
    iconButtonHeight: (props: StyledTheme) => string;
    iconButtonMinWidth: (props: StyledTheme) => string;
    iconButtonBorderRadiusCircular: string;
    iconButtonIconSize: string;
    iconButtonWidthExtraSmall: string;
    iconButtonHeightExtraSmall: (props: StyledTheme) => string;
    iconButtonPaddingInlineExtraSmall: string;
    iconButtonPaddingBlockExtraSmall: string;
    iconButtonIconSizeExtraSmall: (props: StyledTheme) => string;
    iconButtonWidthSmall: string;
    iconButtonHeightSmall: (props: StyledTheme) => string;
    iconButtonPaddingInlineSmall: string;
    iconButtonPaddingBlockSmall: string;
    iconButtonIconSizeSmall: (props: StyledTheme) => string;
    iconButtonWidthLarge: string;
    iconButtonHeightLarge: (props: StyledTheme) => string;
    iconButtonPaddingInlineLarge: string;
    iconButtonPaddingBlockLarge: string;
    iconButtonIconSizeLarge: string;
    iconButtonWidthExtraLarge: string;
    iconButtonHeightExtraLarge: string;
    iconButtonPaddingInlineExtraLarge: string;
    iconButtonPaddingBlockExtraLarge: string;
    iconButtonIconSizeExtraLarge: (props: StyledTheme) => string;
    inlineEditGap: string;
    inlineEditLabelContainerTransition: string;
    inlineEditLabelContainerTransitionDelay: string;
    inlineEditLabelContainerCursor: string;
    inlineEditLabelContainerBorderRadius: string;
    inlineEditLabelContainerGap: string;
    inlineEditLabelContainerPaddingBlockSmall: string;
    inlineEditLabelContainerMinHeightSmall: string;
    inlineEditLabelContainerPaddingBlockMedium: string;
    inlineEditLabelContainerMinHeightMedium: string;
    inlineEditLabelContainerPaddingBlockLarge: string;
    inlineEditLabelContainerMinHeightLarge: string;
    inlineEditLabelContainerBackgroundHover: (props: StyledTheme) => string;
    inlineEditLabelContainerPaddingInlineHover: string;
    inlineEditLabelFontSize: string;
    inlineEditLabelLineHeight: string;
    inlineEditLabelMarginBlockEnd: string;
    inlineEditLabelColor: (props: StyledTheme) => string;
    inlineEditLabelCursor: string;
    inlineEditLabelBorderRadius: string;
    inlineEditLabelRowGap: string;
    inlineEditLabelPaddingBlockSmall: string;
    inlineEditLabelPaddingBlockMedium: string;
    inlineEditLabelPaddingBlockLarge: string;
    inlineEditPlaceholderColor: (props: StyledTheme) => string;
    inlineEditPlaceholderFontWeight: string;
    inlineEditActionsGap: string;
    inlineEditActionsTransition: string;
    inlineEditActionsTransitionDelay: string;
    inlineEditActionsOpacity: string;
    inlineEditActionsOpacityHover: string;
    inlineEditActionsOpacityFocus: string;
    inlineEditActionsTransitionFocus: string;
    inlineEditEditingActionsGap: string;
    inlineNotificationGridTemplateColumns: string;
    inlineNotificationPaddingBlock: string;
    inlineNotificationPaddingInline: string;
    inlineNotificationBorderTopWidth: string;
    inlineNotificationBorderBottomWidth: string;
    inlineNotificationBorderLeftWidth: string;
    inlineNotificationBorderRightWidth: string;
    inlineNotificationBorderStyle: string;
    inlineNotificationMinHeight: string;
    inlineNotificationLineHeight: string;
    inlineNotificationFontSize: (props: StyledTheme) => string;
    inlineNotificationFontWeight: (props: StyledTheme) => string;
    inlineNotificationFontWeightSmall: (props: StyledTheme) => string;
    inlineNotificationFontWeightLarge: (props: StyledTheme) => string;
    inlineNotificationBorderRadius: string;
    inlineNotificationColor: (props: StyledTheme) => string;
    inlineNotificationBoxShadow: string;
    inlineNotificationGridTemplateArea: string;
    inlineNotificationGridTemplateAreaVertical: string;
    inlineNotificationRowGapVertical: string;
    inlineNotificationPaddingInlineVertical: string;
    inlineNotificationBorderRadiusRounded: string;
    inlineNotificationPaddingBlockActionable: string;
    inlineNotificationBackgroundColorInfo: string;
    inlineNotificationBorderColorInfo: string;
    inlineNotificationColorInfo: (props: StyledTheme) => string;
    inlineNotificationFontWeightInfo: (props: StyledTheme) => string;
    inlineNotificationColorInfoHover: (props: StyledTheme) => string;
    inlineNotificationLinkFontWeightInfo: (props: StyledTheme) => string;
    inlineNotificationBackgroundColorWarning: string;
    inlineNotificationBorderColorWarning: string;
    inlineNotificationColorWarning: (props: StyledTheme) => string;
    inlineNotificationFontWeightWarning: (props: StyledTheme) => string;
    inlineNotificationColorWarningHover: (props: StyledTheme) => string;
    inlineNotificationLinkFontWeightWarning: (props: StyledTheme) => string;
    inlineNotificationBackgroundColorError: string;
    inlineNotificationBorderColorError: string;
    inlineNotificationColorError: (props: StyledTheme) => string;
    inlineNotificationFontWeightError: (props: StyledTheme) => string;
    inlineNotificationColorErrorHover: (props: StyledTheme) => string;
    inlineNotificationLinkFontWeightError: (props: StyledTheme) => string;
    inlineNotificationBackgroundColorSuccess: string;
    inlineNotificationBorderColorSuccess: string;
    inlineNotificationColorSuccess: (props: StyledTheme) => string;
    inlineNotificationFontWeightSuccess: (props: StyledTheme) => string;
    inlineNotificationColorSuccessHover: (props: StyledTheme) => string;
    inlineNotificationLinkFontWeightSuccess: (props: StyledTheme) => string;
    inlineNotificationBackgroundColorCritical: (props: StyledTheme) => string;
    inlineNotificationBorderColorCritical: (props: StyledTheme) => string;
    inlineNotificationColorCritical: (props: StyledTheme) => string;
    inlineNotificationFontWeightCritical: (props: StyledTheme) => string;
    inlineNotificationColorCriticalHover: (props: StyledTheme) => string;
    inlineNotificationIconColorCritical: (props: StyledTheme) => string;
    inlineNotificationIndicatorBackgroundColorCritical: string;
    inlineNotificationDismissColorCritical: (props: StyledTheme) => string;
    inlineNotificationIconFontSize: string;
    inlineNotificationIconMarginInlineEnd: string;
    inlineNotificationIconMarginBlock: string;
    inlineNotificationIconColorInfo: (props: StyledTheme) => string;
    inlineNotificationIconColorWarning: (props: StyledTheme) => string;
    inlineNotificationIconColorError: (props: StyledTheme) => string;
    inlineNotificationIconColorSuccess: (props: StyledTheme) => string;
    inlineNotificationContainerJustifyContent: string;
    inlineNotificationContainerAlignItems: string;
    inlineNotificationContainerJustifyContentVertical: string;
    inlineNotificationContainerAlignItemsVertical: string;
    inlineNotificationContentPaddingInline: string;
    inlineNotificationContentPaddingBlock: string;
    inlineNotificationContentJustifySelf: string;
    inlineNotificationContentAlignSelf: string;
    inlineNotificationContentAlignSelfVertical: string;
    inlineNotificationIndicatorDisplay: string;
    inlineNotificationIndicatorWidth: string;
    inlineNotificationIndicatorInsetInlineStart: (props: StyledTheme) => string;
    inlineNotificationIndicatorInsetBlock: (props: StyledTheme) => string;
    inlineNotificationIndicatorBackgroundColorInfo: (props: StyledTheme) => string;
    inlineNotificationIndicatorBackgroundColorWarning: (props: StyledTheme) => string;
    inlineNotificationIndicatorBackgroundColorError: (props: StyledTheme) => string;
    inlineNotificationIndicatorBackgroundColorSuccess: (props: StyledTheme) => string;
    inlineNotificationActionsPaddingBlock: string;
    inlineNotificationActionsPaddingInline: string;
    inlineNotificationActionsGap: string;
    inlineNotificationActionsMarginInlineStart: string;
    inlineNotificationActionsPaddingBlockVertical: string;
    inlineNotificationActionsPaddingInlineVertical: string;
    inlineNotificationActionsJustifySelfVertical: string;
    inlineNotificationDismissMarginInlineStart: string;
    inlineNotificationDismissMarginBlock: string;
    inlineNotificationDismissJustifySelf: string;
    inlineNotificationDismissMarginBlockVertical: string;
    inlineNotificationLinkColorInfo: (props: StyledTheme) => string;
    inlineNotificationLinkColorInfoHover: (props: StyledTheme) => string;
    inlineNotificationLinkColorWarning: (props: StyledTheme) => string;
    inlineNotificationLinkColorWarningHover: (props: StyledTheme) => string;
    inlineNotificationLinkColorError: (props: StyledTheme) => string;
    inlineNotificationLinkColorErrorHover: (props: StyledTheme) => string;
    inlineNotificationLinkColorSuccess: (props: StyledTheme) => string;
    inlineNotificationLinkColorSuccessHover: (props: StyledTheme) => string;
    inlineNotificationLinkColorCritical: (props: StyledTheme) => string;
    inlineNotificationLinkColorCriticalHover: (props: StyledTheme) => string;
    inlineNotificationLinkFontWeightCritical: (props: StyledTheme) => string;
    inputGroupAddonButtonPaddingInline: string;
    inputGroupAddonButtonPaddingBlock: string;
    inputGroupAddonButtonColor: (props: StyledTheme) => string;
    inputGroupAddonButtonBackgroundColorActive: (props: StyledTheme) => string;
    inputGroupAddonButtonGap: string;
    inputGroupAddonButtonPaddingInlineLarge: string;
    inputGroupAddonButtonPaddingBlockLarge: string;
    inputGroupAddonButtonHeightLarge: string;
    inputGroupAddonButtonColorDisabled: (props: StyledTheme) => string;
    searchGroupAddonButtonColor: (props: StyledTheme) => string;
    inputGroupBorderWidth: string;
    inputGroupBorderStyle: string;
    inputGroupBorderColor: (props: StyledTheme) => string;
    inputGroupBorder: (props: StyledTheme) => string;
    inputGroupBorderRadius: string;
    inputGroupColumnGap: string;
    inputGroupPaddingInlineStart: string;
    inputGroupPaddingInlineEnd: (props: StyledTheme) => string;
    inputGroupPaddingInline: (props: StyledTheme) => string;
    inputGroupPaddingBlockStart: string;
    inputGroupPaddingBlockEnd: (props: StyledTheme) => string;
    inputGroupWidth: string;
    inputGroupHeight: string;
    inputGroupHeightSmall: string;
    inputGroupBorderRadiusSmall: (props: StyledTheme) => string;
    inputGroupHeightLarge: string;
    inputGroupBorderColorDisabled: (props: StyledTheme) => string;
    inputGroupColorDisabled: (props: StyledTheme) => string;
    inputGroupBackgroundColorDisabled: (props: StyledTheme) => string;
    inputGroupCursorDisabled: string;
    inputGroupBorderColorInvalid: (props: StyledTheme) => string;
    inputGroupBackgroundColorInvalid: (props: StyledTheme) => string;
    inputGroupBorderColorHover: (props: StyledTheme) => string;
    inputGroupBoxShadowHover: (props: StyledTheme) => string;
    inputGroupBackgroundColorHover: (props: StyledTheme) => string;
    inputGroupBackgroundColorHoverInvalid: (props: StyledTheme) => string;
    inputGroupBoxShadowHoverInvalid: (props: StyledTheme) => string;
    inputGroupBorderColorHoverInvalid: (props: StyledTheme) => string;
    inputGroupBorderColorFocused: (props: StyledTheme) => string;
    inputGroupBoxShadowFocused: (props: StyledTheme) => string;
    inputGroupPaddingBlockStartLarge: string;
    inputGroupPaddingBlockEndLarge: (props: StyledTheme) => string;
    searchGroupBackgroundColor: (props: StyledTheme) => string;
    searchGroupBorderColor: string;
    listBorderRadius: string;
    listBorder: (props: StyledTheme) => string;
    listBackground: (props: StyledTheme) => string;
    listBoxShadow: (props: StyledTheme) => string;
    listHeight: string;
    listHeaderBorderBottom: (props: StyledTheme) => string;
    listItemHeight: string;
    listItemPaddingInline: string;
    listItemPaddingBlock: string;
    listItemColumnGap: string;
    listItemCursor: string;
    listItemColor: (props: StyledTheme) => string;
    listItemFontSize: string;
    listItemFontWeight: string;
    listItemLineHeight: string;
    listItemFontFamily: (props: StyledTheme) => string;
    listItemBackgroundColorHover: string;
    listItemBackgroundColorFocus: (props: StyledTheme) => string;
    listItemBoxShadowFocus: (props: StyledTheme) => string;
    listItemIconFontSize: string;
    listHeaderPaddingInline: string;
    listHeaderPaddingBlock: string;
    listHeaderItemsMarginInline: string;
    listHeaderItemsMarginBlock: string;
    listHeaderItemsHeight: string;
    listHeaderItemsMarginInlineFirstChild: string;
    listHeaderItemsMarginBlockFirstChild: string;
    listFooterHeight: string;
    listFooterPaddingInline: string;
    listFooterPaddingBlock: string;
    listFooterBorderTop: (props: StyledTheme) => string;
    listFooterColumnGap: string;
    listFooterTrailingPaddingInlineEnd: string;
    listFooterContentColumnGap: string;
    loaderWidth: string;
    loaderBlockBackgroundColorPrimary: (props: StyledTheme) => string;
    loaderBlockBackgroundColorSecondary: (props: StyledTheme) => string;
    loaderBlockBorderRadius: string;
    loaderBlockAnimationDuration: string;
    loaderBlockAnimationDelay: string;
    loaderBlockAnimationTimingFunction: string;
    loaderBlockSize: (props: StyledTheme) => string;
    loaderBlockOpacity: string;
    loginPageWidth: string;
    loginPageHeight: string;
    loginPageBackgroundColor: (props: StyledTheme) => string;
    loginPageBackdropBackground: string;
    loginPageBackdropBlendMode: string;
    loginPageBackdropBackgroundSm: (props: StyledTheme) => string;
    loginPageBackdropBackgroundMd: (props: StyledTheme) => string;
    loginPageBackdropBackgroundLg: (props: StyledTheme) => string;
    loginPageBackdropBackgroundXl: (props: StyledTheme) => string;
    loginPanelGap: (props: StyledTheme) => string;
    loginPanelWidth: string;
    loginPanelHeight: string;
    loginPanelBackdropFilter: string;
    loginPanelBackgroundColor: (props: StyledTheme) => string;
    loginPanelBoxShadow: (props: StyledTheme) => string;
    loginPanelBorder: (props: StyledTheme) => string;
    loginPanelBorderRadius: string;
    loginPanelPaddingInline: (props: StyledTheme) => string;
    loginPanelPaddingBlock: (props: StyledTheme) => string;
    loginPanelGridTemplateAreas: string;
    loginPanelWidthSm: (props: StyledTheme) => string;
    loginPanelBackgroundColorSm: (props: StyledTheme) => string;
    loginPanelBorderRadiusSm: (props: StyledTheme) => string;
    loginPanelBoxShadowSm: (props: StyledTheme) => string;
    loginPanelMarginBlockStartSm: string;
    loginPanelWidthMd: (props: StyledTheme) => string;
    loginPanelWidthLg: (props: StyledTheme) => string;
    loginAreaIconDisplay: string;
    loginIconSize: string;
    loginIconFontSize: string;
    loginLanguageSelectPaddingInlineFlat: string;
    loginLanguageSelectPaddingBlockFlat: string;
    loginLanguageSelectJustifySelf: string;
    loginLanguageSelectSize: string;
    loginAreaTitleMarginBlockStart: string;
    loginAreaTitleMarginBlockEnd: (props: StyledTheme) => string;
    loginTitleMarginInline: string;
    loginTitleMarginBlock: string;
    loginTitleFontWeight: (props: StyledTheme) => string;
    loginTitleFontSize: (props: StyledTheme) => string;
    loginTitleTextTransform: (props: StyledTheme) => string;
    loginTitleColor: (props: StyledTheme) => string;
    loginTitleLineHeight: (props: StyledTheme) => string;
    loginTitleLetterSpacing: string;
    loginAreaFormMarginBlockEnd: (props: StyledTheme) => string;
    loginFormActionGroupFontSize: string;
    loginFormActionGroupMarginBlockStart: (props: StyledTheme) => string;
    loginBrandImageDisplay: string;
    loginBrandImageColor: (props: StyledTheme) => string;
    loginAreaLinksFontSize: string;
    loginLinkTextDecoration: string;
    loginLinkTextDecorationHover: string;
    loginLinkSeparatorWidth: string;
    loginLinkSeparatorHeight: string;
    loginLinkSeparatorBorderRadius: string;
    loginLinkSeparatorBackgroundColor: string;
    loginVersionFontWeight: string;
    loginVersionFontSize: string;
    loginVersionTextTransform: (props: StyledTheme) => string;
    loginVersionColor: (props: StyledTheme) => string;
    loginVersionLineHeight: (props: StyledTheme) => string;
    loginVersionLetterSpacing: string;
    loginVersionMarginInline: string;
    loginVersionMarginBlock: string;
    loginVersionMarginBlockStart: string;
    loginTitleSecondaryFontWeight: (props: StyledTheme) => string;
    loginTitleSecondaryFontSize: (props: StyledTheme) => string;
    loginTitleSecondaryTextTransform: (props: StyledTheme) => string;
    loginTitleSecondaryLineHeight: (props: StyledTheme) => string;
    loginTitleSecondaryLetterSpacing: string;
    loginTitleSecondaryColor: (props: StyledTheme) => string;
    loginTitleSecondaryMarginBlock: string;
    loginTitleSecondaryMarginInline: string;
    loginButtonBackgroundColor: (props: StyledTheme) => string;
    loginButtonFontWeight: (props: StyledTheme) => string;
    loginButtonHeight: (props: StyledTheme) => string;
    loginButtonBackgroundColorHover: (props: StyledTheme) => string;
    loginButtonBackgroundColorActive: (props: StyledTheme) => string;
    loginButtonBorderColorActive: (props: StyledTheme) => string;
    loginButtonBackgroundColorDisabled: (props: StyledTheme) => string;
    loginButtonBorderColorDisabled: (props: StyledTheme) => string;
    loginButtonColorDisabled: (props: StyledTheme) => string;
    loginFooterPaddingBlock: string;
    loginFooterPaddingInline: string;
    loginFooterGap: string;
    loginFooterFlexDirection: string;
    loginFooterColor: string;
    loginFooterFlexDirectionLg: string;
    loginFooterLeadingFontSize: string;
    loginFooterLeadingLineHeight: string;
    loginFooterLeadingFontWeight: string;
    loginFooterTrailingFontSize: string;
    loginFooterTrailingLineHeight: string;
    loginFooterTrailingFontWeight: string;
    loginFooterTrailingGap: string;
    mastheadBorderBottomWidth: string;
    mastheadBorderBottomStyle: string;
    mastheadBorderBottomColor: string;
    mastheadBoxShadow: (props: StyledTheme) => string;
    mastheadColorPrimary: (props: StyledTheme) => string;
    mastheadBackgroundPrimary: (props: StyledTheme) => string;
    mastheadHeightPrimary: string;
    mastheadGapPrimary: string;
    mastheadBorderBottomWidthSecondary: string;
    mastheadGridTemplateColumnsPrimary: string;
    mastheadGridTemplateAreasPrimary: string;
    mastheadBorderBottomColorPrimary: string;
    mastheadColorSecondary: (props: StyledTheme) => string;
    mastheadBackgroundSecondary: (props: StyledTheme) => string;
    mastheadHeightSecondary: string;
    mastheadBorderBottomColorSecondary: string;
    mastheadSeparatorWidth: string;
    mastheadSeparatorHeight: string;
    mastheadSeparatorMarginInline: (props: StyledTheme) => string;
    mastheadSeparatorBackgroundColor: (props: StyledTheme) => string;
    mastheadIconHeight: (props: StyledTheme) => string;
    mastheadIconFontSize: string;
    mastheadIconFontWeight: (props: StyledTheme) => string;
    mastheadTitleFontWeight: (props: StyledTheme) => string;
    mastheadTitleFontSize: (props: StyledTheme) => string;
    mastheadTitleMarginInline: string;
    mastheadTitleMarginBlock: string;
    mastheadTitleLineHeight: string;
    mastheadTitleTextTransform: string;
    mastheadLogoColor: (props: StyledTheme) => string;
    mastheadVersionFontSize: string;
    mastheadVersionPaddingInlineStart: string;
    mastheadVersionLineHeight: string;
    mastheadTitleSecondaryMarginInlineStart: string;
    mastheadTitleSecondaryColor: (props: StyledTheme) => string;
    mastheadModuleFontSize: string;
    mastheadModuleFontLineHeight: string;
    mastheadModuleMarginInlineEnd: string;
    mastheadModuleColor: (props: StyledTheme) => string;
    mastheadMenuButtonPaddingInline: string;
    mastheadMenuButtonPaddingBlock: string;
    mastheadMenuButtonMarginInline: string;
    mastheadMenuButtonDisplay: string;
    mastheadMenuButtonAlignItems: string;
    mastheadTabListColumnGap: string;
    mastheadTabListMarginInlineStart: string;
    mastheadTabListMarginInlineEnd: string;
    mastheadTabPaddingInline: string;
    mastheadTabPaddingBlock: string;
    mastheadTabFontWeight: (props: StyledTheme) => string;
    mastheadTabFontWeightSelected: (props: StyledTheme) => string;
    mastheadTabBoxShadowFocused: (props: StyledTheme) => string;
    mastheadTabColorPrimary: (props: StyledTheme) => string;
    mastheadTabFontSizePrimary: string;
    mastheadTabColorPrimaryDisabled: (props: StyledTheme) => string;
    mastheadTabBackgroundColorPrimaryDisabled: string;
    mastheadTabBackgroundColorPrimaryHover: (props: StyledTheme) => string;
    mastheadTabBackgroundColorPrimaryActive: (props: StyledTheme) => string;
    mastheadTabBackgroundColorPrimaryFocus: (props: StyledTheme) => string;
    mastheadTabColorPrimarySelected: (props: StyledTheme) => string;
    mastheadTabColorPrimaryHover: (props: StyledTheme) => string;
    mastheadTabColorSecondary: (props: StyledTheme) => string;
    mastheadTabFontSizeSecondary: string;
    mastheadTabColorSecondaryDisabled: (props: StyledTheme) => string;
    mastheadTabBackgroundColorSecondaryDisabled: string;
    mastheadTabBackgroundColorSecondaryHover: (props: StyledTheme) => string;
    mastheadTabBackgroundColorSecondaryActive: (props: StyledTheme) => string;
    mastheadTabBackgroundColorSecondaryFocus: (props: StyledTheme) => string;
    mastheadTabColorSecondarySelected: (props: StyledTheme) => string;
    mastheadTabIndicatorWidthSelected: string;
    mastheadTabIndicatorBackgroundColorPrimary: (props: StyledTheme) => string;
    mastheadTabIndicatorBackgroundColorSecondary: (props: StyledTheme) => string;
    mastheadActionsGap: string;
    mastheadActionsPaddingInlineStart: string;
    mastheadActionsPaddingInlineEnd: (props: StyledTheme) => string;
    mastheadActionsPaddingInline: (props: StyledTheme) => string;
    mastheadActionsGapSecondary: string;
    mastheadActionBackgroundColor: string;
    mastheadActionColor: (props: StyledTheme) => string;
    mastheadActionColorHover: (props: StyledTheme) => string;
    mastheadActionColorActive: (props: StyledTheme) => string;
    mastheadActionColorFocus: (props: StyledTheme) => string;
    mastheadActionFontWeight: (props: StyledTheme) => string;
    mastheadActionBackgroundColorHover: (props: StyledTheme) => string;
    mastheadActionBackgroundColorActive: (props: StyledTheme) => string;
    mastheadActionBackgroundColorFocus: (props: StyledTheme) => string;
    mastheadAvatarMarginInlineStart: string;
    mastheadMainContentMarginInlineStart: string;
    mastheadMyAviatorMarginInlineStart: string;
    menuMinWidth: string;
    menuFilter: string;
    menuBorderRadius: string;
    menuBoxShadow: (props: StyledTheme) => string;
    menuBorderWidth: string;
    menuBorderStyle: string;
    menuBorderColor: (props: StyledTheme) => string;
    menuBorder: (props: StyledTheme) => string;
    menuBackgroundColor: (props: StyledTheme) => string;
    menuPaddingInline: string;
    menuPaddingBlock: string;
    menuArrowSize: string;
    menuArrowInsetInlineStart: string;
    menuArrowInsetInlineEnd: (props: StyledTheme) => string;
    menuContentMinWidth: string;
    menuContentGap: string;
    menuItemHeight: string;
    menuItemMinHeight: string;
    menuItemPaddingInlineStart: string;
    menuItemBorderRadius: string;
    menuItemPaddingInlineEnd: (props: StyledTheme) => string;
    menuItemPaddingBlockStart: string;
    menuItemPaddingBlockEnd: (props: StyledTheme) => string;
    menuItemPaddingInline: (props: StyledTheme) => string;
    menuItemPaddingBlock: (props: StyledTheme) => string;
    menuItemBackgroundColor: (props: StyledTheme) => string;
    menuItemBorderColor: string;
    menuItemBorderWidth: string;
    menuItemBorderStyle: string;
    menuItemBorder: (props: StyledTheme) => string;
    menuItemColor: (props: StyledTheme) => string;
    menuItemFontSize: (props: StyledTheme) => string;
    menuItemFontWeight: (props: StyledTheme) => string;
    menuItemCursor: string;
    menuItemWhiteSpace: string;
    menuItemOverflow: string;
    menuItemTextOverflow: string;
    menuItemContainerWidth: string;
    menuItemLineHeight: string;
    menuItemColumnGap: string;
    menuItemBackgroundColorHover: (props: StyledTheme) => string;
    menuItemBackgroundColorActive: (props: StyledTheme) => string;
    menuItemBackgroundColorFocus: (props: StyledTheme) => string;
    menuItemBoxShadowFocus: (props: StyledTheme) => string;
    menuItemColorDisabled: (props: StyledTheme) => string;
    menuItemCursorDisabled: string;
    menuItemBackgroundColorSelected: (props: StyledTheme) => string;
    menuItemFontWeightSelected: (props: StyledTheme) => string;
    menuItemColorSelected: (props: StyledTheme) => string;
    menuItemPaddingInlineSubmenu: (props: StyledTheme) => string;
    menuItemGapSubmenu: (props: StyledTheme) => string;
    menuItemBackgroundColorSubmenuExpanded: (props: StyledTheme) => string;
    menuItemBackgroundColorSubmenuExpandedHover: (props: StyledTheme) => string;
    menuSubmenuMarginInline: string;
    submenuItemIndicatorSize: string;
    submenuItemIndicatorMarginInlineEnd: string;
    menuGroupHeaderPaddingBlockStart: string;
    menuGroupHeaderPaddingInlineEnd: string;
    menuGroupHeaderPaddingBlockEnd: string;
    menuGroupHeaderPaddingInlineStart: string;
    menuGroupHeaderPaddingInline: (props: StyledTheme) => string;
    menuGroupHeaderPaddingBlock: (props: StyledTheme) => string;
    menuGroupHeaderColor: (props: StyledTheme) => string;
    menuGroupHeaderFontSize: (props: StyledTheme) => string;
    menuGroupHeaderFontWeight: string;
    menuGroupHeaderLineHeight: string;
    menuGroupHeaderCursor: string;
    menuDividerHeight: string;
    menuDividerThickness: string;
    menuDividerBackgroundColor: (props: StyledTheme) => string;
    multiSelectArrowTop: string;
    multiSelectArrowInsetInlineEnd: string;
    multiSelectArrowFontSize: string;
    multiSelectArrowColor: (props: StyledTheme) => string;
    multiSelectArrowTransform: string;
    multiSelectArrowPointerEvents: string;
    multiSelectArrowColorDisabled: (props: StyledTheme) => string;
    multiSelectClearTop: string;
    multiSelectClearInsetInlineEnd: string;
    multiSelectTriggerPaddingInline: (props: StyledTheme) => string;
    multiSelectTriggerPaddingInlineClearable: (props: StyledTheme) => string;
    multiValueChipGridTemplateColumns: string;
    multiValueChipGridTemplateRows: string;
    multiValueChipBackground: (props: StyledTheme) => string;
    multiValueChipBorderWidth: string;
    multiValueChipBorderStyle: string;
    multiValueChipBorderColor: (props: StyledTheme) => string;
    multiValueChipBoxShadow: (props: StyledTheme) => string;
    multiValueChipPaddingInline: string;
    multiValueChipBorderRadius: string;
    multiValueChipHeight: string;
    multiValueChipGap: string;
    multiValueChipCursor: string;
    multiValueChipTransition: string;
    multiValueChipTransitionTimingFunction: string;
    multiValueChipBackgroundHover: (props: StyledTheme) => string;
    multiValueChipBorderColorHover: (props: StyledTheme) => string;
    multiValueChipBoxShadowHover: (props: StyledTheme) => string;
    multiValueChipBackgroundExpandedHover: (props: StyledTheme) => string;
    multiValueChipBorderColorExpandedHover: (props: StyledTheme) => string;
    multiValueChipBoxShadowExpandedHover: (props: StyledTheme) => string;
    multiValueChipBackgroundActive: (props: StyledTheme) => string;
    multiValueChipBorderColorActive: (props: StyledTheme) => string;
    multiValueChipBoxShadowActive: (props: StyledTheme) => string;
    multiValueChipBackgroundExpandedActive: (props: StyledTheme) => string;
    multiValueChipBorderColorExpandedActive: (props: StyledTheme) => string;
    multiValueChipBoxShadowExpandedActive: (props: StyledTheme) => string;
    multiValueChipOutlineFocus: (props: StyledTheme) => string;
    multiValueChipOutlineOffsetFocus: string;
    multiValueChipBackgroundDisabled: string;
    multiValueChipBorderColorDisabled: string;
    multiValueChipBoxShadowDisabled: string;
    multiValueChipBackgroundReadonly: (props: StyledTheme) => string;
    multiValueChipBorderColorReadonly: (props: StyledTheme) => string;
    multiValueChipBackgroundReadonlyHover: (props: StyledTheme) => string;
    multiValueChipBorderColorReadonlyHover: (props: StyledTheme) => string;
    multiValueChipBackgroundReadonlyActive: (props: StyledTheme) => string;
    multiValueChipBorderColorReadonlyActive: (props: StyledTheme) => string;
    multiValueChipHeightExpanded: string;
    multiValueChipGridTemplateRowsExpanded: string;
    multiValueChipOverviewGap: string;
    multiValueChipListGap: string;
    multiValueChipListPaddingBlockEnd: string;
    multiValueChipLabelFontWeight: string;
    multiValueChipLabelFontSize: string;
    multiValueChipLabelLineHeight: string;
    multiValueChipLabelColor: (props: StyledTheme) => string;
    multiValueChipLabelMarginBlock: string;
    multiValueChipLabelWhiteSpace: string;
    multiValueChipLabelColorDisabled: (props: StyledTheme) => string;
    multiValueChipLabelColorReadonly: (props: StyledTheme) => string;
    multiValueChipButtonWidth: string;
    multiValueChipButtonHeight: string;
    multiValueChipButtonBorderRadius: string;
    multiValueChipButtonMarginBlock: string;
    multiValueChipButtonFontSize: string;
    multiValueChipButtonColor: (props: StyledTheme) => string;
    multiValueChipButtonBackground: string;
    multiValueChipButtonBackgroundHover: (props: StyledTheme) => string;
    multiValueChipButtonBackgroundActive: (props: StyledTheme) => string;
    multiValueChipButtonBoxShadowFocus: (props: StyledTheme) => string;
    multiValueChipButtonColorDisabled: (props: StyledTheme) => string;
    multiValueChipsColor: (props: StyledTheme) => string;
    multiValueChipsFontSize: string;
    multiValueChipsLineHeight: string;
    multiValueChipsFontWeight: string;
    multiValueChipsMarginBlock: string;
    multiValueChipsColorDisabled: (props: StyledTheme) => string;
    myAviatorButtonPaddingInline: string;
    myAviatorButtonGap: string;
    myAviatorButtonHeight: string;
    myAviatorButtonBackground: string;
    myAviatorButtonBorderWidth: string;
    myAviatorButtonBorderStyle: string;
    myAviatorButtonBorderColor: string;
    myAviatorButtonBorderRadius: string;
    myAviatorButtonCursor: string;
    myAviatorButtonTransition: string;
    myAviatorButtonBackgroundHover: string;
    myAviatorButtonBorderColorHover: string;
    myAviatorButtonBackgroundActive: string;
    myAviatorButtonBorderColorActive: string;
    myAviatorButtonOutlineFocus: (props: StyledTheme) => string;
    myAviatorButtonOutlineOffsetFocus: (props: StyledTheme) => string;
    myAviatorButtonLabelFontFamily: (props: StyledTheme) => string;
    myAviatorButtonLabelFontWeight: string;
    myAviatorButtonLabelFontSize: string;
    myAviatorButtonLabelLineHeight: string;
    myAviatorButtonLabelTextAlign: string;
    myAviatorButtonLabelColor: string;
    myAviatorButtonLabelTransition: string;
    myAviatorButtonLabelColorHover: string;
    myAviatorButtonLabelColorActive: string;
    myAviatorButtonIconColor: string;
    myAviatorButtonIconSize: string;
    myAviatorButtonIconColorHover: string;
    myAviatorButtonIconColorActive: string;
    navigationDrawerWidthMinimized: string;
    navigationTreeDrawerWidthMinimized: string;
    navigationHeaderGridTemplateAreas: string;
    navigationHeaderGridTemplateColumns: string;
    navigationHeaderHeight: string;
    navigationHeaderPaddingInline: string;
    navigationHeaderPaddingBlock: string;
    navigationHeaderGap: string;
    navigationHeaderBoxShadow: (props: StyledTheme) => string;
    navigationHeaderPaddingInlineMinimized: string;
    navigationHeaderPaddingBlockMinimized: string;
    navigationItemColor: (props: StyledTheme) => string;
    navigationItemFontWeight: (props: StyledTheme) => string;
    navigationItemColumnGap: string;
    navigationItemPaddingInline: string;
    navigationItemHeight: string;
    navigationItemHeightSmall: string;
    navigationItemHeightLarge: string;
    navigationItemBorder: string;
    navigationItemBorderRadius: string;
    navigationItemPaddingMultiplier: string;
    navigationItemInset: (props: StyledTheme) => string;
    navigationItemPaddingInlineStartSingleLevel: string;
    navigationItemPaddingInlineStartMinimized: string;
    navigationItemPaddingInlineStartNoChildren: string;
    navigationItemPaddingInlineStartChildren: string;
    navigationItemBackgroundColorHover: (props: StyledTheme) => string;
    navigationItemBoxShadowFocus: (props: StyledTheme) => string;
    navigationItemBoxShadowActive: (props: StyledTheme) => string;
    navigationItemBoxShadowActiveFocus: (props: StyledTheme) => string;
    navigationItemColorActive: (props: StyledTheme) => string;
    navigationItemFontWeightActive: (props: StyledTheme) => string;
    navigationItemBackgroundColorActive: (props: StyledTheme) => string;
    navigationItemBackgroundColorActiveHover: (props: StyledTheme) => string;
    navigationItemBackgroundColorExpanded: (props: StyledTheme) => string;
    navigationItemBackgroundColorChildrenExpanded: (props: StyledTheme) => string;
    navigationItemColumnGapMinimized: string;
    navigationItemPaddingStartMinimized: string;
    navigationItemExpanderWidth: string;
    navigationItemExpanderHeight: string;
    navigationItemExpanderFontSize: string;
    navigationItemExpanderColor: (props: StyledTheme) => string;
    navigationItemExpanderCursor: string;
    navigationItemExpanderIconTransformExpanded: string;
    navigationItemExpanderIconTransformRtl: string;
    navigationItemExpanderIconTransformExpandedRtl: string;
    navigationItemLinkColumnGap: string;
    navigationItemLinkTextDecoration: string;
    navigationItemLinkIconFontSize: string;
    navigationItemLinkIconWidth: string;
    navigationItemLinkIconHeight: (props: StyledTheme) => string;
    navigationItemLinkIconColor: (props: StyledTheme) => string;
    navigationItemTitleFontSize: string;
    navigationItemTitleFontWeight: string;
    navigationItemTitleLineHeight: string;
    navigationItemTitleColor: (props: StyledTheme) => string;
    navigationItemTitleDisplayMinimized: string;
    navigationItemTitleFontSizeChildren: string;
    navigationTreeDisplayMinimized: string;
    navigationTreeItemColumnGap: string;
    navigationTreeItemMarginInline: string;
    navigationTreeItemPaddingInlineStart: string;
    navigationTreeItemPaddingInlineEnd: string;
    navigationTreeItemPaddingMultiplier: string;
    navigationTreeItemColor: (props: StyledTheme) => string;
    navigationTreeItemFontWeight: (props: StyledTheme) => string;
    navigationTreeItemBorder: string;
    navigationTreeItemBorderRadius: string;
    navigationTreeItemHeight: string;
    navigationTreeItemHeightSmall: string;
    navigationTreeItemHeightLarge: string;
    navigationTreeItemBackgroundColor: string;
    navigationTreeItemBackgroundColorActive: (props: StyledTheme) => string;
    navigationTreeItemFontWeightActive: (props: StyledTheme) => string;
    navigationTreeItemBoxShadowFocus: (props: StyledTheme) => string;
    navigationTreeItemBackgroundColorHover: (props: StyledTheme) => string;
    navigationTreeItemBackgroundColorActiveHover: string;
    navigationTreeChildrenBackgroundColor: string;
    navigationMinimizeButtonSize: string;
    navigationMinimizeButtonColor: (props: StyledTheme) => string;
    navigationMinimizeButtonTransform: string;
    navigationMinimizeButtonTransformMinimized: string;
    navigationMinimizeButtonTransformRtl: string;
    navigationMinimizeButtonTransformMinimizedRtl: string;
    navigationSearchPaddingInline: string;
    navigationSearchHeight: string;
    notificationBackgroundColor: (props: StyledTheme) => string;
    notificationBoxShadow: (props: StyledTheme) => string;
    notificationBorderWidth: string;
    notificationBorderStyle: string;
    notificationBorderColor: (props: StyledTheme) => string;
    notificationBorder: (props: StyledTheme) => string;
    notificationBorderRadius: string;
    notificationZIndex: string;
    notificationInset: string;
    notificationAnimationDuration: string;
    notificationBorderTopWidth: string;
    notificationBorderRightWidth: string;
    notificationBorderBottomWidth: string;
    notificationBorderLeftWidth: string;
    notificationLayoutPaddingInline: (props: StyledTheme) => string;
    notificationLayoutPaddingBlock: (props: StyledTheme) => string;
    notificationLayoutPaddingInlineStartWithIcon: (props: StyledTheme) => string;
    notificationToastWidth: string;
    notificationToastLayoutMinHeight: string;
    notificationToastLayoutGap: string;
    notificationToastLayoutPaddingInline: (props: StyledTheme) => string;
    notificationToastLayoutPaddingBlock: (props: StyledTheme) => string;
    notificationDismissButtonTop: (props: StyledTheme) => string;
    notificationDismissButtonInsetInlineEnd: (props: StyledTheme) => string;
    notificationDismissButtonSize: string;
    notificationHeaderMarginInline: string;
    notificationHeaderMarginBlock: (props: StyledTheme) => string;
    notificationContentPaddingBlockStart: string;
    notificationContentPaddingBlockStartToast: string;
    notificationContentFontSize: string;
    notificationFooterGap: (props: StyledTheme) => string;
    notificationFooterMarginInline: string;
    notificationFooterMarginBlock: (props: StyledTheme) => string;
    notificationFooterColor: (props: StyledTheme) => string;
    notificationIconMarginInlineEnd: (props: StyledTheme) => string;
    notificationIconFill: (props: StyledTheme) => string;
    notificationIconPaddingBlockStart: string;
    notificationIconSize: string;
    notificationIconMarginInlineEndToast: string;
    notificationIconPaddingBlockStartToast: string;
    numberPickerWidth: string;
    numberPickerHeight: string;
    numberPickerBackgroundColor: string;
    numberPickerHeightSmall: string;
    numberPickerHeightLarge: string;
    numberPickerInputTextAlign: string;
    numberPickerInputPaddingInlineStart: string;
    numberPickerInputPaddingInlineEnd: string;
    numberPickerInputHeightSmall: string;
    numberPickerInputHeightLarge: string;
    numberPickerInputBorderColorInvalid: (props: StyledTheme) => string;
    numberPickerButtonWidth: string;
    numberPickerButtonColor: (props: StyledTheme) => string;
    numberPickerButtonBackgroundColorHover: (props: StyledTheme) => string;
    numberPickerButtonColorDisabled: (props: StyledTheme) => string;
    numberPickerButtonIconSize: string;
    verticalNumberPickerHeight: string;
    verticalNumberPickerHeightSmall: string;
    verticalNumberPickerHeightLarge: string;
    verticalNumberPickerInputTextAlign: string;
    verticalNumberPickerButtonHeight: string;
    pageTabMenuBackground: (props: StyledTheme) => string;
    pageTabMenuBorder: (props: StyledTheme) => string;
    pageTabMenuBoxShadow: (props: StyledTheme) => string;
    pageTabMenuPaddingBlock: (props: StyledTheme) => string;
    pageTabMenuPaddingInline: (props: StyledTheme) => string;
    pageTabMenuHeight: string;
    pageTabMenuMaxHeight: string;
    pageTabMenuMinHeight: string;
    pageTabMenuMaxWidth: string;
    pageTabMenuMinWidth: string;
    pageTabMenuBorderRadius: string;
    pageTabMenuSearchWidth: string;
    pageTabMenuSearchPaddingInline: string;
    pageTabMenuSearchPaddingBlock: string;
    pageTabMenuSearchMarginBlockEnd: string;
    pageTabMenuListRowGap: string;
    pageTabMenuListOverflow: string;
    pageTabMenuListHeight: string;
    pageTabMenuListContainerBeforeTop: string;
    pageTabMenuListContainerBeforeLeft: string;
    pageTabMenuListContainerBeforeRight: string;
    pageTabMenuListContainerBeforeHeight: string;
    pageTabMenuListContainerBeforeBackground: (props: StyledTheme) => string;
    pageTabMenuListContainerAfterBottom: string;
    pageTabMenuListContainerAfterLeft: string;
    pageTabMenuListContainerAfterRight: string;
    pageTabMenuListContainerAfterHeight: string;
    pageTabMenuListContainerAfterBackground: (props: StyledTheme) => string;
    pageTabMenuListItemHeight: string;
    pageTabMenuListItemBackground: string;
    pageTabMenuListItemBorder: string;
    pageTabMenuListItemColor: (props: StyledTheme) => string;
    pageTabMenuListItemBorderRadius: string;
    pageTabMenuListItemPaddingInline: string;
    pageTabMenuListItemPaddingBlock: string;
    pageTabMenuListItemFontFamily: string;
    pageTabMenuListItemColumnGap: string;
    pageTabMenuListItemTransition: string;
    pageTabMenuListItemBackgroundHover: string;
    pageTabMenuListItemBackgroundActive: string;
    pageTabMenuListItemBackgroundSelected: string;
    pageTabMenuListItemBackgroundSelectedHover: string;
    pageTabMenuListItemFontWeightSelected: string;
    pageMenuListItemIconFontSize: string;
    pageTabMenuListItemLabelFontSize: string;
    pageTabMenuListItemLabelFontWeight: string;
    pageTabMenuListItemLabelLineHeight: string;
    pageTabMenuListItemDismissWidth: string;
    pageTabMenuListItemDismissHeight: string;
    pageTabMenuListItemDismissBorderRadius: string;
    pageTabMenuListItemDismissPaddingInline: string;
    pageTabMenuListItemDismissPaddingBlock: string;
    pageTabMenuListItemDismissColor: (props: StyledTheme) => string;
    pageTabMenuListItemDismissBackgroundHover: string;
    pageTabMenuListItemDismissBackgroundActive: string;
    pageTabMenuListItemDismissOutlineFocus: (props: StyledTheme) => string;
    pageTabMenuListEmptyPaddingBlock: string;
    pageTabMenuListEmptyPaddingInline: string;
    pageTabMenuListEmptyGap: string;
    pageTabMenuListEmptyIconSize: string;
    pageTabMenuListEmptyMessageFontSize: string;
    pageTabMenuListEmptyMessageFontWeight: string;
    pageTabMenuListEmptyMessageLineHeight: string;
    pageTabMenuListEmptyMessageColor: (props: StyledTheme) => string;
    pageTabMenuFooterPaddingBlock: string;
    pageTabMenuFooterPaddingInline: string;
    pageTabGroupHeaderColumnGap: string;
    pageTabGroupHeaderMarginInlineEnd: string;
    pageTabGroupListContainerMaxWidth: string;
    pageTabGroupListContainerFadeBackgroundStart: string;
    pageTabGroupListContainerFadeBackgroundEnd: string;
    pageTabGroupListColumnGap: string;
    pageTabPanelBackground: (props: StyledTheme) => string;
    pageTabPanelBorder: (props: StyledTheme) => string;
    pageTabPanelMinHeight: string;
    pageTabPanelMarginBlockStart: string;
    pageTabPanelBorderRadius: string;
    pageTabPanelColor: (props: StyledTheme) => string;
    pageTabButtonMinWidth: string;
    pageTabButtonMaxWidth: string;
    pageTabButtonGap: string;
    pageTabButtonBackground: (props: StyledTheme) => string;
    pageTabButtonBorderWidth: string;
    pageTabButtonBorderColor: (props: StyledTheme) => string;
    pageTabButtonBorderRadius: string;
    pageTabButtonTransition: string;
    pageTabButtonHeightSm: string;
    pageTabButtonHeightMd: string;
    pageTabButtonBackgroundSelected: (props: StyledTheme) => string;
    pageTabButtonBackgroundHover: string;
    pageTabButtonBorderColorHover: string;
    pageTabButtonBorderWidthHover: string;
    pageTabButtonBackgroundActive: (props: StyledTheme) => string;
    pageTabButtonBorderColorActive: (props: StyledTheme) => string;
    pageTabButtonBorderWidthActive: string;
    pageTabButtonOutlineFocus: (props: StyledTheme) => string;
    pageTabButtonOutlineOffsetFocus: string;
    pageTabButtonBackgroundSelectedHover: string;
    pageTabButtonLabelPaddingInlineEnd: string;
    pageTabButtonLabelFontSize: string;
    pageTabButtonLabelFontWeight: string;
    pageTabButtonLabelLineHeight: string;
    pageTabButtonLabelColor: (props: StyledTheme) => string;
    pageTabButtonLabelBackground: string;
    pageTabButtonLabelFontWeightSelected: string;
    pageTabButtonLabelBackgroundHover: string;
    pageTabButtonDismissButtonOpacity: string;
    pageTabButtonDismissButtonWidth: string;
    pageTabButtonDismissButtonHeight: string;
    pageTabButtonDismissButtonBackground: string;
    pageTabButtonDismissButtonBorderRadius: string;
    pageTabButtonDismissButtonPaddingInline: string;
    pageTabButtonDismissButtonPaddingBlock: string;
    pageTabButtonDismissButtonFontSize: string;
    pageTabButtonDismissButtonInsetInlineEnd: string;
    pageTabButtonDismissButtonBorder: string;
    pageTabButtonDismissButtonOpacityHover: string;
    pageTabButtonDismissButtonBackgroundHover: string;
    pageTabButtonDismissButtonBackgroundActive: string;
    pageTabButtonDismissButtonOpacitySelected: string;
    paginationGap: string;
    paginationMarginInlineStart: string;
    paginationMarginInlineStartAlignEnd: string;
    paginationListBorderColor: (props: StyledTheme) => string;
    paginationListBorder: (props: StyledTheme) => string;
    paginationListBorderRadius: string;
    pagaintionListHeight: string;
    paginationItemBorderRadius: string;
    paginationListBorderFlat: string;
    paginationItemBackgroundColor: string;
    paginationItemWidth: string;
    paginationArrowWidth: string;
    paginationArrowSize: string;
    paginationArrowGap: string;
    paginationArrowBorderRadius: string;
    paginationArrowBackgroundColorDisabled: (props: StyledTheme) => string;
    paginationArrowColorDisabled: (props: StyledTheme) => string;
    paginationArrowBackgroundColorDisabledFlat: string;
    paginationArrowDisplayBoundary: string;
    paginationArrowVisibilityBoundary: string;
    paginationArrowVisibilityBoundaryDisabled: string;
    paginationLinkColor: (props: StyledTheme) => string;
    paginationLinkFontSize: string;
    paginationLinkFontWeight: string;
    paginationLinkLineHeight: string;
    paginationLinkBoxShadow: string;
    paginationLinkFontWeightSelected: (props: StyledTheme) => string;
    paginationLinkColorHover: string;
    paginationLinkBoxShadowFocus: (props: StyledTheme) => string;
    paginationLinkBoxShadowFocusFlat: (props: StyledTheme) => string;
    paginationLinkBackgroundColorSelected: (props: StyledTheme) => string;
    paginationLinkColorSelected: (props: StyledTheme) => string;
    paginationLinkBoxShadowSelected: string;
    paginationLinkBackgroundColorSelectedHover: (props: StyledTheme) => string;
    paginationLinkBoxShadowSelectedFocus: (props: StyledTheme) => string;
    paginationLinkBackgroundColorSelectedFlat: string;
    paginationLinkColorSelectedFlat: (props: StyledTheme) => string;
    paginationLinkBoxShadowSelectedFlat: (props: StyledTheme) => string;
    paginationLinkBackgroundColorSelectedFlatHover: (props: StyledTheme) => string;
    paginationLinkBoxShadowSelectedFlatFocus: (props: StyledTheme) => string;
    paginationSummaryColor: (props: StyledTheme) => string;
    paginationSummaryFontSize: string;
    paginationSummaryFontWeight: string;
    paginationSummaryLineHeight: string;
    paginationDividerBackgroundColor: (props: StyledTheme) => string;
    paginationDividerWidth: string;
    paginationDividerHeight: string;
    paginationDividerBackgroundColorFlat: string;
    paginationBarBorderColor: string;
    paginationBarBorderWidth: string;
    paginationBarWidth: string;
    paginationBarHeight: string;
    paginationBarPaddingInline: string;
    paginationBarPaddingBlock: string;
    paginationBarGridTemplateAreasAlignCenter: string;
    paginationBarGridTemplateColumnsAlignCenter: string;
    paginationBarJustifyContentAlignCenter: string;
    paginationBarGridTemplateAreasAlignEnd: string;
    paginationBarGridTemplateColumnsAlignEnd: string;
    paginationBarJustifyContentAlignEnd: string;
    paginationBarArrowGap: string;
    paginationBarArrowDisplayDisabled: string;
    paginationBarArrowDisplayBoundary: string;
    paginationBarArrowDisplayBoundaryDisabled: string;
    paginationBarArrowVisibilityDisabled: string;
    paginationCountColor: (props: StyledTheme) => string;
    paginationCountFontSize: string;
    paginationCountFontWeight: string;
    paginationCountLineHeight: string;
    paginationCountBorderInlineEnd: string;
    paginationCountPaddingInlineEnd: string;
    paginationCountHeight: string;
    paginationCountBorderInlineEndAlignEnd: string;
    paginationCountPaddingInlineEndAlignEnd: string;
    paginationCountHeightAlignEnd: string;
    panelFontSize: (props: StyledTheme) => string;
    panelColor: (props: StyledTheme) => string;
    panelBackgroundColor: (props: StyledTheme) => string;
    panelBoxShadow: (props: StyledTheme) => string;
    panelBorderWidth: string;
    panelBorderStyle: string;
    panelBorderColor: (props: StyledTheme) => string;
    panelBorder: (props: StyledTheme) => string;
    panelBorderRadius: string;
    panelPaddingInline: string;
    panelPaddingBlock: string;
    popoverMinWidth: string;
    popoverBorderRadius: string;
    popoverFilter: string;
    popoverBoxShadow: (props: StyledTheme) => string;
    popoverBorderWidth: string;
    popoverBorderStyle: string;
    popoverBorderColor: (props: StyledTheme) => string;
    popoverBackgroundColor: (props: StyledTheme) => string;
    popoverColor: (props: StyledTheme) => string;
    popoverFontSize: (props: StyledTheme) => string;
    popoverPaddingInline: string;
    popoverPaddingBlock: string;
    popoverZIndex: (props: StyledTheme) => string;
    popoverColorLight: (props: StyledTheme) => string;
    popoverBackgroundColorLight: (props: StyledTheme) => string;
    popoverBorderColorLight: (props: StyledTheme) => string;
    popoverColorDark: (props: StyledTheme) => string;
    popoverBackgroundColorDark: (props: StyledTheme) => string;
    popoverColorAutoInverse: (props: StyledTheme) => string;
    popoverBackgroundColorAutoInverse: (props: StyledTheme) => string;
    popoverBorderColorAutoInverse: (props: StyledTheme) => string;
    popoverArrowSize: string;
    popoverArrowLeftStart: string;
    popoverArrowRightEnd: (props: StyledTheme) => string;
    popoverAboveArrowInlineStartCenter: (props: StyledTheme) => string;
    popoverBelowArrowInlineStartCenter: (props: StyledTheme) => string;
    popoverBeforeArrowInlineEndBefore: string;
    popoverBeforeArrowInlineEndAfter: string;
    popoverAfterArrowInlineStartBefore: (props: StyledTheme) => string;
    popoverAfterArrowInlineStartAfter: (props: StyledTheme) => string;
    popoverBeforeArrowTopCenterBefore: (props: StyledTheme) => string;
    popoverBeforeArrowTopCenterAfter: (props: StyledTheme) => string;
    popoverAfterArrowTopCenterBefore: (props: StyledTheme) => string;
    popoverAfterArrowTopCenterAfter: (props: StyledTheme) => string;
    progressBarHeight: string;
    progressBarBorder: string;
    progressBarBorderRadius: string;
    progressBarBackgroundColor: string;
    progressBarTrackBorderRadius: string;
    progressBarTrackBackgroundColor: (props: StyledTheme) => string;
    radioButtonCursorDisabled: string;
    radioButtonCursorReadonly: string;
    radioButtonContainerHeight: string;
    radioButtonContainerBorderRadius: string;
    radioButtonContainerCursor: string;
    radioButtonContainerPaddingInline: string;
    radioButtonContainerPaddingBlock: string;
    radioButtonContainerBackgroundColor: string;
    radioButtonContainerAlignItems: string;
    radioButtonContainerBackgroundColorHover: string;
    radioButtonContainerBackgroundColorActive: string;
    radioButtonIndicatorBorderStyle: string;
    radioButtonIndicatorBorderWidth: string;
    radioButtonIndicatorBorderColor: (props: StyledTheme) => string;
    radioButtonIndicatorBorderRadius: string;
    radioButtonIndicatorSize: string;
    radioButtonIndicatorBackgroundColor: string;
    radioButtonIndicatorMarginBlock: string;
    radioButtonIndicatorBackgroundColorHover: (props: StyledTheme) => string;
    radioButtonIndicatorBorderColorHover: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorActive: (props: StyledTheme) => string;
    radioButtonIndicatorBorderColorActive: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorFocus: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorChecked: string;
    radioButtonIndicatorBorderColorChecked: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorCheckedHover: (props: StyledTheme) => string;
    radioButtonIndicatorBorderColorCheckedHover: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorCheckedActive: (props: StyledTheme) => string;
    radioButtonIndicatorBorderColorCheckedActive: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorCheckedFocus: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorDisabled: string;
    radioButtonIndicatorBorderColorDisabled: (props: StyledTheme) => string;
    radioButtonIndicatorBackgroundColorDisabledChecked: string;
    radioButtonIndicatorBorderColorDisabledChecked: (props: StyledTheme) => string;
    radioButtonIndicatorInnerBackgroundColor: string;
    radioButtonIndicatorInnerSize: string;
    radioButtonIndicatorInnerBorderRadius: string;
    radioButtonIndicatorInnerBackgroundColorHover: string;
    radioButtonIndicatorInnerBackgroundColorActive: string;
    radioButtonIndicatorInnerBackgroundColorChecked: (props: StyledTheme) => string;
    radioButtonIndicatorInnerBackgroundColorCheckedHover: (props: StyledTheme) => string;
    radioButtonIndicatorInnerBackgroundColorCheckedActive: (props: StyledTheme) => string;
    radioButtonIndicatorInnerBackgroundColorDisabledChecked: (props: StyledTheme) => string;
    radioButtonLabelColor: (props: StyledTheme) => string;
    radioButtonLabelMarginInlineStart: (props: StyledTheme) => string;
    radioButtonLabelFontSize: string;
    radioButtonLabelLineHeight: string;
    radioButtonLabelFontWeight: string;
    radioButtonLabelFontWeightChecked: string;
    radioButtonLabelColorDisabled: (props: StyledTheme) => string;
    radioButtonGroupGap: string;
    radioButtonGroupGapCompact: string;
    radioButtonGroupGapSpacious: string;
    radioButtonGroupGapHorizontal: string;
    radioButtonGroupGapHorizontalCompact: string;
    radioButtonGroupGapHorizontalSpacious: string;
    selectHeight: string;
    selectBorderStyle: (props: StyledTheme) => string;
    selectBorderWidth: (props: StyledTheme) => string;
    selectBorderColor: (props: StyledTheme) => string;
    selectBorder: (props: StyledTheme) => string;
    selectBorderRadius: (props: StyledTheme) => string;
    selectPaddingInline: string;
    selectBackgroundColor: (props: StyledTheme) => string;
    selectFontSize: (props: StyledTheme) => string;
    selectColumnGap: string;
    selectHeightSmall: string;
    selectPaddingInlineSmall: string;
    selectBorderRadiusSmall: (props: StyledTheme) => string;
    selectHeightLarge: string;
    selectBorderColorHover: (props: StyledTheme) => string;
    selectBackgroundColorHover: (props: StyledTheme) => string;
    selectBoxShadowHover: string;
    selectBorderColorFocused: (props: StyledTheme) => string;
    selectBoxShadowFocused: (props: StyledTheme) => string;
    selectBorderColorExpanded: (props: StyledTheme) => string;
    selectBoxShadowExpanded: string;
    selectBorderColorDisabled: (props: StyledTheme) => string;
    selectBackgroundColorDisabled: (props: StyledTheme) => string;
    selectBorderColorInvalid: (props: StyledTheme) => string;
    selectBackgroundColorInvalid: (props: StyledTheme) => string;
    selectBackgroundColorHoverInvalid: (props: StyledTheme) => string;
    selectBoxShadowHoverInvalid: string;
    selectBorderColorHoverInvalid: (props: StyledTheme) => string;
    selectPlaceholderColor: (props: StyledTheme) => string;
    selectPlaceholderColorDisabled: (props: StyledTheme) => string;
    selectValueColor: (props: StyledTheme) => string;
    selectValueColorDisabled: (props: StyledTheme) => string;
    selectArrowMinWidth: string;
    selectArrowColor: (props: StyledTheme) => string;
    selectArrowColorDisabled: (props: StyledTheme) => string;
    selectFeedbackColor: (props: StyledTheme) => string;
    selectOptionPanelMaxHeight: string;
    selectOptionPanelMarginBlockStart: string;
    selectOptionPanelMarginInlineEnd: string;
    selectOptionPanelMarginBlockEnd: (props: StyledTheme) => string;
    selectOptionPanelMarginInlineStart: string;
    selectOptionPanelMarginInline: (props: StyledTheme) => string;
    selectOptionPanelMarginBlock: (props: StyledTheme) => string;
    selectOptionPanelBoxShadow: (props: StyledTheme) => string;
    selectOptionPanelBorderStyle: (props: StyledTheme) => string;
    selectOptionPanelBorderWidth: (props: StyledTheme) => string;
    selectOptionPanelBorderColor: (props: StyledTheme) => string;
    selectOptionPanelBorder: (props: StyledTheme) => string;
    selectOptionPanelBorderRadius: (props: StyledTheme) => string;
    selectOptionPanelBackgroundColor: (props: StyledTheme) => string;
    selectOptionPanelPaddingInline: string;
    selectOptionPanelPaddingBlock: string;
    selectOptionPanelGap: string;
    selectClearButtonWidth: string;
    selectClearButtonHeight: string;
    selectClearButtonPaddingInline: string;
    selectClearButtonPaddingBlock: string;
    selectClearButtonMarginInlineEnd: string;
    selectClearIconBorderRadius: string;
    selectClearIconFontSize: string;
    selectClearIconColor: (props: StyledTheme) => string;
    selectClearIconBackgroundColorHover: (props: StyledTheme) => string;
    selectClearIconBackgroundColorFocus: (props: StyledTheme) => string;
    selectClearIconBoxShadowFocus: (props: StyledTheme) => string;
    selectClearIconBackgroundColorActive: (props: StyledTheme) => string;
    skipLinkInsetInlineStart: string;
    skipLinkInsetBlockStart: string;
    skipLinkPaddingInline: string;
    skipLinkPaddingBlock: string;
    skipLinkBackground: (props: StyledTheme) => string;
    skipLinkBorder: string;
    skipLinkBoxShadow: (props: StyledTheme) => string;
    skipLinkColor: (props: StyledTheme) => string;
    skipLinkBorderRadius: string;
    skipLinkTextDecoration: string;
    skipLinkFontWeight: string;
    skipLinkFontSize: string;
    skipLinkLineHeight: string;
    skipLinkCursor: string;
    skipLinkZIndex: string;
    skipLinkTransform: string;
    skipLinkOpacity: string;
    skipLinkTransition: string;
    skipLinkBackgroundHover: (props: StyledTheme) => string;
    skipLinkBoxShadowHover: (props: StyledTheme) => string;
    skipLinkBackgroundActive: (props: StyledTheme) => string;
    skipLinkBoxShadowActive: (props: StyledTheme) => string;
    skipLinkOpacityUnfocused: string;
    skipLinkTransformUnfocused: string;
    sliderMinWidth: string;
    sliderRowGap: string;
    sliderRailHeight: string;
    sliderRailBackgroundColor: (props: StyledTheme) => string;
    sliderRailPaddingInline: string;
    sliderRailPaddingBlock: string;
    sliderTrackHeight: string;
    sliderTrackBorderRadius: string;
    sliderTrackBackgroundColor: (props: StyledTheme) => string;
    sliderTrackPaddingInline: string;
    sliderTrackPaddingBlock: string;
    sliderTrackBackgroundColorDisabled: (props: StyledTheme) => string;
    sliderThumbBoxTransform: string;
    sliderThumbBoxTransformRtl: string;
    sliderThumbBoxHeight: string;
    sliderThumbBoxWidth: string;
    sliderThumbBoxAlignItems: string;
    sliderThumbBoxJustifyContent: string;
    sliderThumbBoxTop: string;
    sliderThumbBoxTransformOrigin: string;
    sliderThumbCursor: string;
    sliderThumbWidth: string;
    sliderThumbHeight: string;
    sliderThumbBackgroundColor: (props: StyledTheme) => string;
    sliderThumbBorderWidth: string;
    sliderThumbBorderStyle: string;
    sliderThumbBorderColor: (props: StyledTheme) => string;
    sliderThumbBorderRadius: string;
    sliderThumbTop: (props: StyledTheme) => string;
    sliderThumbTransform: string;
    sliderThumbTransition: string;
    sliderThumbBackgroundColorHover: (props: StyledTheme) => string;
    sliderThumbBorderWidthHover: (props: StyledTheme) => string;
    sliderThumbBorderStyleHover: (props: StyledTheme) => string;
    sliderThumbBorderColorHover: (props: StyledTheme) => string;
    sliderThumbTransformHover: string;
    sliderThumbBackgroundColorDragging: (props: StyledTheme) => string;
    sliderThumbBorderWidthDragging: (props: StyledTheme) => string;
    sliderThumbBorderStyleDragging: (props: StyledTheme) => string;
    sliderThumbBorderColorDragging: (props: StyledTheme) => string;
    sliderThumbWidthDragging: (props: StyledTheme) => string;
    sliderThumbHeightDragging: (props: StyledTheme) => string;
    sliderThumbBoxShadowDragging: (props: StyledTheme) => string;
    sliderThumbTransformDragging: (props: StyledTheme) => string;
    sliderThumbBackgroundColorFocused: (props: StyledTheme) => string;
    sliderThumbBorderWidthFocused: (props: StyledTheme) => string;
    sliderThumbBorderStyleFocused: (props: StyledTheme) => string;
    sliderThumbBorderColorFocused: (props: StyledTheme) => string;
    sliderThumbWidthFocused: (props: StyledTheme) => string;
    sliderThumbHeightFocused: (props: StyledTheme) => string;
    sliderThumbBoxShadowFocused: (props: StyledTheme) => string;
    sliderThumbBackgroundColorDisabled: (props: StyledTheme) => string;
    sliderThumbBorderWidthDisabled: (props: StyledTheme) => string;
    sliderThumbBorderStyleDisabled: (props: StyledTheme) => string;
    sliderThumbBorderColorDisabled: (props: StyledTheme) => string;
    sliderThumbWidthDisabled: (props: StyledTheme) => string;
    sliderThumbHeightDisabled: (props: StyledTheme) => string;
    sliderThumbTransformDisabled: (props: StyledTheme) => string;
    sliderTickMarginInline: string;
    sliderTickMarginBlock: string;
    sliderTickLineHeight: string;
    sliderTickFontWeight: (props: StyledTheme) => string;
    sliderTickFontSize: (props: StyledTheme) => string;
    sliderTickColor: (props: StyledTheme) => string;
    sliderTickTransform: string;
    sliderTickTransformRtl: string;
    sliderTicksTop: string;
    sliderThumbContainerMarginInline: (props: StyledTheme) => string;
    sliderThumbContainerWidth: (props: StyledTheme) => string;
    sliderThumbContainerCursor: string;
    sliderThumbContainerPaddingInline: string;
    sliderThumbContainerPaddingBlock: string;
    rangeSliderContainerMarginInline: string;
    rangeSliderContainerMarginBlock: string;
    rangeSliderContainerJustifyContent: string;
    rangeSliderContainerFlexDirection: string;
    rangeSliderContainerWidth: string;
    rangeSliderThumbWidth: string;
    rangeSliderThumbJustifyContent: string;
    rangeSliderThumbJustifyContentRtl: string;
    rangeSliderThumbSize: string;
    rangeSliderThumbAlignItems: string;
    rangeSliderThumbStartTransform: string;
    rangeSliderThumbStartTransformRtl: string;
    rangeSliderThumbEndTransform: string;
    rangeSliderThumbEndTransformRtl: string;
    rangeSliderThumbEndJustifyContent: string;
    rangeSliderThumbLowBoxTransform: string;
    rangeSliderThumbLowBoxTransformRtl: string;
    rangeSliderThumbLowBoxJustifyContent: string;
    rangeSliderThumbHighBoxTransform: string;
    rangeSliderThumbHighBoxJustifyContent: string;
    rangeHandleFill: (props: StyledTheme) => string;
    rangeHandleStroke: (props: StyledTheme) => string;
    rangeHandlePipeStroke: (props: StyledTheme) => string;
    rangeHandleFillDisabled: (props: StyledTheme) => string;
    rangeHandleStrokeDisabled: (props: StyledTheme) => string;
    rangeHandlePipeStrokeDisabled: (props: StyledTheme) => string;
    rangeHandleFillActive: (props: StyledTheme) => string;
    rangeHandleStrokeActive: (props: StyledTheme) => string;
    spinnerSizeMedium: string;
    spinnerSizeLarge: string;
    spinnerContainerSize: string;
    spinnerContainerSizeMedium: string;
    spinnerContainerSizeLarge: string;
    spinnerInnerAnimationDuration: string;
    spinnerInnerAnimationIterationCount: string;
    spinnerInnerAnimationTimingFunction: string;
    spinnerInnerBoxShadowMedium: string;
    spinnerInnerBoxShadowLarge: string;
    spinnerInnerBorderRadius: string;
    spinnerInnerRotateStart: string;
    spinnerInnerRotateEnd: string;
    spinnerCircleFill: (props: StyledTheme) => string;
    spinnerGradientStopColor: (props: StyledTheme) => string;
    splitterGap: string;
    splitterDragHandleMargins: string;
    splitterDragHandleOverlap: string;
    splitterDragHandleStart: string;
    splitterDragHandleBackground: (props: StyledTheme) => string;
    splitterDragHandleBackgroundSize: (props: StyledTheme) => string;
    splitterDragHandleColor: string;
    splitterDragHandleColorHover: (props: StyledTheme) => string;
    splitterDragHandleColorActive: (props: StyledTheme) => string;
    splitterDragHandleBorderColor: string;
    splitterDragHandleBorderRadius: string;
    splitterDragHandleWidth: string;
    splitterDragHandleWidthHover: string;
    splitterDragHandleWidthActive: string;
    splitterDragHandleTransition: string;
    splitButtonDividerHeight: string;
    splitButtonBorderRadiusFirstChild: (props: StyledTheme) => string;
    splitButtonBorderRadiusLastChild: (props: StyledTheme) => string;
    splitButtonPaddingInline: string;
    splitButtonPaddingBlock: string;
    splitIconButtonPaddingInline: (props: StyledTheme) => string;
    splitIconButtonPaddingBlock: (props: StyledTheme) => string;
    splitIconButtonWidth: string;
    splitButtonBorderRadiusSmallFirstChild: (props: StyledTheme) => string;
    splitButtonBorderRadiusSmallLastChild: (props: StyledTheme) => string;
    splitButtonPaddingInlineSmall: string;
    splitButtonPaddingBlockSmall: string;
    splitIconButtonWidthSmall: string;
    splitButtonBorderRadiusLargeFirstChild: (props: StyledTheme) => string;
    splitButtonBorderRadiusLargeLastChild: (props: StyledTheme) => string;
    splitButtonPaddingInlineLarge: string;
    splitButtonPaddingBlockLarge: string;
    splitIconButtonWidthLarge: string;
    splitButtonBorderWidthPrimary: string;
    splitButtonBorderWidthPrimaryFirstChild: string;
    splitButtonBorderWidthPrimaryLastChild: string;
    splitButtonDividerBackgroundPrimary: string;
    splitButtonBorderWidthSecondary: string;
    splitButtonBorderWidthSecondaryFirstChild: string;
    splitButtonBorderWidthSecondaryLastChild: string;
    splitButtonDividerBackgroundSecondary: string;
    splitButtonPaddingInlineFlat: string;
    splitButtonPaddingBlockFlat: string;
    splitButtonPaddingInlineFlatSmall: string;
    splitButtonPaddingBlockFlatSmall: string;
    splitButtonDividerBackgroundPrimaryFlat: string;
    splitButtonDividerBackgroundSecondaryFlat: string;
    splitButtonDividerBackgroundDisabled: string;
    splitButtonDividerBackgroundSecondaryDisabled: (props: StyledTheme) => string;
    splitButtonBorderWidthSecondaryFirstChildRtl: string;
    splitButtonBorderWidthSecondaryLastChildRtl: string;
    splitButtonBorderRadiusFirstChildRtl: (props: StyledTheme) => string;
    splitButtonBorderRadiusLastChildRtl: (props: StyledTheme) => string;
    splitButtonBorderRadiusSmallFirstChildRtl: (props: StyledTheme) => string;
    splitButtonBorderRadiusSmallLastChildRtl: (props: StyledTheme) => string;
    tableBoxShadow: (props: StyledTheme) => string;
    tableBorderRadius: string;
    tableBorderColor: (props: StyledTheme) => string;
    tableBorderStyle: string;
    tableBorderWidth: string;
    tableBorder: (props: StyledTheme) => string;
    tableBackgroundColor: (props: StyledTheme) => string;
    tableHeadRowHeight: string;
    tableHeaderCellTextAlign: string;
    tableHeaderCellBorderColor: (props: StyledTheme) => string;
    tableHeaderCellBorderStyle: string;
    tableHeaderCellBorderTopWidth: string;
    tableHeaderCellBorderRightWidth: string;
    tableHeaderCellBorderBottomWidth: string;
    tableHeaderCellBorderLeftWidth: string;
    tableHeaderCellFontWeight: (props: StyledTheme) => string;
    tableHeaderCellColor: (props: StyledTheme) => string;
    tableHeaderCellBackgroundColor: string;
    tableHeaderCellPaddingInline: string;
    tableHeaderCellPaddingBlock: string;
    tableHeaderCellFontSize: string;
    tableHeaderCellLineHeight: string;
    tableHeaderCellLetterSpacing: string;
    tableHeaderCellBoxSizing: string;
    tableColumnResizeHandleColor: (props: StyledTheme) => string;
    tableColumnResizeHandleWidth: string;
    tableRowHeight: string;
    tableRowOutlineFocused: (props: StyledTheme) => string;
    tableRowOutlineOffsetFocused: string;
    tableRowHeightSmall: string;
    tableRowHeightLarge: string;
    tableRowHeightExtralarge: string;
    tableCellBoxSizing: string;
    tableCellBorderColor: (props: StyledTheme) => string;
    tableCellBorderStyle: string;
    tableCellBorderTopWidth: string;
    tableCellBorderRightWidth: string;
    tableCellBorderBottomWidth: string;
    tableCellBorderLeftWidth: string;
    tableCellPaddingInline: string;
    tableCellPaddingBlock: string;
    tableCellFontSize: (props: StyledTheme) => string;
    tableCellFontWeight: (props: StyledTheme) => string;
    tableCellTextAlign: string;
    tableCellLetterSpacing: string;
    tableCellColor: (props: StyledTheme) => string;
    tableCellColorSelected: (props: StyledTheme) => string;
    tableCellLineHeight: string;
    tableCellBackgroundColorHover: (props: StyledTheme) => string;
    tableCellBackgroundColorSelected: (props: StyledTheme) => string;
    tableCellBackgroundColorOddHover: (props: StyledTheme) => string;
    tableSortIconColor: (props: StyledTheme) => string;
    tableSortIconPaddingInline: string;
    tableSortIconPaddingBlock: string;
    tableSortToggleBackgroundColorActive: (props: StyledTheme) => string;
    tableSortToggleBackgroundColorHover: (props: StyledTheme) => string;
    tableSortToggleBackgroundColorFocused: (props: StyledTheme) => string;
    tableSortToggleHeight: (props: StyledTheme) => string;
    tableSortTogglePaddingInline: string;
    tableSortTogglePaddingBlock: string;
    tableSortToggleColumnGap: string;
    tableSortToggleBorderRadius: string;
    tableSortToggleFontSize: (props: StyledTheme) => string;
    tableSortToggleFontWeight: (props: StyledTheme) => string;
    tableSortToggleFontWeightSorting: (props: StyledTheme) => string;
    tabGroupColumnGap: string;
    tabListHeight: string;
    tabListColumnGap: string;
    tabListBorderTopWidth: string;
    tabListBorderBottomWidth: string;
    tabListBorderInlineStartWidth: string;
    tabListBorderInlineEndWidth: string;
    tabListBorderStyle: string;
    tabListBorderColor: string;
    tabListBorderBottomWidthVertical: string;
    tabListBorderInlineEndWidthVertical: string;
    tabListHeightSmall: string;
    tabListHeightMedium: string;
    tabBackgroundColor: string;
    tabMarginInline: string;
    tabBorder: string;
    tabPaddingInline: string;
    tabPaddingBlock: string;
    tabFontWeight: (props: StyledTheme) => string;
    tabFontSize: (props: StyledTheme) => string;
    tabColor: (props: StyledTheme) => string;
    tabTextTransform: string;
    tabCursor: string;
    tabBoxShadow: string;
    tabMinWidth: string;
    tabMaxWidth: string;
    tabWhiteSpace: string;
    tabHeight: string;
    tabJustifyContent: string;
    tabBorderRadius: string;
    tabHeightVertical: string;
    tabFontSizeSmall: (props: StyledTheme) => string;
    tabFontSizeMedium: (props: StyledTheme) => string;
    tabColorSelected: (props: StyledTheme) => string;
    tabFontWeightSelected: (props: StyledTheme) => string;
    tabBoxShadowFocused: (props: StyledTheme) => string;
    tabColorDisabled: (props: StyledTheme) => string;
    tabCursorDisabled: string;
    tabIconSize: string;
    tabIndicatorWidth: string;
    tabIndicatorHeight: string;
    tabIndicatorBackgroundColor: (props: StyledTheme) => string;
    tabIndicatorTransition: string;
    tabIndicatorBorderRadius: string;
    tabIndicatorWidthSelected: string;
    tabIndicatorBackgroundColorSelected: (props: StyledTheme) => string;
    tabIndicatorWidthHover: string;
    tabIndicatorHeightHover: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorHover: (props: StyledTheme) => string;
    tabIndicatorWidthSelectedHover: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSelectedHover: (props: StyledTheme) => string;
    tabIndicatorHeightActive: (props: StyledTheme) => string;
    tabIndicatorWidthActive: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorActive: (props: StyledTheme) => string;
    tabIndicatorWidthSelectedActive: (props: StyledTheme) => string;
    tabIndicatorHeightSelectedActive: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSelectedActive: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSecondary: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSecondaryHover: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSecondarySelected: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSecondarySelectedHover: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSecondaryActive: (props: StyledTheme) => string;
    tabIndicatorBackgroundColorSecondarySelectedActive: (props: StyledTheme) => string;
    tabIndicatorHeightVertical: string;
    tabIndicatorBorderRadiusVertical: string;
    tabIndicatorHeightVerticalSelected: string;
    tabIndicatorHeightVerticalHover: (props: StyledTheme) => string;
    tabIndicatorWidthVerticalHover: string;
    tabIndicatorHeightVerticalActive: (props: StyledTheme) => string;
    tabIndicatorWidthVerticalActive: (props: StyledTheme) => string;
    tabIndicatorWidthVerticalSelectedHover: string;
    tabIndicatorWidthVerticalSelectedActive: (props: StyledTheme) => string;
    tabIndicatorHeightVerticalSelectedActive: (props: StyledTheme) => string;
    textInputFontWeight: (props: StyledTheme) => string;
    textInputFontSize: (props: StyledTheme) => string;
    textInputHeight: string;
    textInputPaddingInlineStart: string;
    textInputPaddingInlineEnd: (props: StyledTheme) => string;
    textInputPaddingInline: (props: StyledTheme) => string;
    textInputPaddingBlockStart: string;
    textInputPaddingBlockEnd: (props: StyledTheme) => string;
    textInputColor: (props: StyledTheme) => string;
    textInputBackgroundColor: (props: StyledTheme) => string;
    textInputBorderWidth: string;
    textInputBorderStyle: string;
    textInputBorderColor: (props: StyledTheme) => string;
    textInputBorder: (props: StyledTheme) => string;
    textInputBorderRadius: string;
    textInputWidth: string;
    textInputHeightSmall: (props: StyledTheme) => string;
    textInputBorderRadiusSmall: (props: StyledTheme) => string;
    textInputHeightLarge: string;
    textInputPaddingBlockStartLarge: string;
    textInputPaddingBlockEndLarge: (props: StyledTheme) => string;
    textInputCursorReadonly: string;
    textInputBackgroundColorReadonly: string;
    textInputBorderColorReadonly: string;
    textInputPaddingInlineReadonly: string;
    textInputBoxShadowReadonly: string;
    textInputBorderColorDisabled: (props: StyledTheme) => string;
    textInputCursorDisabled: string;
    textInputColorDisabled: (props: StyledTheme) => string;
    textInputBackgroundColorDisabled: (props: StyledTheme) => string;
    textInputBorderColorInvalid: (props: StyledTheme) => string;
    textInputBackgroundColorInvalid: (props: StyledTheme) => string;
    textInputBackgroundColorHover: string;
    textInputBoxShadowHover: string;
    textInputBorderColorHover: (props: StyledTheme) => string;
    textInputBackgroundColorHoverInvalid: (props: StyledTheme) => string;
    textInputBoxShadowHoverInvalid: string;
    textInputBorderColorHoverInvalid: (props: StyledTheme) => string;
    textInputBorderColorFocused: (props: StyledTheme) => string;
    textInputBoxShadowFocused: string;
    textInputPlaceholderColor: (props: StyledTheme) => string;
    textInputPlaceholderFontWeight: string;
    textInputPlaceholderColorDisabled: string;
    textInputPaddingInlineStartSearch: string;
    textInputPlaceholderBackgroundImageSearch: string;
    textInputPlaceholderBackgroundPositionSearch: string;
    textInputPlaceholderBackgroundSizeSearch: string;
    textInputPlaceholderBackgroundPositionSearchSmall: string;
    textInputPlaceholderBackgroundPositionSearchLarge: string;
    textareaFontWeight: (props: StyledTheme) => string;
    textareaFontSize: (props: StyledTheme) => string;
    textareaLineHeight: string;
    textareaPaddingInlineStart: (props: StyledTheme) => string;
    textareaPaddingInlineEnd: (props: StyledTheme) => string;
    textareaPaddingInline: (props: StyledTheme) => string;
    textareaPaddingBlockStart: (props: StyledTheme) => string;
    textareaPaddingBlockEnd: (props: StyledTheme) => string;
    textareaColor: (props: StyledTheme) => string;
    textareaBackgroundColor: (props: StyledTheme) => string;
    textareaBorderWidth: string;
    textareaBorderStyle: string;
    textareaBorderColor: (props: StyledTheme) => string;
    textareaBorder: (props: StyledTheme) => string;
    textareaBorderRadius: string;
    textareaWidth: string;
    textareaBorderColorDisabled: (props: StyledTheme) => string;
    textareaCursorDisabled: string;
    textareaColorDisabled: (props: StyledTheme) => string;
    textareaBackgroundColorDisabled: (props: StyledTheme) => string;
    textareaBorderColorInvalid: (props: StyledTheme) => string;
    textareaBackgroundColorInvalid: (props: StyledTheme) => string;
    textareaBorderColorHoverInvalid: (props: StyledTheme) => string;
    textareaBackgroundColorHoverInvalid: (props: StyledTheme) => string;
    textareaBoxShadowHoverInvalid: (props: StyledTheme) => string;
    textareaBorderColorHover: (props: StyledTheme) => string;
    textareaBackgroundColorHover: (props: StyledTheme) => string;
    textareaBoxShadowHover: (props: StyledTheme) => string;
    textareaBoxShadowFocused: string;
    textareaBorderColorFocused: (props: StyledTheme) => string;
    textareaOutlineFocused: string;
    textareaCursorReadonly: string;
    textareaBackgroundColorReadonly: string;
    textareaBorderColorReadonly: string;
    textareaPaddingInlineReadonly: string;
    textareaBoxShadowReadonly: string;
    textareaPlaceholderColor: (props: StyledTheme) => string;
    textareaPlaceholderFontWeight: string;
    textareaPlaceholderColorDisabled: (props: StyledTheme) => string;
    timeOffsetPickerWidth: string;
    timeOffsetPickerHeight: (props: StyledTheme) => string;
    timeOffsetPickerBackgroundColor: (props: StyledTheme) => string;
    timeOffsetPickerInputTextAlign: (props: StyledTheme) => string;
    timeOffsetPickerInputPaddingInlineStart: (props: StyledTheme) => string;
    timeOffsetPickerInputPaddingInlineEnd: (props: StyledTheme) => string;
    timeOffsetPickerButtonHeight: (props: StyledTheme) => string;
    timeOffsetPickerButtonColorDisabled: (props: StyledTheme) => string;
    timeOffsetPickerButtonColor: (props: StyledTheme) => string;
    timeOffsetPickerButtonIconSize: (props: StyledTheme) => string;
    timeOffsetPickerButtonBackgroundColorHover: (props: StyledTheme) => string;
    timePickerColumnGap: string;
    timePickerTimeInputColumnGap: string;
    timePickerNumberPickerWidth: string;
    toggleButtonGroupBorderRadius: (props: StyledTheme) => string;
    toggleButtonGroupBorderWidth: string;
    toggleButtonGroupBorderStyle: string;
    toggleButtonGroupBorderColorPrimary: (props: StyledTheme) => string;
    toggleButtonGroupBorderColorSecondary: (props: StyledTheme) => string;
    toggleButtonGroupBorderColorDisabled: string;
    toggleButtonGroupBorderColorSinglePrimarySelected: (props: StyledTheme) => string;
    toggleButtonGroupPaddingInlineSingleSelect: string;
    toggleButtonGroupPaddingBlockSingleSelect: string;
    toggleButtonGroupGapSingleSelect: string;
    toggleButtonDividerWidthSingleSelect: string;
    toggleButtonGroupBorderColorSingleSelectPrimary: (props: StyledTheme) => string;
    toggleButtonPaddingInlineMultipleSelect: string;
    toggleButtonPaddingBlockMultipleSelect: string;
    toggleButtonBoxShadowMultipleSelect: string;
    toggleButtonCursor: (props: StyledTheme) => string;
    toggleButtonHeight: (props: StyledTheme) => string;
    toggleButtonMinWidth: string;
    toggleButtonPaddingInline: (props: StyledTheme) => string;
    toggleButtonPaddingBlock: (props: StyledTheme) => string;
    toggleButtonBorderRadius: string;
    toggleButtonBorderRadiusFocused: (props: StyledTheme) => string;
    toggleButtonFontSize: (props: StyledTheme) => string;
    toggleButtonBorder: string;
    toggleButtonBoxShadowSelected: string;
    toggleButtonCursorSelected: string;
    toggleButtonColorPrimary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorPrimary: string;
    toggleButtonColorSelectedPrimary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorSelectedPrimary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorHoverPrimary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorHoverSelectedPrimary: (props: StyledTheme) => string;
    toggleButtonBoxShadowFocusedSelectedPrimary: (props: StyledTheme) => string;
    toggleButtonColorSecondary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorSecondary: string;
    toggleButtonColorSelectedSecondary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorSelectedSecondary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorHoverSecondary: (props: StyledTheme) => string;
    toggleButtonBackgroundColorHoverSelectedSecondary: (props: StyledTheme) => string;
    toggleButtonBoxShadowFocusedSelectedSecondary: (props: StyledTheme) => string;
    toggleButtonCursorDisabled: string;
    toggleButtonColorDisabled: (props: StyledTheme) => string;
    toggleButtonBackgroundColorDisabled: string;
    toggleButtonBackgroundColorDisabledSelected: (props: StyledTheme) => string;
    toggleButtonBorderStartStartRadiusFirstChild: string;
    toggleButtonBorderEndStartRadiusFirstChild: (props: StyledTheme) => string;
    toggleButtonBorderStartEndRadiusLastChild: (props: StyledTheme) => string;
    toggleButtonBorderEndEndRadiusLastChild: (props: StyledTheme) => string;
    toggleButtonDividerHeight: string;
    toggleButtonDividerWidth: string;
    toggleButtonDividerBackgroundColorSelected: (props: StyledTheme) => string;
    toggleButtonDividerBackgroundColorDisabled: string;
    toggleButtonDividerBackgroundColorPrimary: (props: StyledTheme) => string;
    toggleButtonDividerBackgroundColorSecondary: (props: StyledTheme) => string;
    toggleButtonHeightSingleSelect: string;
    toggleButtonPaddingInlineSingleSelect: string;
    toggleButtonPaddingBlockSingleSelect: string;
    toggleButtonBorderRadiusSingleSelect: string;
    toggleButtonBorderRadiusSingleSelectInner: (props: StyledTheme) => string;
    toggleButtonBorderSingleSelect: string;
    toggleButtonGroupBorderColorMultipleSelectPrimary: (props: StyledTheme) => string;
    toggleButtonBoxShadowFocusedDeselected: string;
    toggleButtonOutlineFocusedDeselected: (props: StyledTheme) => string;
    toggleButtonOutlineOffsetFocusedDeselected: string;
    toggleSwitchCursor: string;
    toggleSwitchMinHeight: string;
    toggleSwitchMaxWidth: string;
    toggleSwitchSpacing: string;
    toggleSwitchBoxShadow: string;
    toggleSwitchPaddingInline: string;
    toggleSwitchPaddingBlock: string;
    toggleSwitchTransition: string;
    toggleSwitchBorderRadius: string;
    toggleSwitchBoxShadowFocused: string;
    toggleSwitchCursorDisabled: string;
    toggleSwitchControlWidth: string;
    toggleSwitchControlHeight: string;
    toggleSwitchTrackWidth: (props: StyledTheme) => string;
    toggleSwitchTrackHeight: string;
    toggleSwitchTrackBorderRadius: string;
    toggleSwitchTrackBackgroundColor: (props: StyledTheme) => string;
    toggleSwitchTrackBorderWidth: string;
    toggleSwitchTrackBorderColor: string;
    toggleSwitchTrackTransition: string;
    toggleSwitchTrackBackgroundColorChecked: (props: StyledTheme) => string;
    toggleSwitchTrackBackgroundColorHover: (props: StyledTheme) => string;
    toggleSwitchTrackBackgroundColorActive: (props: StyledTheme) => string;
    toggleSwitchTrackBackgroundColorCheckedHover: (props: StyledTheme) => string;
    toggleSwitchTrackBackgroundColorCheckedActive: (props: StyledTheme) => string;
    toggleSwitchTrackBackgroundColorDisabled: (props: StyledTheme) => string;
    toggleSwitchTrackBackgroundColorDisabledChecked: (props: StyledTheme) => string;
    toggleSwitchThumbInsetInlineStart: string;
    toggleSwitchThumbInsetInlineEnd: string;
    toggleSwitchThumbWidth: string;
    toggleSwitchThumbHeight: (props: StyledTheme) => string;
    toggleSwitchThumbBackgroundColor: (props: StyledTheme) => string;
    toggleSwitchThumbBoxShadow: string;
    toggleSwitchThumbBorderRadius: string;
    toggleSwitchThumbBorderWidth: string;
    toggleSwitchThumbBorderStyle: string;
    toggleSwitchThumbBorderColor: (props: StyledTheme) => string;
    toggleSwitchThumbTransition: string;
    toggleSwitchThumbInsetInlineStartChecked: string;
    toggleSwitchThumbInsetInlineEndChecked: string;
    toggleSwitchThumbBackgroundColorChecked: (props: StyledTheme) => string;
    toggleSwitchThumbBorderColorChecked: (props: StyledTheme) => string;
    toggleSwitchThumbInsetInlineEndHover: string;
    toggleSwitchThumbInsetInlineStartHoverChecked: string;
    toggleSwitchThumbBorderColorDisabled: (props: StyledTheme) => string;
    toggleSwitchThumbBackgroundColorDisabled: (props: StyledTheme) => string;
    toggleSwitchThumbBoxShadowDisabled: string;
    toggleSwitchThumbBorderColorDisabledChecked: (props: StyledTheme) => string;
    toggleSwitchThumbBackgroundColorDisabledChecked: (props: StyledTheme) => string;
    toggleSwitchThumbBoxShadowDisabledChecked: string;
    toggleSwitchThumbBoxShadowFocused: (props: StyledTheme) => string;
    toggleSwitchLabelFontSize: (props: StyledTheme) => string;
    toggleSwitchLabelFontWeight: (props: StyledTheme) => string;
    toggleSwitchLabelColor: (props: StyledTheme) => string;
    toggleSwitchLabelColorDisabled: (props: StyledTheme) => string;
    toolbarHeight: string;
    toolbarPaddingInline: string;
    toolbarPaddingBlock: string;
    toolbarBackgroundColor: (props: StyledTheme) => string;
    toolbarBoxShadow: (props: StyledTheme) => string;
    toolbarBorderRadius: string;
    toolbarBorderWidth: string;
    toolbarBorderStyle: string;
    toolbarBorderColor: (props: StyledTheme) => string;
    toolbarBorder: (props: StyledTheme) => string;
    toolbarGap: string;
    toolbarDividerHeight: string;
    toolbarDividerBackgroundColor: (props: StyledTheme) => string;
    toolbarDividerThickness: string;
    tooltipMinWidth: string;
    tooltipBorderRadius: string;
    tooltipFilter: string;
    tooltipBoxShadow: (props: StyledTheme) => string;
    tooltipBorderWidth: string;
    tooltipBorderStyle: string;
    tooltipBorderColor: (props: StyledTheme) => string;
    tooltipBackgroundColor: (props: StyledTheme) => string;
    tooltipColor: (props: StyledTheme) => string;
    tooltipFontSize: (props: StyledTheme) => string;
    tooltipPaddingInline: string;
    tooltipPaddingBlock: string;
    tooltipZIndex: (props: StyledTheme) => string;
    tooltipColorLight: (props: StyledTheme) => string;
    tooltipBackgroundColorLight: (props: StyledTheme) => string;
    tooltipBorderColorLight: (props: StyledTheme) => string;
    tooltipColorDark: (props: StyledTheme) => string;
    tooltipBackgroundColorDark: (props: StyledTheme) => string;
    tooltipColorAutoInverse: (props: StyledTheme) => string;
    tooltipBackgroundColorAutoInverse: (props: StyledTheme) => string;
    tooltipBorderColorAutoInverse: (props: StyledTheme) => string;
    tooltipArrowSize: string;
    tooltipArrowLeftStart: string;
    tooltipArrowRightEnd: (props: StyledTheme) => string;
    tooltipAboveArrowInlineStartCenter: (props: StyledTheme) => string;
    tooltipBelowArrowInlineStartCenter: (props: StyledTheme) => string;
    tooltipBeforeArrowInlineEndBefore: string;
    tooltipBeforeArrowInlineEndAfter: string;
    tooltipAfterArrowInlineStartBefore: (props: StyledTheme) => string;
    tooltipAfterArrowInlineStartAfter: (props: StyledTheme) => string;
    tooltipBeforeArrowTopCenterBefore: (props: StyledTheme) => string;
    tooltipBeforeArrowTopCenterAfter: (props: StyledTheme) => string;
    tooltipAfterArrowTopCenterBefore: (props: StyledTheme) => string;
    tooltipAfterArrowTopCenterAfter: (props: StyledTheme) => string;
    treeDrawerWidthMinimized: string;
    treeHeaderHeight: string;
    treeHeaderPaddingInline: string;
    treeHeaderPaddingBlock: string;
    treeHeaderGap: string;
    treeHeaderBoxShadow: (props: StyledTheme) => string;
    treeHeaderPaddingInlineMinimized: string;
    treeHeaderPaddingBlockMinimized: string;
    treeNodeColor: (props: StyledTheme) => string;
    treeNodeFontWeight: (props: StyledTheme) => string;
    treeNodeColumnGap: string;
    treeNodePaddingInline: string;
    treeNodeHeight: string;
    treeNodeHeightSmall: string;
    treeNodeHeightLarge: string;
    treeNodeBorder: string;
    treeNodeBorderRadius: string;
    treeNodePaddingInlineStart: string;
    treeNodePaddingInlineEnd: string;
    treeNodePaddingMultiplier: string;
    treeNodeDisplay: string;
    treeNodeInset: (props: StyledTheme) => string;
    treeNodeBackgroundColorHover: (props: StyledTheme) => string;
    treeNodeBoxShadowFocus: (props: StyledTheme) => string;
    treeNodeBackgroundColorFocus: (props: StyledTheme) => string;
    treeNodeBoxShadowActive: string;
    treeNodeBoxShadowActiveFocus: (props: StyledTheme) => string;
    treeNodeColorActive: (props: StyledTheme) => string;
    treeNodeFontWeightActive: (props: StyledTheme) => string;
    treeNodeBackgroundColorActive: (props: StyledTheme) => string;
    treeNodeBackgroundColorActiveHover: (props: StyledTheme) => string;
    treeNodeBackgroundColorExpanded: (props: StyledTheme) => string;
    treeNodeColumnGapMinimized: string;
    treeNodePaddingStartMinimized: string;
    treeNodeBackgroundColorActiveChild: string;
    treeNodeFontWeightActiveChild: (props: StyledTheme) => string;
    treeNodeBackgroundColorActiveHoverChild: (props: StyledTheme) => string;
    treeNodeBackgroundColorFocusChild: string;
    treeNodeExpanderWidth: string;
    treeNodeExpanderHeight: string;
    treeNodeExpanderFontSize: string;
    treeNodeExpanderColor: (props: StyledTheme) => string;
    treeNodeExpanderCursor: string;
    treeNodeExpanderPaddingInlineEnd: string;
    treeNodeExpanderIconTransformExpanded: string;
    treeNodeExpanderIconTransformRtl: string;
    treeNodeExpanderIconTransformExpandedRtl: string;
    treeNodeContentColumnGap: string;
    treeNodeContentTextDecoration: string;
    treeNodeContentContainerPaddingInlineEnd: string;
    treeNodeIconFontSize: string;
    treeNodeIconWidth: string;
    treeNodeIconHeight: (props: StyledTheme) => string;
    treeNodeIconColor: (props: StyledTheme) => string;
    treeNodeTitleFontSize: string;
    treeNodeTitleFontWeight: string;
    treeNodeTitleLineHeight: string;
    treeNodeTitleColor: (props: StyledTheme) => string;
    treeNodeTitleDisplayMinimized: string;
    treeNodeLoadingContainerMinWidth: string;
    treeNodeLoadingContainerJustifyContent: string;
    treeMinimizeButtonSize: string;
    treeMinimizeButtonTransform: string;
    treeMinimizeButtonTransformMinimized: string;
    treeNodeTrailingActionWidth: string;
    treeNodeTrailingActionHeight: string;
    treeNodeTrailingActionDisplay: string;
    treeNodeTrailingActionAlignItems: string;
    treeNodeTrailingActionJustifyContent: string;
    treeMinimizeButtonTransformRtl: string;
    treeMinimizeButtonTransformMinimizedRtl: string;
    wizardWidth: string;
    wizardHeight: string;
    wizardBackgroundColor: (props: StyledTheme) => string;
    wizardSidePanelGap: (props: StyledTheme) => string;
    wizardSidePanelPaddingInline: string;
    wizardSidePanelPaddingBlock: string;
    wizardSidePanelWidth: string;
    wizardSidePanelBackgroundColor: (props: StyledTheme) => string;
    wizardContentPanelPaddingInline: string;
    wizardContentPanelPaddingBlock: string;
    wizardStepHeaderPanelMarginInline: string;
    wizardStepHeaderPanelMarginBlock: string;
    wizardStepContentPaddingInline: string;
    wizardStepContentPaddingBlock: string;
    wizardHeaderMarginInline: string;
    wizardHeaderMarginBlock: string;
    wizardHeaderBorderBottomWidth: string;
    wizardHeaderBorderBottomColor: (props: StyledTheme) => string;
    wizardStepListGap: string;
    wizardStepListMarginInline: string;
    wizardStepListPaddingInline: string;
    wizardStepListPaddingBlock: string;
    wizardStepButtonHeight: string;
    wizardStepButtonBorder: string;
    wizardStepButtonBorderRadius: string;
    wizardStepButtonPaddingInline: string;
    wizardStepButtonBackgroundColor: string;
    wizardStepButtonCursor: string;
    wizardStepButtonCursorDisabled: string;
    wizardStepButtonBackgroundColorHover: (props: StyledTheme) => string;
    wizardStepButtonOutlineOffsetFocus: string;
    wizardStepButtonBoxShadowActive: (props: StyledTheme) => string;
    wizardStepButtonBackgroundColorActive: (props: StyledTheme) => string;
    wizardStepLabelFontWeight: (props: StyledTheme) => string;
    wizardStepLabelColor: (props: StyledTheme) => string;
    wizardStepLabelColorDisabled: (props: StyledTheme) => string;
    wizardStepLabelFontWeightActive: (props: StyledTheme) => string;
    wizardStepLabelColorActive: (props: StyledTheme) => string;
    wizardStepStatusIconSize: string;
    wizardStepStatusIconFillActive: (props: StyledTheme) => string;
    wizardStepHeaderTitleColor: (props: StyledTheme) => string;
    wizardStepHeaderDescriptionColor: (props: StyledTheme) => string;
    wizardTitleMarginInline: string;
    wizardTitleMarginBlock: string;
    wizardFooterMarginInline: string;
    wizardFooterMarginBlock: string;
    checkboxIconInnerBackgroundColorDisabled: (props: StyledTheme) => string;
    chipMultiSelectBackgroundColor: (props: StyledTheme) => string;
    datePickerHeaderControlColor: (props: StyledTheme) => string;
    datePickerGridCellBorderBottomSelected: (props: StyledTheme) => string;
    loginFormActionGroupBackgroundColor: (props: StyledTheme) => string;
    loginLanguageSelectColor: (props: StyledTheme) => string;
    mastheadTabColorSecondaryHover: (props: StyledTheme) => string;
    tabBackgroundColorHover: (props: StyledTheme) => string;
    toggleButtonGroupBorderColorSingleSelectSecondary: (props: StyledTheme) => string;
};
export {};
