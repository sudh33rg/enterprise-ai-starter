import { u as useIconProps, i as iconPropTypes } from "./prop-types.esm.js";
import * as React from "react";
import { forwardRef } from "react";
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AccordionIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 1H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1M2 0a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.5 3h6v1h-6z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 10H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1M2 9a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.5 12h6v1h-6zM10.461 2.396a.5.5 0 1 0-.707.708L11.5 4.85l1.746-1.746a.5.5 0 1 0-.707-.708L11.5 3.436zM10.461 11.396a.5.5 0 0 0-.707.708L11.5 13.85l1.746-1.746a.5.5 0 1 0-.707-.707L11.5 12.435z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AccordionIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AchievementIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.646 10.35 6 11v1.629q-1.009.124-2 .37v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2a17 17 0 0 0-2-.37v-1.63l.354-.649q.382-.702.73-1.421c1.007-.303 1.907-.746 2.591-1.31C14.462 6.972 15 6.129 15 5.143c0-.963-.444-1.636-.976-2.056a2.9 2.9 0 0 0-.704-.407q.113-.462.211-.927l.115-.543A.357.357 0 0 0 13.4.792 18.94 18.94 0 0 0 2.6.792a.357.357 0 0 0-.248.417l.115.543q.099.466.211.927c-.236.096-.48.23-.703.407C1.444 3.506 1 4.18 1 5.142c0 .986.538 1.83 1.325 2.478.684.563 1.584 1.006 2.591 1.309q.347.72.73 1.422m3.83-.478a30.7 30.7 0 0 0 3.067-8.28 17.94 17.94 0 0 0-9.086 0 30.7 30.7 0 0 0 3.067 8.28l.07.128h2.812zm3.59-6.213a32 32 0 0 1-1.405 4 5.7 5.7 0 0 0 1.378-.811c.642-.529.961-1.114.961-1.706 0-.616-.27-1.014-.595-1.27a2 2 0 0 0-.34-.213m-8.727 4a32 32 0 0 1-1.404-4 2 2 0 0 0-.34.212C2.27 4.128 2 4.526 2 5.141c0 .593.32 1.178.96 1.707a5.7 5.7 0 0 0 1.38.811M9 11H7v1.539q1-.06 2 0zm2 4H5v-1.198c1.98-.392 4.02-.392 6 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AchievementIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AcknowledgeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11.106 6.854a.5.5 0 0 0-.707-.708L7.076 9.47 5.854 8.247a.5.5 0 0 0-.708.707l1.93 1.93z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.667a2 2 0 0 0-.4-1.2L11.6.8A2 2 0 0 0 10 0zm0 15h8a1 1 0 0 0 1-1V4.667a1 1 0 0 0-.2-.6l-2-2.667A1 1 0 0 0 10 1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AcknowledgeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ActionBarIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 5H2a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1M2 4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("circle", {
        cx: "13",
        cy: "8",
        r: "1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("circle", {
        cx: "10",
        cy: "8",
        r: "1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("circle", {
        cx: "7",
        cy: "8",
        r: "1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3 1h10v1H3zM3 14h10v1H3z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ActionBarIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AddCircleFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.75 4.5a.75.75 0 0 0-1.5 0v2.75H4.5a.75.75 0 0 0 0 1.5h2.75v2.75a.75.75 0 0 0 1.5 0V8.75h2.75a.75.75 0 0 0 0-1.5H8.75z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
AddCircleFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AddCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8.75 4.5a.75.75 0 0 0-1.5 0v2.75H4.5a.75.75 0 0 0 0 1.5h2.75v2.75a.75.75 0 0 0 1.5 0V8.75h2.75a.75.75 0 0 0 0-1.5H8.75z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
AddCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AddSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.5 4.25c.276 0 .5.208.5.466v5.818c0 .258-.224.466-.5.466s-.5-.208-.5-.466V4.717c0-.258.224-.466.5-.466",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.25 7.5c0-.276.216-.5.483-.5H10.5c.267 0 .5.224.5.5s-.233.5-.5.5H4.733a.49.49 0 0 1-.483-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AddSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AddTemplateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 1H1v3h5zM1 0a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM15 1h-5v3h5zm-5-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM0 8.5A1.5 1.5 0 0 1 1.5 7h13A1.5 1.5 0 0 1 16 8.5V10h-1V8.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v6a.5.5 0 0 0 .5.5H10v1H1.5A1.5 1.5 0 0 1 0 14.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13.5 16a.5.5 0 0 1-.5-.5V14h-1.5a.5.5 0 0 1 0-1H13v-1.5a.5.5 0 0 1 1 0V13h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AddTemplateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.5 2.25a.5.5 0 0 1 .5.5v10a.5.5 0 0 1-1 0v-10a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.25 7.5a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1h-10a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AddressBookIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 5.264c0 .71.31 1.34.799 1.782A4 4 0 0 0 4 10.666v.794c0 1.035.839 1.873 1.873 1.873h4.254A1.873 1.873 0 0 0 12 11.46v-.793a4 4 0 0 0-2.299-3.621c.49-.442.799-1.073.799-1.782 0-1.359-1.136-2.43-2.5-2.43s-2.5 1.071-2.5 2.43M8 3.834c-.845 0-1.5.656-1.5 1.43 0 .694.526 1.294 1.243 1.41a4 4 0 0 1 .514 0c.717-.116 1.243-.716 1.243-1.41 0-.774-.655-1.43-1.5-1.43m-3 6.833A3 3 0 0 1 7.717 7.68a2.6 2.6 0 0 0 .566 0A3 3 0 0 1 11 10.667v.793a.873.873 0 0 1-.873.873H5.873A.873.873 0 0 1 5 11.46z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 6V4H.5a.5.5 0 0 1 0-1H1V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1H.5a.5.5 0 0 1 0-1H1v-2H.5a.5.5 0 0 1 0-1H1V7H.5a.5.5 0 0 1 0-1zm2-5h10a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-1h.5a.5.5 0 0 0 0-1H2v-2h.5a.5.5 0 0 0 0-1H2V7h.5a.5.5 0 0 0 0-1H2V4h.5a.5.5 0 0 0 0-1H2V2a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AddressBookIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AdminCenterIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M15.5 12a.5.5 0 0 1 0 1H15v2.5a.5.5 0 0 1-1 0V13H2v2.5a.5.5 0 0 1-1 0V13H.5a.5.5 0 0 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 .5a3.25 3.25 0 0 1 3.25 3.25c0 1.081-.53 2.036-1.343 2.627A5 5 0 0 1 13 11h-1a4 4 0 0 0-8 0H3a5 5 0 0 1 3.092-4.623A3.24 3.24 0 0 1 4.75 3.75 3.25 3.25 0 0 1 8 .5m0 1A2.25 2.25 0 1 0 8 6a2.25 2.25 0 0 0 0-4.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AdminCenterIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AdminWorkspaceIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 9a2.25 2.25 0 1 0 0-4.5A2.25 2.25 0 0 0 8 9m3.25-2.25a3.25 3.25 0 1 1-6.5 0 3.25 3.25 0 0 1 6.5 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3 14.245V14a5 5 0 0 1 10 0v.245a8 8 0 0 1-1 .685V14a4 4 0 0 0-8 0v.93a8 8 0 0 1-1-.685",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
AdminWorkspaceIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AlarmClockIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.5 8.82V5.165a.5.5 0 0 1 1 0V8.4l1.6 1.575a.5.5 0 1 1-.7.713z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.296 1.209A2.93 2.93 0 0 0 3.916 0C2.307 0 1 1.285 1 2.87c0 .748.29 1.43.767 1.94A7 7 0 0 0 1 8c0 2.078.905 3.944 2.343 5.226l-1.042 2.05a.49.49 0 0 0 .222.667c.248.122.55.021.676-.225l.95-1.871A6.97 6.97 0 0 0 8 15a6.97 6.97 0 0 0 3.848-1.151l.953 1.875a.5.5 0 0 0 .674.217.5.5 0 0 0 .224-.67l-1.04-2.047A6.98 6.98 0 0 0 15 8a7 7 0 0 0-.767-3.19c.476-.51.767-1.192.767-1.94C15 1.285 13.694 0 12.083 0c-.982 0-1.85.477-2.379 1.209a7 7 0 0 0-3.408 0m-1.021.341A1.93 1.93 0 0 0 3.917 1C2.843 1 2 1.852 2 2.87c0 .381.117.738.321 1.037A7 7 0 0 1 5.275 1.55m5.45 0a7 7 0 0 1 2.954 2.356c.203-.298.321-.656.321-1.036C14 1.852 13.157 1 12.083 1c-.535 0-1.013.212-1.358.55M14 8A6 6 0 1 1 2 8a6 6 0 0 1 12 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AlarmClockIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AnnotateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5 12v3l2.5-3H14a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1zm3 1h6a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2v2c0 .945 1.19 1.363 1.78.625z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10.552 3.017c.453-.075.944.032 1.333.422.377.377.466.852.373 1.292-.088.418-.337.802-.634 1.1l-4.47 4.52a.5.5 0 0 1-.234.134l-2.034.505a.5.5 0 0 1-.606-.606l.505-2.028a.5.5 0 0 1 .132-.233l4.5-4.5a2.14 2.14 0 0 1 1.135-.606m.162.987a1.14 1.14 0 0 0-.59.326L5.722 8.732l-.27 1.088 1.09-.271 4.372-4.424.366.362-.363-.364c.202-.202.325-.42.363-.599.033-.157.003-.274-.102-.378a.5.5 0 0 0-.464-.142",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
AnnotateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AnnouncementIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "m4 10.2 6.486 3.891A1 1 0 0 0 12 13.234V2.646a1 1 0 0 0-1.461-.887L4.306 5H1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1v3a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1zm0-1.166 7 4.2V2.646L4.55 6H1V9h3zM2 10h1V13H2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13.5 8a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H14a.5.5 0 0 1-.5-.5M13.44 9.61a.5.5 0 0 0-.625.78l1 .8a.5.5 0 1 0 .625-.78zM14.527 4.677a.5.5 0 0 1-.06.705l-1 .845a.5.5 0 1 1-.645-.763l1-.846a.5.5 0 0 1 .705.06",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AnnouncementIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AppSwitchIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3.25 3a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 5 4.75v-1.5A.25.25 0 0 0 4.75 3zM3.25 7a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 5 8.75v-1.5A.25.25 0 0 0 4.75 7zM3.25 11a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-1.5a.25.25 0 0 0-.25-.25zM7.25 3a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 9 4.75v-1.5A.25.25 0 0 0 8.75 3zM7.25 7a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5A.25.25 0 0 0 9 8.75v-1.5A.25.25 0 0 0 8.75 7zM7.25 11a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-1.5a.25.25 0 0 0-.25-.25zM11.25 3a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-1.5a.25.25 0 0 0-.25-.25zM11.25 7a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-1.5a.25.25 0 0 0-.25-.25zM11.25 11a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h1.5a.25.25 0 0 0 .25-.25v-1.5a.25.25 0 0 0-.25-.25z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AppSwitchIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ApplyToAllIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 9H2a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h2zM2 2h12a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3v1h3a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4V6H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8.498 4a.5.5 0 0 1 .5.5v6.157l1.622-1.621a.5.5 0 1 1 .707.707L8.498 12.57 5.67 9.743a.5.5 0 1 1 .707-.707l1.621 1.62V4.5a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ApplyToAllIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArchiveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M6.286 8.071a.5.5 0 0 0 0 1h3.428a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 5a1 1 0 0 0 1 1v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6a1 1 0 0 0 1-1V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2zm14-3H2a1 1 0 0 0-1 1v2h14V3a1 1 0 0 0-1-1M2 6h12v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ArchiveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowDownCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.707L8 12.207 4.646 8.853a.5.5 0 1 1 .708-.707L7.5 10.293V4.5A.5.5 0 0 1 8 4",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ArrowDownCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowDownIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m7.5 14.963 5.345-5.101a.5.5 0 1 0-.69-.724L8 13.104V1.5a.5.5 0 0 0-1 0v11.604L2.845 9.138a.5.5 0 1 0-.69.724z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ArrowDownIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowLeftCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "m3.793 8 3.353-3.354a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ArrowLeftCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowLeftIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m1.04 8.5 5.1 5.345a.5.5 0 1 0 .724-.69L2.9 9h11.605a.5.5 0 1 0 0-1H2.899l3.965-4.155a.5.5 0 1 0-.723-.69z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ArrowLeftIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowRightCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "m12.207 8-3.353 3.354a.5.5 0 0 1-.708-.708L10.293 8.5H4.5a.5.5 0 0 1 0-1h5.793L8.146 5.354a.5.5 0 1 1 .708-.708z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ArrowRightCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowRightIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m14.96 8.5-5.1-5.345a.5.5 0 1 0-.724.69L13.102 8H1.495a.5.5 0 0 0 0 1h11.606l-3.966 4.155a.5.5 0 1 0 .724.69z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ArrowRightIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowUpCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "m8 3.793 3.354 3.353a.5.5 0 0 1-.708.708L8.5 5.707V11.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ArrowUpCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ArrowUpIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m7.5 1.038-5.345 5.1a.5.5 0 1 0 .69.724L7 2.897v11.604a.5.5 0 0 0 1 0V2.897l4.155 3.965a.5.5 0 0 0 .69-.724z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ArrowUpIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AttachmentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5.858 14.708c.428-.175.8-.426 1.034-.66l.002-.001 7.453-7.453.707.707-7.453 7.453-.025.024c-.338.33-.816.642-1.34.856-.53.217-1.15.35-1.756.268-1.586-.115-2.794-1.424-2.68-3.126a4.06 4.06 0 0 1 .795-2.175l-.003-.003.022-.023.031-.04.005.004L9.81 3.29c.38-.386.9-.605 1.441-.605.542 0 1.06.218 1.442.605.38.387.593.91.593 1.453a2.07 2.07 0 0 1-.593 1.453l-6.511 6.605a.5.5 0 0 1-.712-.702l6.51-6.605a1.071 1.071 0 0 0 0-1.503 1.02 1.02 0 0 0-.729-.306c-.272 0-.534.11-.728.307l-7.15 7.237c-.216.297-.524.84-.576 1.614-.076 1.15.717 1.993 1.769 2.063l.019.001.018.003c.383.055.825-.026 1.255-.202",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m8.628 2.258-.106.12-.008-.007-7.222 7.111a.5.5 0 1 1-.702-.713l7.32-7.207A4.42 4.42 0 0 1 10.58.199a4.73 4.73 0 0 1 3.653 1.084 4.8 4.8 0 0 1 1.661 3.088c.133 1.091-.122 2.214-.838 2.93l-.707-.708c.432-.431.662-1.208.553-2.101a3.8 3.8 0 0 0-1.312-2.444 3.73 3.73 0 0 0-2.88-.857c-.714.093-1.39.4-1.926.91l-.04.043z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
AttachmentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const AviatorPrimaryIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.482 15.53c-.281.113-.566-.156-.459-.434l.21-.544L7.53.764A.499.499 0 0 1 8.46.763c1.186 3.062 4.291 11.08 5.304 13.702l.212.549c.108.281-.185.552-.466.43l-3.597-1.55a4.27 4.27 0 0 0-3.28-.04zm3.777-2.603a5.27 5.27 0 0 1 4.052.048l2.168.935c-1.092-2.824-3.244-8.38-4.481-11.575L3.5 14.04z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5.274 4.057H0c0 1.105.896 2.002 2.002 2.002h2.451zM4.044 7.057H1c0 1.105.896 2.002 2.002 2.002h.222zM16 4.057h-5.274l.82 2.002h2.452A2 2 0 0 0 16 4.057M15 7.057h-3.044l.82 2.002h.222A2 2 0 0 0 15 7.057",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
AviatorPrimaryIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BadgeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 9a5 5 0 1 0-6 0v6.79l3-2.4 3 2.4zm1-4a4 4 0 1 1-8 0 4 4 0 0 1 8 0m-2 4.584A5 5 0 0 1 8 10a5 5 0 0 1-2-.416v4.126l2-1.6 2 1.6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BadgeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BlockIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0a7 7 0 0 1-11.584 5.29l9.875-9.874A6.97 6.97 0 0 1 15 8M2.71 12.584l9.874-9.875a7 7 0 0 0-9.874 9.874",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
BlockIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BookIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.088 1c.504 0 .912.408.912.912V11.5a.5.5 0 0 1-.019.127.65.65 0 0 1-.12.262c-.039.061-.09.153-.142.266-.107.232-.203.53-.203.845s.096.613.203.845a2.5 2.5 0 0 0 .185.334l.01.013q.034.045.052.093.048.098.05.215a.5.5 0 0 1-.516.496H3.75c-.47 0-.911-.251-1.216-.59A2.12 2.12 0 0 1 1.984 13 2 2 0 0 1 2 12.762V2.875C2 1.839 2.84 1 3.875 1zM3.75 12a.75.75 0 0 0-.492.258c-.172.191-.242.473-.242.742s.07.539.242.73c.182.204.41.274.492.274h8.92A3 3 0 0 1 12.484 13c0-.378.084-.72.185-1zm.125-10A.875.875 0 0 0 3 2.875v8.34c.228-.132.484-.215.75-.215H13V2H9.016v5.5a.516.516 0 0 1-.82.416L7 7.039l-1.195.877a.516.516 0 0 1-.82-.416V2zm2.14 4.482.68-.498a.515.515 0 0 1 .61 0l.68.498V2h-1.97z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BookIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BookmarkFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M4 0a2 2 0 0 0-2 2v13.849L8 10l6 5.848V2a2 2 0 0 0-2-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BookmarkFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BookmarkGroupIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11 2h-1a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v8.383l1-.945v1.376L2.004 12.7H2V2a2 2 0 0 1 2-2h5a2 2 0 0 1 2 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.004 15.7 9.5 11.452l4.496 4.248H14V5a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v10.7zM9.5 10.076 6 13.383V5a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v8.383z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BookmarkGroupIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BookmarkIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "m8 8.604 5 4.873V2a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v11.477zm-6 7.245V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.848L8 10z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BookmarkIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BoxIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.621.76a.93.93 0 0 1 .758 0l6.066 2.696c.337.15.555.485.555.854v7.38a.93.93 0 0 1-.555.854L8.38 15.24a.93.93 0 0 1-.758 0l-6.066-2.696A.94.94 0 0 1 1 11.691V4.31c0-.369.218-.704.555-.854zM2 11.648l5.5 2.443V7.325L2 4.88zm9.5-5.657v2.342a.5.5 0 0 1-1 0V6.435l-2 .89v6.766l5.5-2.443V4.88zM2.637 4.069 8 6.453l1.794-.798-5.18-2.465zm3.18-1.414 5.156 2.453q.011.006.023.012l2.366-1.051L8 1.686z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BoxIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BroadcastIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2.303 2.83a.5.5 0 1 0-.75-.66C.493 3.37 0 4.99 0 6.572c0 1.581.492 3.221 1.552 4.43a.5.5 0 0 0 .752-.66C1.436 9.353 1 7.963 1 6.573s.435-2.759 1.303-3.742M14.447 2.17a.5.5 0 1 0-.75.66C14.565 3.815 15 5.184 15 6.574s-.436 2.78-1.304 3.77a.5.5 0 0 0 .752.66C15.508 9.793 16 8.153 16 6.572c0-1.583-.493-3.203-1.553-4.404",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.711 3.61a.5.5 0 0 1 .077.703A3.48 3.48 0 0 0 3 6.5c0 .81.288 1.565.788 2.187a.5.5 0 0 1-.78.626A4.47 4.47 0 0 1 2 6.5c0-1.055.377-2.027 1.008-2.813a.5.5 0 0 1 .703-.077M12.289 3.61a.5.5 0 0 1 .703.077A4.47 4.47 0 0 1 14 6.5a4.47 4.47 0 0 1-1.008 2.813.5.5 0 0 1-.78-.626c.5-.622.788-1.377.788-2.187s-.288-1.565-.788-2.187a.5.5 0 0 1 .077-.703",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8.5 9.458a3 3 0 1 0-1 0V13.5a.5.5 0 1 0 1 0zM10 6.5a2 2 0 1 1-4 0 2 2 0 0 1 4 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BroadcastIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BugIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 3.5a3.5 3.5 0 1 1 7 0v1h.5a.5.5 0 0 1 .5.5v1h1a.5.5 0 0 0 .5-.5V5a.5.5 0 0 1 1 0v.5A1.5 1.5 0 0 1 13.5 7h-1v1h2a.5.5 0 0 1 0 1h-2v1h1a1.5 1.5 0 0 1 1.5 1.5v.5a.5.5 0 0 1-1 0v-.5a.5.5 0 0 0-.5-.5h-1v.5a4.5 4.5 0 1 1-9 0V11h-1a.5.5 0 0 0-.5.5v.5a.5.5 0 0 1-1 0v-.5A1.5 1.5 0 0 1 2.5 10h1V9h-2a.5.5 0 0 1 0-1h2V7h-1A1.5 1.5 0 0 1 1 5.5V5a.5.5 0 0 1 1 0v.5a.5.5 0 0 0 .5.5h1V5a.5.5 0 0 1 .5-.5h.5zm0 3v5a3.5 3.5 0 0 0 3 3.465V5.5h-3zm7-1v6a3.5 3.5 0 0 1-3 3.465V5.5zm-6-1h5v-1a2.5 2.5 0 0 0-5 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BugIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ButtonIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.467 12.172a.02.02 0 0 0-.017.008l-2.208 2.755a.02.02 0 0 1-.036-.012v-.017L7.98 6.98a.02.02 0 0 1 .033-.016l6.05 5.268a.02.02 0 0 1-.015.035zm4.254-.699L8.672 6.205c-.673-.586-1.721-.09-1.696.803l.227 7.943c.027.954 1.226 1.357 1.822.613l1.903-2.374 3.094.082c.96.026 1.424-1.168.699-1.799",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.353 3C1.053 3 0 4.12 0 5.5v5C0 11.88 1.053 13 2.353 13H6v-1H2.353c-.78 0-1.412-.672-1.412-1.5v-5c0-.828.632-1.5 1.412-1.5h11.294c.78 0 1.412.672 1.412 1.5v4.625l.911.773q.03-.195.03-.398v-5C16 4.12 14.947 3 13.647 3z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ButtonIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CabinetIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.722 11a.5.5 0 0 1 0 1H7.277a.5.5 0 0 1 0-1zM8.722 7a.5.5 0 0 1 0 1H7.277a.5.5 0 0 1 0-1zM8.722 3a.5.5 0 0 1 0 1H7.277a.5.5 0 0 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.066 1c.516 0 .934.418.934.934v11.132a.934.934 0 0 1-.934.934h-1.593v.5a.5.5 0 0 1-1 0V14H4.527v.5a.5.5 0 0 1-1 0V14H1.934A.934.934 0 0 1 1 13.066V1.934C1 1.418 1.418 1 1.934 1zM2 13h12v-3H2zm0-4h12V6H2zm0-4h12V2H2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CabinetIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CalculatorIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm1 0h6v2H5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M6 7.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M8 8.5A.75.75 0 1 0 8 7a.75.75 0 0 0 0 1.5M11.5 7.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M8 11a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M11.5 10.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M10.75 13.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M6 10.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M5.25 12a.75.75 0 0 0 0 1.5H8.5a.75.75 0 0 0 0-1.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm2-1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CalculatorIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CalendarApprovalHistoryIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 17 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3.396 6.198a4.782 4.782 0 1 1-2.045 6.706.532.532 0 1 1 .918-.534A3.72 3.72 0 1 0 2.73 8H3.5a.5.5 0 0 1 0 1H1V6.5a.5.5 0 0 1 1 0v.725c.396-.422.868-.77 1.396-1.027M7 1h5V0h1v.999h.501a2.5 2.5 0 0 1 2.5 2.5v8a2.5 2.5 0 0 1-2.5 2.5H11v-1h2.502a1.5 1.5 0 0 0 1.5-1.5v-8a1.5 1.5 0 0 0-1.5-1.5h-.501V3h-1V1.999h-5V3h-1V1.999H5.5a1.5 1.5 0 0 0-1.5 1.5v1.5H3v-1.5a2.5 2.5 0 0 1 2.5-2.5h.501V0h1zm-.2 7.934a.574.574 0 0 1 .82.802L4.904 12.5l-1.49-1.517a.603.603 0 0 1 .849-.856l.7.676zM15.002 5h-11V4h11z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CalendarApprovalHistoryIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CalendarApprovalIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11.5 7a4.5 4.5 0 1 1 0 9 4.5 4.5 0 0 1 0-9m0 .844A3.66 3.66 0 0 0 7.844 11.5a3.66 3.66 0 0 0 3.656 3.656 3.66 3.66 0 0 0 3.656-3.656A3.66 3.66 0 0 0 11.5 7.844M4 .998h5V0h1v.998h.5a2.5 2.5 0 0 1 2.5 2.5V6h-1V5H1v6.5A1.5 1.5 0 0 0 2.5 13H6v1H2.5A2.5 2.5 0 0 1 0 11.5V3.498a2.5 2.5 0 0 1 2.5-2.5H3V0h1zm8.802 8.935a.574.574 0 1 1 .818.802L10.904 13.5l-1.489-1.517a.603.603 0 0 1 .849-.856l.7.676zM2.5 1.998a1.5 1.5 0 0 0-1.5 1.5V4h11v-.502a1.5 1.5 0 0 0-1.5-1.5H10V3H9V1.998H4V3H3V1.998z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CalendarApprovalIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CalendarRemoveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11.5 7a4.5 4.5 0 1 1 0 9 4.5 4.5 0 0 1 0-9m0 .844A3.66 3.66 0 0 0 7.844 11.5a3.66 3.66 0 0 0 3.656 3.656 3.66 3.66 0 0 0 3.656-3.656A3.66 3.66 0 0 0 11.5 7.844M4 .998h5V0h1v.998h.5a2.5 2.5 0 0 1 2.5 2.5V6h-1V5H1v6.5A1.5 1.5 0 0 0 2.5 13H6v1H2.5A2.5 2.5 0 0 1 0 11.5V3.498a2.5 2.5 0 0 1 2.5-2.5H3V0h1zm8.564 8.73a.5.5 0 0 1 .707.707L12.206 11.5l1.066 1.066a.5.5 0 0 1-.707.707l-1.066-1.066-1.064 1.065a.5.5 0 1 1-.706-.708l1.063-1.064-1.063-1.064a.5.5 0 0 1 .707-.706l1.063 1.063zM2.5 1.999a1.5 1.5 0 0 0-1.5 1.5V4h11v-.502a1.5 1.5 0 0 0-1.5-1.5H10V3H9V1.998H4V3H3V1.998z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CalendarRemoveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CalendarIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 2v-.5a.5.5 0 0 1 1 0V2h1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1v-.5a.5.5 0 0 1 1 0V2zm3 4v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6zm0-1V4a1 1 0 0 0-1-1h-1v.5a.5.5 0 0 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3H3a1 1 0 0 0-1 1v1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CalendarIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CameraIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0-1a2 2 0 1 0 0-4 2 2 0 0 0 0 4",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.5 7a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 2A1.5 1.5 0 0 1 13 3.5h1a2 2 0 0 1 2 2V12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V5.5a2 2 0 0 1 2-2h1A1.5 1.5 0 0 1 4.5 2zM4 4.5v-1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1h2a1 1 0 0 1 1 1V12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5.5a1 1 0 0 1 1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CameraIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const BriefcaseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2h4a1 1 0 0 1 1 1v1H5V3a1 1 0 0 1 1-1M4 4V3a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1h2a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2zm8 1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
BriefcaseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChangeContentTypeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 17",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M15.855 8.7a.5.5 0 0 1-.715.698L13.997 8.23v3.275a2.5 2.5 0 0 1-2.5 2.5H9.22l1.168 1.143a.5.5 0 0 1-.7.714L7.28 13.505l2.41-2.357a.5.5 0 0 1 .699.714L9.22 13.005h2.275a1.5 1.5 0 0 0 1.5-1.5v-2l.001-.044V8.23l-1.142 1.167a.5.5 0 0 1-.715-.699l2.357-2.409zM6.051 0a2 2 0 0 1 1.552.74l2.949 2.632A2 2 0 0 1 11 4.632V7l-1 1V5H5.5a.5.5 0 0 1-.5-.5V1H1.5a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5H6v1H1.5A1.5 1.5 0 0 1 0 12.5v-11A1.5 1.5 0 0 1 1.5 0zM6 4h3.774L6.828 1.37A1 1 0 0 0 6.052 1H6z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChangeContentTypeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChangeLocationIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M15.855 8.69a.5.5 0 0 1-.715.699L13.997 8.22v3.274a2.5 2.5 0 0 1-2.5 2.5H9.22l1.168 1.143a.5.5 0 0 1-.7.714L7.28 13.496l2.41-2.357a.5.5 0 0 1 .699.714L9.22 12.996h2.275a1.5 1.5 0 0 0 1.5-1.5v-2l.001-.044v-1.23l-1.142 1.168a.5.5 0 0 1-.715-.7l2.357-2.409z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.25 3.5a1.75 1.75 0 1 1 0 3.5 1.75 1.75 0 0 1 0-3.5m0 1a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.25 0c2.9 0 5.25 2.35 5.25 5.25 0 2.708-3.143 6.463-4.565 8.024a.918.918 0 0 1-1.37 0C3.143 11.714 0 7.958 0 5.25 0 2.35 2.35 0 5.25 0m0 1A4.25 4.25 0 0 0 1 5.25c0 1.038.634 2.439 1.586 3.895.898 1.372 1.967 2.627 2.664 3.396.697-.769 1.766-2.024 2.664-3.396C8.867 7.689 9.5 6.288 9.5 5.25A4.25 4.25 0 0 0 5.25 1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChangeLocationIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChangeOrderIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 2H2v3h5zM2 1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM7 11H2v3h5zm-5-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m9 12.5 2.102 2.345a.5.5 0 1 0 .723-.69L10.86 13h.605a.5.5 0 0 0 0-1h-.605l.965-1.155a.5.5 0 1 0-.723-.69zM9 3.5l2.102 2.345a.5.5 0 1 0 .723-.69L10.86 4h.605a.5.5 0 0 0 0-1h-.605l.965-1.155a.5.5 0 1 0-.723-.69z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.5 4H10V3h2.5A2.5 2.5 0 0 1 15 5.5v5a2.5 2.5 0 0 1-2.5 2.5H10v-1h2.5a1.5 1.5 0 0 0 1.5-1.5v-5A1.5 1.5 0 0 0 12.5 4",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChangeOrderIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChartBarIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 1a1 1 0 0 0-1 1v13h4V2a1 1 0 0 0-1-1zm2 1H7v12h2zM2 7a1 1 0 0 0-1 1v7h4V8a1 1 0 0 0-1-1zm2 1H2v6h2zM11 5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v10h-4zm1 0h2v9h-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChartBarIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChartDonutIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M.004 8.5A7.5 7.5 0 0 1 7 1.017V0h.5c2.235 0 4.482.954 6.055 2.414l.006.006.007.007C15.168 4.027 16 6.155 16 8.5V9h-1.012A7.5 7.5 0 0 1 .004 8.5M7 4.56A4.039 4.039 0 1 0 11.444 9h2.541A6.5 6.5 0 1 1 7 2.02zm1 .018A4.04 4.04 0 0 1 11.425 8h3.56c-.108-1.893-.835-3.573-2.118-4.86C11.587 1.954 9.8 1.146 8 1.018zm2.466 3.999a3.038 3.038 0 1 1-6.077 0 3.038 3.038 0 0 1 6.077 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ChartDonutIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChartLineIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2 1.5a.5.5 0 0 0-1 0V13a2 2 0 0 0 2 2h11.5a.5.5 0 0 0 0-1H3a1 1 0 0 1-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m13.864 2.394-2.485.621a.5.5 0 1 0 .243.97l.987-.247-2.265 4.907L8.38 6.71a1 1 0 0 0-1.502.113L3.6 11.2a.5.5 0 0 0 .8.6l3.278-4.376 1.965 1.934a1 1 0 0 0 1.61-.294l2.106-4.565.156.622a.5.5 0 0 0 .97-.242z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChartLineIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChartPartitionIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2zm2-1h10a1 1 0 0 1 1 1v2H2V3a1 1 0 0 1 1-1M2 6v4h6V6zm7 0v4h5V6zm-7 7v-2h3v3H3a1 1 0 0 1-1-1m4 1v-3h4v3zm5 0h2a1 1 0 0 0 1-1v-2h-3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChartPartitionIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChartPieIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8.997c0-.295-.016-.636-.047-.997-.085-.979-.283-2.1-.59-2.84A8.36 8.36 0 0 0 10.842.635C10.101.33 8.979.132 8 .047A12 12 0 0 0 7 0v1.017A7.5 7.5 0 1 0 14.983 9H16zM8 1.051c.884.082 1.858.26 2.458.51a7.36 7.36 0 0 1 3.982 3.98c.248.6.427 1.575.51 2.459H8zM13.98 9H8a1 1 0 0 1-1-1V2.02A6.5 6.5 0 1 0 13.98 9",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ChartPieIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChartSankeyIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V3H5v1h.12a3.5 3.5 0 0 1 2.658 1.222l1.204 1.405a2.5 2.5 0 0 0 1.898.873H11V7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1H5a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v.5c.88 0 1.696-.477 2.134-1.242A3.49 3.49 0 0 1 10.156 8.5H11h-.12a3.5 3.5 0 0 1-2.658-1.222L7.018 5.873A2.5 2.5 0 0 0 5.12 5H5v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm1 0h2v5H2zm9 7.5h-.844c-.887 0-1.712.481-2.154 1.254A3.47 3.47 0 0 1 5 12.5v.5h6zM12 2h2v2h-2zm-8 9H2v3h2zm8-4h2v7h-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChartSankeyIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChatsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 8h3l2.22 2.625c.983.805 1.78.18 1.78-.625V8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2m3.5-1 2.5 3V7h1a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 5h2v1H2a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h2v3l2.5-3H9a1 1 0 0 0 1-1h1a2 2 0 0 1-2 2H7l-2.22 2.625C4.19 16.363 3 15.945 3 15v-2H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ChatsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CheckInIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m10.964 11.803 1.838-1.87a.573.573 0 0 1 .818.803L10.905 13.5l-1.49-1.517a.603.603 0 0 1 .848-.856z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 7a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9m0 .844a3.66 3.66 0 0 1 3.656 3.656 3.66 3.66 0 0 1-3.656 3.656A3.66 3.66 0 0 1 7.844 11.5 3.66 3.66 0 0 1 11.5 7.844",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 2a2 2 0 0 1 2-2h5.05a2 2 0 0 1 1.552.74l2.95 2.632A2 2 0 0 1 14 4.632v2.22c-.307-.254-.642-.349-1-.532V5H8.5a.5.5 0 0 1-.5-.5V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h3.257c.314.38.677.716 1.08 1H4a2 2 0 0 1-2-2zm10.774 2L9.826 1.37A1 1 0 0 0 9.05 1H9v3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CheckInIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CheckOutIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 7a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9m0 .844a3.66 3.66 0 0 1 3.656 3.656 3.66 3.66 0 0 1-3.656 3.656A3.66 3.66 0 0 1 7.844 11.5 3.66 3.66 0 0 1 11.5 7.844",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 2a2 2 0 0 1 2-2h5.05a2 2 0 0 1 1.552.74l2.95 2.632A2 2 0 0 1 14 4.632v2.22c-.307-.254-.642-.349-1-.532V5H8.5a.5.5 0 0 1-.5-.5V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h3.257c.314.38.677.716 1.08 1H4a2 2 0 0 1-2-2zm10.774 2L9.826 1.37A1 1 0 0 0 9.05 1H9v3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M9.858 10.79a.6.6 0 0 0 0 1.2h3.3a.6.6 0 1 0 0-1.2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CheckOutIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CheckboxIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.854 4.146a.5.5 0 0 1 0 .708L7.5 11.207 4.146 7.854a.5.5 0 1 1 .708-.708L7.5 9.793l5.646-5.647a.5.5 0 0 1 .708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1V9.5a.5.5 0 0 1 1 0V13a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h7.5a.5.5 0 0 1 0 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CheckboxIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CheckmarkSelectIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.505 4.49a.714.714 0 0 1 0 1.01l-6.22 6.22-2.79-2.791a.714.714 0 0 1 1.01-1.01l1.78 1.78 5.21-5.21a.714.714 0 0 1 1.01 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CheckmarkSelectIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CheckmarkIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.854 4.146a.5.5 0 0 1 0 .708L6.5 11.207 3.146 7.854a.5.5 0 1 1 .708-.708L6.5 9.793l5.646-5.647a.5.5 0 0 1 .708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CheckmarkIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronDoubleDownIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M4.854 3.793a.5.5 0 1 0-.708.707L8 8.354 11.854 4.5a.5.5 0 0 0-.708-.707L8 6.939z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.854 7.793a.5.5 0 1 0-.708.707L8 12.354 11.854 8.5a.5.5 0 0 0-.708-.707L8 10.939z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronDoubleDownIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronDoubleLeftIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.21 4.854a.5.5 0 0 0-.707-.708L3.65 8l3.853 3.854a.5.5 0 0 0 .708-.708L5.064 8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.21 4.854a.5.5 0 0 0-.707-.708L7.65 8l3.854 3.854a.5.5 0 0 0 .707-.708L9.064 8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronDoubleLeftIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronDoubleRightIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3.796 11.146a.5.5 0 0 0 .707.708L8.357 8 4.503 4.146a.5.5 0 1 0-.707.708L6.943 8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.796 11.146a.5.5 0 0 0 .707.708L12.357 8 8.503 4.146a.5.5 0 1 0-.707.708L10.943 8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronDoubleRightIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronDoubleUpIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11.146 8.207a.5.5 0 0 0 .708-.707L8 3.646 4.146 7.5a.5.5 0 1 0 .708.707L8 5.061z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M11.146 12.207a.5.5 0 0 0 .708-.707L8 7.646 4.146 11.5a.5.5 0 1 0 .708.707L8 9.061z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronDoubleUpIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronFirstIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "m8.707 8 3.147-3.146a.5.5 0 0 0-.708-.708l-3.5 3.5L7.293 8l.353.354 3.5 3.5a.5.5 0 0 0 .708-.708zM5 4.5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronFirstIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronLargeDownIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.146 5.146a.5.5 0 0 1 .708 0L8 10.293l5.146-5.147a.5.5 0 0 1 .708.708L8 11.707 2.146 5.854a.5.5 0 0 1 0-.708",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronLargeDownIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronLargeLeftIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.854 2.146a.5.5 0 0 1 0 .708L5.707 8l5.147 5.146a.5.5 0 0 1-.707.708L4.292 8l5.853-5.854a.5.5 0 0 1 .708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronLargeLeftIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronLargeRightIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.146 13.854a.5.5 0 0 1 0-.708L10.293 8 5.146 2.854a.5.5 0 1 1 .708-.708L11.707 8l-5.853 5.854a.5.5 0 0 1-.708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronLargeRightIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronLargeUpIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.854 10.854a.5.5 0 0 1-.708 0L8 5.707l-5.146 5.147a.5.5 0 0 1-.708-.707L8 4.292l5.854 5.853a.5.5 0 0 1 0 .708",
        clipRule: "evenodd",
        opacity: ".89",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronLargeUpIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronLastIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708l3.5 3.5.353.354-.353.354-3.5 3.5a.5.5 0 0 1-.708-.708zM11 4.5a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronLastIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronSmallDownIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.146 6.146a.5.5 0 0 1 .708 0L8 9.293l3.146-3.147a.5.5 0 0 1 .708.708L8 10.707 4.146 6.854a.5.5 0 0 1 0-.708",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronSmallDownIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronSmallLeftIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.854 4.146a.5.5 0 0 1 0 .708L6.707 8l3.147 3.146a.5.5 0 0 1-.707.708L5.293 8l3.854-3.854a.5.5 0 0 1 .707 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronSmallLeftIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronSmallRightIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.146 11.854a.5.5 0 0 1 0-.708L9.293 8 6.146 4.854a.5.5 0 1 1 .708-.708L10.707 8l-3.853 3.854a.5.5 0 0 1-.708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronSmallRightIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ChevronSmallUpIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.854 9.854a.5.5 0 0 1-.708 0L8 6.707 4.854 9.854a.5.5 0 1 1-.708-.707L8 5.293l3.854 3.854a.5.5 0 0 1 0 .707",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ChevronSmallUpIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ClearCircleFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.657 2.343A8 8 0 1 1 2.343 13.657 8 8 0 0 1 13.657 2.343M6.055 4.995a.75.75 0 1 0-1.06 1.06L6.939 8 4.995 9.945a.75.75 0 0 0 1.06 1.06L8 9.061l1.945 1.944a.75.75 0 1 0 1.06-1.06L9.061 8l1.944-1.945a.75.75 0 1 0-1.06-1.06L8 6.939z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ClearCircleFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ClearCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M13.657 2.343A8 8 0 1 1 2.343 13.657 8 8 0 0 1 13.657 2.343m-.707.707a7 7 0 1 1-9.9 9.9 7 7 0 0 1 9.9-9.9",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M6.055 4.995a.75.75 0 1 0-1.06 1.06L6.939 8 4.995 9.945a.75.75 0 1 0 1.06 1.06L8 9.061l1.944 1.944a.75.75 0 1 0 1.061-1.06L9.061 8l1.944-1.945a.75.75 0 1 0-1.06-1.06L8 6.939z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ClearCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CloseExtraSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5.172 10.121a.5.5 0 1 0 .707.707L8 8.707l2.121 2.121a.5.5 0 1 0 .707-.707L8.709 8l2.12-2.121a.5.5 0 1 0-.707-.708L8 7.293 5.879 5.172a.5.5 0 0 0-.707.707l2.12 2.12z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CloseExtraSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CloseSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M4.853 4.146a.5.5 0 0 0-.707.707L7.293 8l-3.147 3.146a.5.5 0 1 0 .707.708L8 8.707l3.146 3.146a.5.5 0 1 0 .707-.707L8.707 8l3.146-3.146a.5.5 0 1 0-.707-.708L8 7.293z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CloseSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CloseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2.854 2.146a.5.5 0 1 0-.708.708L7.293 8l-5.147 5.147a.5.5 0 1 0 .708.707L8 8.707l5.146 5.147a.5.5 0 0 0 .708-.708L8.707 8l5.147-5.146a.5.5 0 0 0-.708-.708L8 7.293z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CloseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CloudIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 8V7a4 4 0 0 0-7.936-.716l-.117.645-.638.15A3.002 3.002 0 0 0 4 13h8a3 3 0 0 0 3-3 2 2 0 0 0-2-2zm1-1a3 3 0 0 1 3 3 4 4 0 0 1-4 4H4a4 4 0 0 1-.92-7.894A5.002 5.002 0 0 1 13 7",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CloudIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CodeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5.52 14.358a.5.5 0 0 0 .96.284l4-13.5a.5.5 0 1 0-.96-.284zM4.854 4.146a.5.5 0 0 1 0 .708L1.707 8l3.147 3.146a.5.5 0 1 1-.707.708L.293 8l3.854-3.854a.5.5 0 0 1 .707 0M11.147 4.146a.5.5 0 0 0 0 .708L14.293 8l-3.146 3.146a.5.5 0 1 0 .707.708L15.707 8l-3.853-3.854a.5.5 0 0 0-.707 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CodeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CollectionDeleteIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M1 4v2H.5a.5.5 0 0 0 0 1H1v2H.5a.5.5 0 0 0 0 1H1v2H.5a.5.5 0 0 0 0 1H1v1.39C1 15.496 1.505 16 2.61 16H8v-1H2.785C2.233 15 2 14.771 2 14.219V13h.5a.5.5 0 0 0 0-1H2v-2h.5a.5.5 0 0 0 0-1H2V7h.5a.5.5 0 0 0 0-1H2V4h.5a.5.5 0 0 0 0-1H2V1.824c0-.55.285-.824.785-.824H12a1 1 0 0 1 1 1v7.625h1V9h.25a.75.75 0 0 0 .75-.75v-1.5a.75.75 0 0 0-.75-.75H14V5h.25a.75.75 0 0 0 .75-.75v-1.5a.75.75 0 0 0-.75-.75H14a2 2 0 0 0-2-2H2.61C1.61 0 1 .617 1 1.617V3H.5a.5.5 0 0 0 0 1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M14.854 11.854a.5.5 0 0 0-.708-.708L12.5 12.793l-1.646-1.647a.5.5 0 0 0-.708.708l1.647 1.646-1.647 1.646a.5.5 0 0 0 .708.708l1.646-1.647 1.646 1.647a.5.5 0 0 0 .708-.708L13.207 13.5zM5.5 4a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CollectionDeleteIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CollectionRecentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8 4a.5.5 0 0 0-1 0v4.5l2.646 2.354a.5.5 0 0 0 .708-.707L8 8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 6V4H.5a.5.5 0 0 1 0-1H1V1.617C1 .617 1.61 0 2.61 0H12a2 2 0 0 1 2 2h.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-.75.75H14v1h.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-.75.75H14v1h.25a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75H14v2a2 2 0 0 1-2 2H2.61C1.504 16 1 15.495 1 14.39V13H.5a.5.5 0 0 1 0-1H1v-2H.5a.5.5 0 0 1 0-1H1V7H.5a.5.5 0 0 1 0-1zm1.785-5H12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2.785C2.233 15 2 14.771 2 14.219V13h.5a.5.5 0 0 0 0-1H2v-2h.5a.5.5 0 0 0 0-1H2V7h.5a.5.5 0 0 0 0-1H2V4h.5a.5.5 0 0 0 0-1H2V1.824c0-.55.285-.824.785-.824",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CollectionRecentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CollectionIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.084 1.223A.5.5 0 0 1 3.5 1h9a.5.5 0 0 1 .416.223l2 3A.5.5 0 0 1 15 4.5v8.667A1.833 1.833 0 0 1 13.166 15H2.833A1.833 1.833 0 0 1 1 13.167V4.5a.5.5 0 0 1 .084-.277zM3.767 2 2 4.651v8.516a.833.833 0 0 0 .833.833h10.333a.833.833 0 0 0 .834-.833V4.65L12.232 2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.5 4.5A.5.5 0 0 1 2 4h12a.5.5 0 0 1 0 1H2a.5.5 0 0 1-.5-.5M5.334 6.5a.5.5 0 0 1 .5.5 2.167 2.167 0 1 0 4.333 0 .5.5 0 0 1 1 0 3.167 3.167 0 1 1-6.333 0 .5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CollectionIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CommentFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 12v3l2.5-3H14a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1zm3 1h6a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2v2c0 .945 1.19 1.363 1.78.625z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M15 11a1 1 0 0 1-1 1H7.5L5 15v-3H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
CommentFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CommentNewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M3.5 6a.5.5 0 0 1-.5-.5V4H1.5a.5.5 0 0 1 0-1H3V1.5a.5.5 0 0 1 1 0V3h1.5a.5.5 0 0 1 0 1H4v1.5a.5.5 0 0 1-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 6v5a2 2 0 0 0 2 2h2v2c0 .93 1.157 1.356 1.76.65L8 13h6a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H7v1h7a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H7.5L5 15v-3H2a1 1 0 0 1-1-1V6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
CommentNewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CommentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 12v3l2.5-3H14a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1zm3 1h6a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2v2c0 .945 1.19 1.363 1.78.625z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
CommentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CommunityIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8 1a3 3 0 0 1 3 3c0 .957-.45 1.806-1.147 2.355A5 5 0 0 1 13 11v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2a5 5 0 0 1 3.146-4.645A3 3 0 0 1 5 4a3 3 0 0 1 3-3m0 6a4 4 0 0 0-4 4v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2a4 4 0 0 0-4-4M2.5 3a1.833 1.833 0 0 1 0 3.667l-.153.007A1.5 1.5 0 0 0 1 8.167V10h.5a.5.5 0 0 1 0 1H1a1 1 0 0 1-1-1V8.167c0-.881.457-1.655 1.146-2.1A1.833 1.833 0 0 1 2.5 3m11 0c1.012 0 1.834.82 1.834 1.833 0 .476-.184.908-.48 1.233A2.5 2.5 0 0 1 16 8.167V10a1 1 0 0 1-1 1h-.484a.5.5 0 0 1 0-1H15V8.167c0-.777-.59-1.416-1.347-1.493l-.153-.007-.187-.01A1.834 1.834 0 0 1 13.5 3M8 2a2 2 0 1 0 0 4 2 2 0 0 0 0-4M2.5 4a.833.833 0 1 0 0 1.666A.833.833 0 0 0 2.5 4m11 0a.833.833 0 1 0 0 1.667.833.833 0 0 0 0-1.667",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CommunityIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ComplianceIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 2H3a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4.03v-1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3a1 1 0 0 1 1 1v1.942h1V4a2 2 0 0 0-2-2H9a2 2 0 1 0-4 0m1 0a1 1 0 0 1 2 0zm4 3H4V3h6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m10.964 11.803 1.838-1.87a.573.573 0 0 1 .818.803L10.905 13.5l-1.49-1.517a.603.603 0 0 1 .848-.856z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 7a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9m0 .844a3.66 3.66 0 0 1 3.656 3.656 3.66 3.66 0 0 1-3.656 3.656A3.66 3.66 0 0 1 7.844 11.5 3.66 3.66 0 0 1 11.5 7.844",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ComplianceIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ConnectIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.7 1.862a.52.52 0 0 0 0-.719.48.48 0 0 0-.695 0L8.64 3.585 7 1.944a1 1 0 0 0-1.414 0L2.757 4.772a6 6 0 0 0 8.486 8.485l2.828-2.828a1 1 0 0 0 0-1.414L12.377 7.32l2.485-2.566a.52.52 0 0 0 0-.719.48.48 0 0 0-.696 0l-2.495 2.578-2.323-2.322zm-5.407.789L3.464 5.479a5 5 0 1 0 7.072 7.071l2.828-2.828z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ConnectIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ContainerIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.133.933H1.867a.933.933 0 0 0-.934.934v12.266c0 .516.418.934.934.934h12.266a.933.933 0 0 0 .934-.934V1.867a.933.933 0 0 0-.934-.934M1.867 0C.836 0 0 .836 0 1.867v12.266C0 15.164.836 16 1.867 16h12.266A1.867 1.867 0 0 0 16 14.133V1.867C16 .836 15.164 0 14.133 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M14 6.996v2h-1v-2zM3 8.996v-2H2v2zM7 1.996h2v1H7zM7 12.996h2v1H7zM2 10.496v2.5a1 1 0 0 0 1 1h2.5v-1H3v-2.5zM3 5.496H2v-2.5a1 1 0 0 1 1-1h2.5v1H3zM10.5 1.996v1H13v2.5h1v-2.5a1 1 0 0 0-1-1zM13 10.496h1v2.5a1 1 0 0 1-1 1h-2.5v-1H13z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ContainerIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ContentServerIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "m9.178 8.519-.592-.593a2.27 2.27 0 0 0 0-2.502l1.569-1.57a2.087 2.087 0 1 0-.66-.66l-1.568 1.57a2.27 2.27 0 0 0-1.252-.378c-.33 0-.637.075-.918.2L3.775 1.813a1.197 1.197 0 1 0-1.026.582q.143-.001.27-.036l1.975 2.765q-.19.212-.322.461l-1.427-.367V5.2a1.623 1.623 0 1 0-1.622 1.622c.56 0 1.048-.285 1.339-.715l1.44.372q-.014.091-.016.196c0 .463.14.892.377 1.252L2.918 9.772a1.927 1.927 0 1 0 .66.66l1.846-1.846a2.27 2.27 0 0 0 2.502 0l.593.592zM6.675 8.03a1.36 1.36 0 0 1-1.356-1.356c0-.748.608-1.356 1.356-1.356s1.356.608 1.356 1.356-.608 1.356-1.356 1.356M11.263.933c.636 0 1.154.518 1.154 1.154 0 .637-.518 1.155-1.154 1.155a1.156 1.156 0 0 1-1.155-1.155c0-.636.519-1.154 1.155-1.154M1.043 5.736a.79.79 0 0 0 1.37-.536.792.792 0 0 0-1.581 0c0 .207.08.395.21.536m1.945 5.69a1.05 1.05 0 1 1-2.101 0 1.05 1.05 0 0 1 2.101 0m-.24-9.781a.455.455 0 1 0 0-.91.455.455 0 0 0 0 .91M15.311 7.689a2.35 2.35 0 0 0-3.325 0l-.775.774a.525.525 0 1 0 .742.742l.775-.775a1.302 1.302 0 0 1 1.841 1.842l-1.55 1.55a1.3 1.3 0 0 1-1.836.004.524.524 0 1 0-.745.739 2.35 2.35 0 0 0 3.323-.002l1.55-1.55a2.35 2.35 0 0 0 0-3.324",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.25 10.797a.5.5 0 0 0-.07-.263l-.065-.092-.005-.005a2.35 2.35 0 0 0-3.325 0l-1.55 1.55a2.35 2.35 0 1 0 3.325 3.324l.775-.774a.525.525 0 1 0-.742-.742l-.775.774a1.302 1.302 0 0 1-1.841-1.84l1.55-1.55a1.3 1.3 0 0 1 1.813-.028.524.524 0 0 0 .91-.354",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ContentServerIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CopyIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 0H6v1h1zM1.004.248l-.75.75.996.352.102-.102zM10 .25l.75.75-1 .348-.102-.102zM5 6.2A1.2 1.2 0 0 1 6.2 5h6.6A1.2 1.2 0 0 1 14 6.2v6.6a1.2 1.2 0 0 1-1.2 1.2H6.2A1.2 1.2 0 0 1 5 12.8zm-1 0A2.2 2.2 0 0 1 6.2 4h6.6A2.2 2.2 0 0 1 15 6.2v6.6a2.2 2.2 0 0 1-2.2 2.2H6.2A2.2 2.2 0 0 1 4 12.8zm-2.996 4.57-.75-.75 1-.348.102.101zM10 2h1v1h-1zM8 0h1v1H8zM5 0H4v1h1zM2 0h1v1H2zM1 2H0v1h1zM0 4h1v1H0zm1 2H0v1h1zM0 8h1v1H0zm3 2H2v1h1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CopyIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CreateShortcutIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2h-1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h6a1 1 0 0 1 .8.4l2 2.667a1 1 0 0 1 .2.6V5h1v-.333a2 2 0 0 0-.4-1.2L11.6.8A2 2 0 0 0 10 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.599 7.15a.5.5 0 0 1 .707-.007L15.715 9.5l-2.41 2.357a.5.5 0 1 1-.699-.714L13.774 10H10.5A1.5 1.5 0 0 0 9 11.5v1a.5.5 0 0 1-1 0v-1A2.5 2.5 0 0 1 10.5 9h3.274l-1.168-1.143a.5.5 0 0 1-.007-.707",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CreateShortcutIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CreateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M12 .5a.5.5 0 0 0-1 0v1.548a.5.5 0 0 0 1 0zM14.863 1.83a.5.5 0 1 0-.702-.712l-1.11 1.095a.5.5 0 1 0 .702.712zM13.93 4a.5.5 0 1 0 0 1h1.57a.5.5 0 0 0 0-1zM2 2h5.301a1 1 0 0 1 .815.42l1.699 2.39a1 1 0 0 1 .185.579V6h1v-.611a2 2 0 0 0-.37-1.16L8.93 1.842A2 2 0 0 0 7.301 1H2a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h3v-1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.044 8.385q.128.118.223.268a1.5 1.5 0 0 1 .31-.038c.282-.005.697.069 1.026.391.245.24.4.577.4.947v2.956c0 .643-.333 1.22-.634 1.611a4.3 4.3 0 0 1-1.172 1.053c-.49.288-.98.383-1.431.413-.284.02-.614.015-.913.01l-.351-.004c-.408 0-.848-.004-1.25-.048-.392-.043-.854-.134-1.258-.372a5 5 0 0 1-.921-.725c-.256-.254-.566-.617-.731-1.028l-.894-1.676-.486-.841c-.537-.929.111-1.902.954-2.092a1.53 1.53 0 0 1 1.086.16V6.426l.001-.022a2 2 0 0 1 .031-.249 1.37 1.37 0 0 1 .334-.673c.65-.689 1.7-.595 2.26 0 .148.157.218.326.245.396a1.93 1.93 0 0 1 .118.638v.83c.158-.039.308-.048.429-.044.315.01.732.12 1.039.426q.141.142.238.32a1.5 1.5 0 0 1 1.347.336m.959 4.524c0 .628-.7 1.44-1.314 1.802-.52.306-1.075.297-1.764.286q-.204-.005-.423-.005c-.821 0-1.555-.02-2-.281-.442-.26-1.074-.838-1.24-1.287l-.019-.04-.92-1.727-.495-.855c-.143-.247.008-.549.308-.616a.52.52 0 0 1 .454.113l.803.723c.15.134.359.134.508 0l.072-.09.029-.95V6.462s.003-.197.094-.293a.566.566 0 0 1 .804 0c.048.05.078.197.088.293l.001.017.002.038v3.298q0 .036.01.07c.053.162.277.302.462.302a.58.58 0 0 0 .405-.193.28.28 0 0 0 .076-.179V8.742c0-.014.001-.042.004-.075A.6.6 0 0 1 9 8.462c.174-.243.601-.177.753-.026a.33.33 0 0 1 .099.231v1.147a.4.4 0 0 0 .077.19c.077.104.201.182.33.182a.4.4 0 0 0 .213-.062.39.39 0 0 0 .194-.31v-.479c.004-.103.037-.146.102-.217a.3.3 0 0 1 .084-.068.49.49 0 0 1 .512.068q.051.046.078.105.03.064.03.135v1.139c.012.181.179.325.383.325q.079-.001.148-.026a.35.35 0 0 0 .235-.318v-.525c0-.115.01-.148.08-.233a.3.3 0 0 1 .154-.089c.142-.038.326-.013.43.089.065.063.1.146.1.233z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
CreateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CriteriaPlayIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M10 9.479c0-.372.375-.601.669-.41l3.116 2.022a.498.498 0 0 1 0 .818l-3.116 2.023c-.294.19-.669-.04-.669-.41z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 7a4.5 4.5 0 1 1 0 9 4.5 4.5 0 0 1 0-9m0 .844A3.66 3.66 0 0 0 7.844 11.5a3.66 3.66 0 0 0 3.656 3.656 3.66 3.66 0 0 0 3.656-3.656A3.66 3.66 0 0 0 11.5 7.844",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.052 0a2 2 0 0 1 1.552.74l2.949 2.632A2 2 0 0 1 11 4.632V6h-1V5H5.5a.5.5 0 0 1-.5-.5V1H1.5a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5H6v1H1.5A1.5 1.5 0 0 1 0 12.5v-11A1.5 1.5 0 0 1 1.5 0zM6 4h3.774L6.828 1.37A1 1 0 0 0 6.052 1H6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3 9.996a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zM6.216 9.968a5.5 5.5 0 0 0-.19 1H5a.5.5 0 0 1 0-1zM3 7.996a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zM7.284 7.968a5.5 5.5 0 0 0-.668 1H5a.5.5 0 1 1 0-1zM3 5.996a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zM7.031 5.968a.5.5 0 0 1 0 1H5a.5.5 0 1 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
CriteriaPlayIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CriteriaSearchStopIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11.625 9c.207 0 .375.168.375.375v2.25a.375.375 0 0 1-.375.375h-2.25A.375.375 0 0 1 9 11.625v-2.25C9 9.168 9.168 9 9.375 9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.5 7a3.5 3.5 0 0 1 2.804 5.596l1.55 1.55a.5.5 0 0 1-.707.707l-1.55-1.55A3.5 3.5 0 1 1 10.5 7m0 1a2.5 2.5 0 1 0 1.497 4.503l.29-.217.216-.289A2.5 2.5 0 0 0 10.5 8",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.052 0a2 2 0 0 1 1.552.74l2.949 2.632A2 2 0 0 1 11 4.632V6h-1V5H5.5a.5.5 0 0 1-.5-.5V1H1.5a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5H6v1H1.5A1.5 1.5 0 0 1 0 12.5v-11A1.5 1.5 0 0 1 1.5 0zM6 4h3.774L6.828 1.37A1 1 0 0 0 6.052 1H6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.25 10.996H2v-1h1.25zM6.031 9.968a4.6 4.6 0 0 0-.007 1H5a.5.5 0 0 1 0-1zM3.25 8.996H2v-1h1.25zM6.78 7.968q-.317.463-.512 1H5a.5.5 0 1 1 0-1zM3.25 6.996H2v-1h1.25zM7.031 5.968a.5.5 0 0 1 0 1H5a.5.5 0 1 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CriteriaSearchStopIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CriteriaSearchIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.5 7a3.5 3.5 0 0 1 2.804 5.596l1.55 1.55a.5.5 0 0 1-.707.707l-1.55-1.55A3.5 3.5 0 1 1 10.5 7m0 1a2.5 2.5 0 1 0 1.497 4.503l.29-.217.216-.289A2.5 2.5 0 0 0 10.5 8",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.052 0a2 2 0 0 1 1.552.74l2.949 2.632A2 2 0 0 1 11 4.632V6h-1V5H5.5a.5.5 0 0 1-.5-.5V1H1.5a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5H6v1H1.5A1.5 1.5 0 0 1 0 12.5v-11A1.5 1.5 0 0 1 1.5 0zM6 4h3.774L6.828 1.37A1 1 0 0 0 6.052 1H6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.25 10.996H2v-1h1.25zM6.031 9.968a4.6 4.6 0 0 0-.007 1H5a.5.5 0 0 1 0-1zM3.25 8.996H2v-1h1.25zM6.78 7.968q-.317.463-.512 1H5a.5.5 0 1 1 0-1zM3.25 6.996H2v-1h1.25zM7.031 5.968a.5.5 0 0 1 0 1H5a.5.5 0 1 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CriteriaSearchIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CriteriaStopIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M13 9.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-3a.5.5 0 0 1 .5-.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 7a4.5 4.5 0 1 1 0 9 4.5 4.5 0 0 1 0-9m0 .844A3.66 3.66 0 0 0 7.844 11.5a3.66 3.66 0 0 0 3.656 3.656 3.66 3.66 0 0 0 3.656-3.656A3.66 3.66 0 0 0 11.5 7.844",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.052 0a2 2 0 0 1 1.552.74l2.949 2.632A2 2 0 0 1 11 4.632V6h-1V5H5.5a.5.5 0 0 1-.5-.5V1H1.5a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5H6v1H1.5A1.5 1.5 0 0 1 0 12.5v-11A1.5 1.5 0 0 1 1.5 0zM6 4h3.774L6.828 1.37A1 1 0 0 0 6.052 1H6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.25 10.996H2v-1h1.25zM6.216 9.968a5.5 5.5 0 0 0-.19 1H5a.5.5 0 0 1 0-1zM3.25 8.996H2v-1h1.25zM7.284 7.968a5.5 5.5 0 0 0-.668 1H5a.5.5 0 1 1 0-1zM3.25 6.996H2v-1h1.25zM7.031 5.968a.5.5 0 0 1 0 1H5a.5.5 0 1 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
CriteriaStopIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CriteriaIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9.05 0a2 2 0 0 1 1.552.74l2.95 3.632A2 2 0 0 1 14 5.632V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zM4 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V6H8.5a.5.5 0 0 1-.5-.5V1zm1 10.996a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zm5.031-.028a.5.5 0 0 1 0 1H7a.5.5 0 0 1 0-1zM5 9.996a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zm6.031-.028a.5.5 0 0 1 0 1H7a.5.5 0 0 1 0-1zM5 7.996a.25.25 0 0 1 .25.25v.5a.25.25 0 0 1-.25.25h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zm4.031-.028a.5.5 0 0 1 0 1H7a.5.5 0 1 1 0-1zM9 5h3.774L9.826 1.37A1 1 0 0 0 9.05 1H9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CriteriaIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CrownIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.5 2.5c0 .497-.242.938-.614 1.21l1.694 3.602 2.5-1.328A1.5 1.5 0 0 1 13 5.5 1.5 1.5 0 1 1 14.5 7l-.104-.004-1.126 5.215a1 1 0 0 1-.977.789H3.704a1 1 0 0 1-.977-.789L1.6 6.997 1.5 7a1.5 1.5 0 1 1 1.42-1.015l2.497 1.327L7.112 3.71A1.499 1.499 0 0 1 8 1a1.5 1.5 0 0 1 1.5 1.5M8 3a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1m6.5 3a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1M2 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0m5.999-1.326 1.677 3.564a1 1 0 0 0 1.374.457l2.327-1.236L12.309 12h-8.62L2.62 6.959l2.327 1.236a1 1 0 0 0 1.374-.457z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.5 14a.5.5 0 1 0 0 1h9a.5.5 0 1 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CrownIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const CutIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.724 5.034c.77.77 1.945.885 2.836.346l2.49 2.49-2.774 2.623a2.318 2.318 0 1 0 .936.71L7.87 8.688l5.47 5.47a.67.67 0 0 0 .39.166c.52.072 1.243-.171 1.243-.171L5.371 4.552a2.318 2.318 0 1 0-3.647.482m.707-.707a1.317 1.317 0 1 0 1.863-1.862A1.317 1.317 0 0 0 2.43 4.327m1.926 7.413a1.317 1.317 0 1 1-1.93 1.792 1.317 1.317 0 0 1 1.93-1.792",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m9.549 7.1-.82-.82 4.631-4.382a.68.68 0 0 1 .398-.158C14.282 1.68 15 1.94 15 1.94z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
CutIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DashboardIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9.5 11a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1a.5.5 0 0 1 .5-.5M12 9.5a.5.5 0 0 0-1 0v3a.5.5 0 0 0 1 0zM13.5 11a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1a.5.5 0 0 1 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm13 5H1v7a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1zm-1-4a1 1 0 0 1 1 1v2H1V3a1 1 0 0 1 1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.757 7.462a.5.5 0 0 1 .548-.446 3 3 0 1 1-3.29 2.68.5.5 0 0 1 .995.1A2 2 0 1 0 5.203 8.01a.5.5 0 0 1-.446-.548",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DashboardIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DataAddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 0c3.313 0 6 1.514 6 3.382V8h-1.062Q13 7.802 13 7.608V5.252c-1.075.91-2.913 1.511-5 1.511s-3.925-.6-5-1.511v2.356c0 .596.434 1.237 1.356 1.757.908.511 2.195.843 3.644.843q.516 0 1-.054v1.006q-.49.048-1 .048c-1.589 0-3.051-.362-4.135-.972A5 5 0 0 1 3 9.622v2.777c0 .596.434 1.237 1.356 1.757.908.511 2.195.843 3.644.843q.516 0 1-.054v1.006q-.49.048-1 .048c-1.589 0-3.051-.362-4.135-.972C2.798 14.425 2 13.515 2 12.399V3.381C2 1.514 4.686 0 8 0m5 3.382c0 .413-.307.99-1.248 1.52-.91.513-2.235.861-3.752.861s-2.842-.348-3.752-.861C3.308 4.372 3 3.794 3 3.382c0-.414.308-.99 1.248-1.52C5.158 1.349 6.483 1 8 1s2.842.349 3.752.862c.94.53 1.248 1.107 1.248 1.52",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.5 15a.5.5 0 0 1-.5-.5V13h-1.5a.5.5 0 0 1 0-1H12v-1.5a.5.5 0 0 1 1 0V12h1.5a.5.5 0 0 1 0 1H13v1.5a.5.5 0 0 1-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DataAddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DataBaseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 3.382C14 1.514 11.313 0 8 0S2 1.514 2 3.381V12.4c0 1.116.798 2.026 1.865 2.628 1.084.61 2.546.972 4.135.972s3.051-.362 4.135-.972C13.202 14.425 14 13.516 14 12.399zm-2.248 1.52c.94-.53 1.248-1.107 1.248-1.52s-.308-.99-1.248-1.52C10.842 1.349 9.517 1 8 1s-2.842.349-3.752.862C3.308 2.392 3 2.968 3 3.382c0 .412.307.99 1.248 1.52.91.513 2.235.861 3.752.861s2.842-.348 3.752-.861M8 6.763c2.087 0 3.925-.6 5-1.511v2.356c0 .596-.434 1.237-1.356 1.757-.908.511-2.195.843-3.644.843s-2.736-.332-3.644-.843C3.434 8.845 3 8.204 3 7.608V5.252c1.075.91 2.913 1.511 5 1.511M3 9.622c.256.23.549.435.865.614 1.084.61 2.546.972 4.135.972s3.051-.362 4.135-.972c.316-.179.61-.384.865-.614v2.777c0 .596-.434 1.237-1.356 1.757-.908.511-2.195.843-3.644.843s-2.736-.332-3.644-.843C3.434 13.636 3 12.995 3 12.399z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DataBaseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DataGridIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 2H3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1M3 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 2h1v12H5zM10 2h1v12h-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M14 5h1v12h-1z",
        transform: "rotate(90 14 5)",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M14 10h1v12h-1z",
        transform: "rotate(90 14 10)",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 2h3v3H2zM11 11h3v3h-3z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DataGridIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DateTimeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 3.498a2.5 2.5 0 0 1 2.5-2.5h8a2.5 2.5 0 0 1 2.5 2.5V7h-1V3.498a1.5 1.5 0 0 0-1.5-1.5h-8a1.5 1.5 0 0 0-1.5 1.5V11.5A1.5 1.5 0 0 0 2.5 13H7v1H2.5A2.5 2.5 0 0 1 0 11.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M1 4h11v1H1zM3 0h1v3H3zM9 0h1v3H9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.5 9.59a.5.5 0 0 1 .5.5v1.72l1.155 1.169a.5.5 0 0 1-.712.703L11 12.222V10.09a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DateTimeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DelegatesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.549 3.884c.356-.366.576-.926.576-1.478C10.125 1.282 9.124.313 8 .313s-2.125.97-2.125 2.093c0 .552.22 1.112.576 1.478A2.91 2.91 0 0 0 5 6.403v.437C5 7.48 5.52 8 6.16 8h3.68C10.48 8 11 7.48 11 6.84v-.437a2.91 2.91 0 0 0-1.451-2.519M8 1.32c-.567 0-1.117.519-1.117 1.086S7.433 3.493 8 3.493s1.117-.52 1.117-1.087S8.567 1.32 8 1.32M8 4.5c-1.05 0-1.992.852-1.992 1.902v.438c0 .084.068.152.152.152h3.68a.153.153 0 0 0 .152-.152v-.437C9.993 5.352 9.051 4.5 8 4.5M5.125 10.406c0 .552-.22 1.112-.576 1.478A2.91 2.91 0 0 1 6 14.402v.438C6 15.48 5.48 16 4.84 16H1.16C.52 16 0 15.48 0 14.84v-.437c0-1.077.584-2.016 1.451-2.519-.356-.366-.576-.926-.576-1.478C.875 9.282 1.876 8.312 3 8.312s2.125.97 2.125 2.094m-3.242 0c0-.567.55-1.086 1.117-1.086s1.117.519 1.117 1.086-.55 1.086-1.117 1.086-1.117-.518-1.117-1.086m-.875 3.996c0-1.05.941-1.902 1.992-1.902 1.05 0 1.992.852 1.992 1.902v.438a.153.153 0 0 1-.152.152H1.16a.153.153 0 0 1-.152-.152zM15.125 10.406c0 .552-.22 1.112-.576 1.478A2.91 2.91 0 0 1 16 14.402v.438c0 .64-.52 1.16-1.16 1.16h-3.68c-.64 0-1.16-.52-1.16-1.16v-.437c0-1.077.584-2.016 1.451-2.519-.356-.366-.576-.926-.576-1.478 0-1.124 1.001-2.094 2.125-2.094s2.125.97 2.125 2.094m-3.242 0c0-.567.55-1.086 1.117-1.086.568 0 1.117.519 1.117 1.086s-.55 1.086-1.117 1.086c-.568 0-1.117-.518-1.117-1.086m-.875 3.996c0-1.05.941-1.902 1.992-1.902 1.05 0 1.992.852 1.992 1.902v.438a.153.153 0 0 1-.152.152h-3.68a.153.153 0 0 1-.152-.152z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M11.484 4.5a.5.5 0 0 1 .5-.5H15v3a.5.5 0 0 1-1 0V5h-2.016a.5.5 0 0 1-.5-.5M4.008 4a.5.5 0 1 1 0 1H2v2a.5.5 0 0 1-1 0V4z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DelegatesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TrashIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 3V1.5a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1V3H1.5a.5.5 0 0 0 0 1H3v10a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h1.5a.5.5 0 0 0 0-1zm-1-1.5H6V3h4zM12 4H4v10a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TrashIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DesktopIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H8.5v3H11a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1h2.5v-3H2a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DesktopIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DestroyIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v7h1V2a1 1 0 0 1 1-1h4v4.5a.5.5 0 0 0 .5.5H13v3h1V5.633a2 2 0 0 0-.447-1.26L10.603.738A2 2 0 0 0 9.05 0zm5.826 1.37L12.774 5H9V1h.05a1 1 0 0 1 .776.37",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("rect", {
        width: "16",
        height: "1",
        y: "9",
        rx: ".5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13 10v5.5a.5.5 0 0 1-1 0V10zM4 10v5.5a.5.5 0 0 1-1 0V10zM7 10v5.5a.5.5 0 0 1-1 0V10zM10 10v5.5a.5.5 0 0 1-1 0V10z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
DestroyIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DetatchIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        d: "m6.73 7.85-3.35 3.39a3 3 0 0 0-.58 1.61c-.07 1.15.72 1.99 1.77 2.06h.04c.38.06.82-.02 1.25-.2.42-.17.8-.43 1.03-.66h.02l3.02-3.02.71.71-3.02 3.02c-.01 0-.03.02-.03.02-.34.33-.82.65-1.34.86-.53.22-1.15.35-1.76.27-1.59-.12-2.79-1.43-2.68-3.13.07-1.05.5-1.78.8-2.18l.02-.02c.01-.02.03-.04.03-.04l3.36-3.4zm-3.59-5.7c.2-.2.51-.2.71 0l10 10c.2.2.2.51 0 .71s-.51.2-.71 0l-10-10c-.2-.2-.2-.51 0-.71m5.77 7.89-2.73 2.77c-.2.19-.51.19-.71 0a.514.514 0 0 1 0-.71L8.2 9.33zM4.86 5.97 1.3 9.48c-.2.2-.52.2-.71 0-.2-.2-.2-.52 0-.71l3.56-3.5v-.01zM10.58.2a4.7 4.7 0 0 1 3.65 1.08c.99.83 1.53 1.99 1.66 3.09l.01.01c.13 1.09-.12 2.21-.84 2.93l-.001-.002-2.316 2.316-.707-.708 2.316-2.315-.001-.001c.43-.43.66-1.21.55-2.1-.11-.88-.541-1.79-1.311-2.44a3.72 3.72 0 0 0-2.88-.86c-.72.09-1.39.4-1.93.91l-.04.04-.12.11-.11.11-1.52 1.5-.71-.71 1.63-1.6C8.63.79 9.58.33 10.58.2m.68 2.49c.54 0 1.06.22 1.44.61.38.38.59.91.59 1.45s-.21 1.06-.59 1.45l-1.68 1.7-.71-.71h.01l1.67-1.69a1.06 1.06 0 0 0 0-1.5 1.014 1.014 0 0 0-1.46 0L8.84 5.72l-.71-.71L9.82 3.3c.38-.39.9-.61 1.44-.61",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
DetatchIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DeviceMobileIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm2-1h6a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 13.5A.75.75 0 1 0 8 12a.75.75 0 0 0 0 1.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DeviceMobileIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DeviceMonitorIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h5.5v2H5a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H8.5v-2H14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm12 1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DeviceMonitorIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DevicesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M13 2H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h8v1H8.5v2H10v1H5a.5.5 0 0 1 0-1h2.5v-2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v3h-1V3a1 1 0 0 0-1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 7a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1zm3 1h-3v6h3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DevicesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DislikeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.098 14.613a.5.5 0 0 1-.487.387c-1.107 0-1.94-.807-2.318-1.907a1.4 1.4 0 0 1-.065-.578l.205-2.181H3.014a1.666 1.666 0 0 1-1.377-2.608 1.506 1.506 0 0 1 .062-2.5 1.5 1.5 0 0 1 .713-2.107A1.498 1.498 0 0 1 3.776 1h4.722a3.5 3.5 0 0 1 1.461.32l1.083.497A1 1 0 0 1 12.025 1h2a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2a1 1 0 0 1-.995-.908l-1.364 2.199a.5.5 0 0 0-.062.15zm1.927-6.346V2.91l-1.484-.682A2.5 2.5 0 0 0 8.498 2H3.776a.498.498 0 0 0-.438.736l.024.044c.07.13.205.211.352.216h.511v1H3.007a.498.498 0 0 0-.011.996H4.24v1H2.504a.504.504 0 0 0 0 1.009H4.24v1H3.014a.667.667 0 0 0 0 1.333h3.968a.5.5 0 0 1 .498.547l-.256 2.728a.4.4 0 0 0 .014.159c.222.642.588 1.022.991 1.166l.4-1.72a1.5 1.5 0 0 1 .187-.45l2.084-3.36a.5.5 0 0 1 .125-.137m3 1.733h-2V2h2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DislikeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DmsMetadataOffIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M15 4a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1zm1 8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.575 5.547a.52.52 0 1 1 .735.735L3.471 8.12l1.84 1.839a.52.52 0 0 1-.736.735L2.368 8.489a.52.52 0 0 1-.066-.654l.066-.082zm6.115 0a.52.52 0 0 1 .736 0l2.207 2.206a.521.521 0 0 1 0 .736l-2.207 2.206a.52.52 0 1 1-.736-.735l1.838-1.84-1.838-1.838a.52.52 0 0 1 0-.735M9.021 5.45a.52.52 0 0 1 .902.52l-2.601 4.504a.52.52 0 0 1-.901-.52z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DmsMetadataOffIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DmsMetadataOnIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14 2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zM5.31 5.547a.52.52 0 0 0-.735 0L2.368 7.753l-.066.082a.52.52 0 0 0 .066.654l2.207 2.206a.52.52 0 0 0 .736-.735L3.47 8.121l1.84-1.839a.52.52 0 0 0 0-.735m6.116 0a.52.52 0 0 0-.736.735l1.838 1.84L10.69 9.96a.52.52 0 0 0 .736.735l2.207-2.206a.52.52 0 0 0 0-.736zM9.732 5.26a.52.52 0 0 0-.71.19L6.42 9.955a.52.52 0 0 0 .901.52l2.6-4.504a.52.52 0 0 0-.19-.71",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DmsMetadataOnIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentCompressedIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h5.55a2 2 0 0 1 1.552.74l2.95 3.632A2 2 0 0 1 14 5.632V14.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5V14h1v.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2zM12.774 5 9.826 1.37A1 1 0 0 0 9.05 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.691 9H1V8h3v.618L2.309 12H4v1H1v-.618zM5 13V8h1v5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 13V8h1.84a1.5 1.5 0 1 1 0 3H8v2zm1-3h.84a.5.5 0 0 0 0-1H8z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentCompressedIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentCustomIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v4h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1H2a1 1 0 0 0 1 1h9a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m2.96 13.75.09-2.483L.953 12.6l-.542-.948L2.622 10.5.41 9.349l.542-.948L3.05 9.733 2.96 7.25h1.083l-.09 2.483L6.051 8.4l.542.948L4.382 10.5l2.212 1.151-.542.948-2.099-1.332.09 2.483z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentCustomIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentDeleteIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v2h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1h-2v1h2a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 8V7h3v1zM2 8V6.75A.75.75 0 0 1 2.75 6h3.5a.75.75 0 0 1 .75.75V8h1.5a.5.5 0 0 1 0 1H8v5.5A1.5 1.5 0 0 1 6.5 16h-4A1.5 1.5 0 0 1 1 14.5V9H.5a.5.5 0 0 1 0-1zm0 1h5v5.5a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentDeleteIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentDisabledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v4h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1H2a1 1 0 0 0 1 1h9a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.975 12.975a3.5 3.5 0 1 1-4.95-4.949 3.5 3.5 0 0 1 4.95 4.95m-4.22-.685-.045-.044zm.366.296a2.5 2.5 0 0 0 3.465-3.465zm-.707-.707 3.465-3.465a2.5 2.5 0 0 0-3.465 3.465",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentDisabledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentDownloadIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v3h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1h-1v1h1a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M6.857 11.302a.5.5 0 1 0-.714-.7L5 11.77V7.496a.5.5 0 0 0-1 0v4.274l-1.143-1.168a.5.5 0 1 0-.714.7L4.5 13.71z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M.5 12.25a.5.5 0 0 1 .5.5v1.75a.5.5 0 0 0 .5.5h6a.5.5 0 0 0 .5-.5v-1.75a.5.5 0 0 1 1 0v1.75A1.5 1.5 0 0 1 7.5 16h-6A1.5 1.5 0 0 1 0 14.5v-1.75a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentDownloadIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentEditIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v6l1-1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1H2a1 1 0 0 0 1 1h9a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "m2.152 12.747 4.273-4.272a.5.5 0 0 0-.707-.707L1.445 12.04l-.151.859zm.485.93 4.495-4.495A1.5 1.5 0 0 0 5.01 7.061L.515 11.556l-.33 1.872a.5.5 0 0 0 .58.58z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentEditIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentGenerateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 0a2.5 2.5 0 0 1 2 1l.896 1.193 1.556 1.947A2.5 2.5 0 0 1 14 5.7V14a2 2 0 0 1-2 2H4a2 2 0 0 1-1.99-1.796L2 14v-1h1v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V6H8.8a.8.8 0 0 1-.8-.8V1H4a1 1 0 0 0-1 1v1H2V2a2 2 0 0 1 2-2zm0 5h3.825a1.5 1.5 0 0 0-.154-.235l-1.566-1.958L10.2 1.6A1.5 1.5 0 0 0 9 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.981 11.094c0-1.256-.132-1.993-.457-2.428-.254-.341-.7-.583-1.606-.639L1.5 8.016l-.1-.01a.5.5 0 0 1 .1-.99l.419-.012c.909-.054 1.353-.291 1.606-.629.324-.43.456-1.165.456-2.437a.5.5 0 0 1 .99-.101l.01.1.007.454c.03.999.165 1.608.448 1.985.288.385.827.64 2.028.64a.5.5 0 0 1 0 1c-1.197 0-1.738.26-2.027.65-.284.38-.42.992-.449 1.98l-.007.448-.01.1a.5.5 0 0 1-.99-.1m.498-4.358a2.212 2.212 0 0 1-.745.782 2.23 2.23 0 0 1 .746.788 2.232 2.232 0 0 1 .744-.787 2.2 2.2 0 0 1-.745-.783M7.919 13.334c0-.581-.128-.88-.291-1.043-.143-.143-.39-.259-.838-.286L6.586 12l-.1-.01a.5.5 0 0 1 .1-.99l.205-.005c.45-.026.696-.14.838-.28.161-.16.29-.458.29-1.048a.5.5 0 0 1 .99-.101l.01.1.006.209c.026.455.142.7.283.84.161.16.46.285 1.045.285a.5.5 0 0 1 0 1c-.582 0-.881.127-1.044.29-.142.142-.258.39-.284.839l-.006.205-.01.1a.5.5 0 0 1-.99-.1m.499-2.001a2 2 0 0 1-.17.17 2 2 0 0 1 .17.17 2 2 0 0 1 .17-.17 2 2 0 0 1-.17-.17",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentGenerateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentLicenseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h5.548A2 2 0 0 1 10.6.739l2.952 3.633A2 2 0 0 1 14 5.633V14.5a1.5 1.5 0 0 1-1.5 1.5H7v-1h5.5a.5.5 0 0 0 .5-.5V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V5H2zM12.774 5l-2.95-3.63A1 1 0 0 0 9.048 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 8.73c0 .889-.386 1.687-1 2.237v4.698L4 14.33l-2 1.334v-4.698A3 3 0 1 1 7 8.73m-3 2a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0 1c.35 0 .687-.06 1-.17v2.236l-1-.666-1 .666V11.56c.313.11.65.17 1 .17",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentLicenseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentLockedIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h5.552a2 2 0 0 1 1.553.74l2.948 3.632A2 2 0 0 1 14 5.632V14.5a1.5 1.5 0 0 1-1.5 1.5h-9a1.5 1.5 0 0 1-1.415-1H12.5a.5.5 0 0 0 .5-.5V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V5H2zM12.775 5 9.828 1.37A1 1 0 0 0 9.052 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4 11.2a.5.5 0 0 1 .5.5v.3a.5.5 0 0 1-1 0v-.3a.5.5 0 0 1 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 9V8a2 2 0 1 1 4 0v1a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-2a1 1 0 0 1 1-1m3-1v1H3V8a1 1 0 0 1 2 0m1 4v-2H2v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentLockedIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentOpenExcelIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 14.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V13h1v1.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5V13h1zm11.929-3.1a.5.5 0 0 1-1-.011l.017-1.634-3.216 3.216a.5.5 0 0 1-.707-.707l3.216-3.216-1.634.017a.5.5 0 1 1-.01-1l3.37-.036zM3.5 8.75 4.75 7H6L4 9.5 6 12H4.75L3.5 10.25 2.25 12H1l2-2.5L1 7h1.25zM9.052 0c.602 0 1.174.271 1.553.74l2.948 3.632c.289.356.447.802.447 1.26V7h-1V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V6H2V1.5A1.5 1.5 0 0 1 3.5 0zM9 5h3.774L9.83 1.37A1 1 0 0 0 9.052 1H9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentOpenExcelIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentOpenPowerpointIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 17 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M15 14.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 3 14.5V14h1v.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V13h1zm.929-3.1a.5.5 0 0 1-1-.011l.017-1.634-3.216 3.216a.5.5 0 0 1-.707-.707l3.216-3.216-1.634.017a.5.5 0 1 1-.01-1l3.37-.036zM4 7a2 2 0 0 1 0 4H3v2H2V7zm-1 3h1a1 1 0 0 0 0-2H3zm7.052-10c.602 0 1.174.271 1.553.74l2.948 3.632c.289.356.447.802.447 1.26V7h-1V6H9.5a.5.5 0 0 1-.5-.5V1H4.5a.5.5 0 0 0-.5.5V6H3V1.5A1.5 1.5 0 0 1 4.5 0zM10 5h3.774L10.83 1.37a1 1 0 0 0-.777-.37H10z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentOpenPowerpointIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentOpenWordIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14 14.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5V14h1v.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V13h1zm.929-3.1a.5.5 0 0 1-1-.011l.017-1.634-3.216 3.216a.5.5 0 0 1-.707-.707l3.216-3.216-1.634.017a.5.5 0 1 1-.01-1l3.37-.036zM2 8.222l.6 3.166.4-1.445L3.467 8h1.066l.8 3.5.733-3.5H7l-1.134 5h-.932L4 9.277 3.066 13h-1L2 12.611 1 8h.934zM9.052 0c.602 0 1.174.271 1.553.74l2.948 3.632c.289.356.447.802.447 1.26V7h-1V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2V1.5A1.5 1.5 0 0 1 3.5 0zM9 5h3.774L9.83 1.37A1 1 0 0 0 9.052 1H9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentOpenWordIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentPdfIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h5.552a2 2 0 0 1 1.553.74l2.948 3.632A2 2 0 0 1 14 5.632V14.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5V14h1v.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2zM12.775 5 9.829 1.37A1 1 0 0 0 9.052 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 8.04h1.5a1.5 1.5 0 1 1 0 3H2V13H1zm1 2h.5a.5.5 0 1 0 0-1H2zM5 8.04h1.5A1.5 1.5 0 0 1 8 9.54v2a1.5 1.5 0 0 1-1.5 1.5H5zm1 4h.5a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 0-.5-.5H6z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M9 13.04v-5h3v1h-2v1h1v1h-1v2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentPdfIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentRunTimeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v5h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1H2a1 1 0 0 0 1 1h9a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5.5 13a.5.5 0 0 1 0-1h5a.5.5 0 0 1 0 1zM1.153 12.64a.5.5 0 1 0 .707.707l2.353-2.353L1.86 8.64a.5.5 0 1 0-.707.707l1.646 1.647z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentRunTimeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentTestIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h5.552a2 2 0 0 1 1.553.74l2.948 3.632A2 2 0 0 1 14 5.632V14.5a1.5 1.5 0 0 1-1.5 1.5h-2.485v-1H12.5a.5.5 0 0 0 .5-.5V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2zM12.775 5 9.828 1.37A1 1 0 0 0 9.052 1H9v4z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 8.514a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H7v1.887l1.784 2.817A1.486 1.486 0 0 1 7.53 16H2.505a1.49 1.49 0 0 1-1.264-2.278L3 10.902V9.015h-.5a.5.5 0 0 1-.5-.5m2 .5h2v2.032a.5.5 0 0 0 .078.267l1.862 2.94a.487.487 0 0 1-.411.747H2.505a.49.49 0 0 1-.416-.748l1.835-2.942A.5.5 0 0 0 4 11.046z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
DocumentTestIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentVideoIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M3.5 0A1.5 1.5 0 0 0 2 1.5V7h1V1.5a.5.5 0 0 1 .5-.5H8v4.5a.5.5 0 0 0 .5.5H13v8.5a.5.5 0 0 1-.5.5H2.085A1.5 1.5 0 0 0 3.5 16h9a1.5 1.5 0 0 0 1.5-1.5V5.633a2 2 0 0 0-.447-1.26L10.605.74A2 2 0 0 0 9.052 0zm6.328 1.37L12.775 5H9V1h.052a1 1 0 0 1 .776.37",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.775 12.895A2 2 0 0 1 5.985 14h-4a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h4a2 2 0 0 1 1.79 1.105L9.985 8v6zM1.985 9h4a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1m6 2.882 1 .5V9.618l-1 .5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
DocumentVideoIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentViewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v5h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1H2a1 1 0 0 0 1 1h9a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 13.167c-1.863 0-3.34-.946-3.934-2.334C2.161 9.446 3.636 8.5 5.5 8.5c1.863 0 3.34.946 3.934 2.333-.595 1.388-2.07 2.334-3.934 2.334m0-5.667c2.355 0 4.347 1.3 5 3.333-.653 2.034-2.645 3.334-5 3.334s-4.347-1.3-5-3.334C1.153 8.8 3.145 7.5 5.5 7.5m.316 3.333a.316.316 0 1 1-.632 0 .316.316 0 0 1 .632 0m1 0a1.316 1.316 0 1 1-2.632 0 1.316 1.316 0 0 1 2.632 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentViewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentWebExcelIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 14.5a.5.5 0 0 0 .5.5H7v1H3.5A1.5 1.5 0 0 1 2 14.5V14h1zM11.504 7a4.5 4.5 0 0 1 0 9h-.007a4.5 4.5 0 0 1 .001-9zm-1.089 5c.092 1.049.468 2.092 1.085 2.799.617-.707.993-1.75 1.085-2.799zm-2.38 0a3.5 3.5 0 0 0 2.216 2.77c-.494-.829-.767-1.822-.839-2.77zm5.553 0c-.072.948-.345 1.941-.839 2.77A3.5 3.5 0 0 0 14.965 12zM3.5 9.75 4.75 8H6l-2 2.5L6 13H4.75L3.5 11.25 2.25 13H1l2-2.5L1 8h1.25zm6.79-1.535A3.5 3.5 0 0 0 8.035 11h1.38c.079-.942.38-1.95.875-2.785m1.21.007c-.586.714-.981 1.77-1.082 2.778h2.164c-.101-1.008-.496-2.064-1.082-2.778m1.21-.007A6.7 6.7 0 0 1 13.586 11h1.379a3.5 3.5 0 0 0-2.255-2.785M9.052 0c.602 0 1.174.271 1.553.74l2.948 3.632c.289.356.447.802.447 1.26V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2V1.5A1.5 1.5 0 0 1 3.5 0zM9 5h3.774L9.83 1.37A1 1 0 0 0 9.052 1H9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentWebExcelIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentWebPowerpointIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 14v.5a.5.5 0 0 0 .5.5h3.757c.313.38.677.716 1.08 1H3.5A1.5 1.5 0 0 1 2 14.5V14z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.504 7a4.5 4.5 0 0 1 0 9h-.007a4.5 4.5 0 0 1 .001-9zm-1.089 5c.092 1.049.468 2.092 1.085 2.799.617-.707.993-1.75 1.085-2.799zm-2.38 0a3.5 3.5 0 0 0 2.216 2.77c-.494-.829-.767-1.822-.839-2.77zm5.553 0c-.072.948-.345 1.941-.839 2.77A3.5 3.5 0 0 0 14.965 12zM10.29 8.215A3.5 3.5 0 0 0 8.035 11h1.38c.079-.942.38-1.95.875-2.785m1.21.007c-.586.714-.981 1.77-1.082 2.778h2.164c-.101-1.008-.496-2.064-1.082-2.778m1.21-.007A6.7 6.7 0 0 1 13.586 11h1.379a3.5 3.5 0 0 0-2.255-2.785M3 7a2 2 0 0 1 0 4H2v2H1V7zm-1 3h1a1 1 0 0 0 0-2H2zM9.052 0c.602 0 1.174.271 1.553.74l2.948 3.632c.289.356.447.802.447 1.26V6.6a5.5 5.5 0 0 0-1-.393V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V6H2V1.5A1.5 1.5 0 0 1 3.5 0zM9 5h3.774L9.83 1.37A1 1 0 0 0 9.052 1H9z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentWebPowerpointIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentWebWordIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 14v.5a.5.5 0 0 0 .5.5h3.757c.313.38.677.716 1.08 1H3.5A1.5 1.5 0 0 1 2 14.5V14z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.504 7a4.5 4.5 0 0 1 0 9h-.007a4.5 4.5 0 0 1 .001-9zm-1.089 5c.092 1.049.468 2.092 1.085 2.799.617-.707.993-1.75 1.085-2.799zm-2.38 0a3.5 3.5 0 0 0 2.216 2.77c-.494-.829-.767-1.822-.839-2.77zm5.553 0c-.072.948-.345 1.941-.839 2.77A3.5 3.5 0 0 0 14.965 12zM10.29 8.215A3.5 3.5 0 0 0 8.035 11h1.38c.079-.942.38-1.95.875-2.785m1.21.007c-.586.714-.981 1.77-1.082 2.778h2.164c-.101-1.008-.496-2.064-1.082-2.778m1.21-.007A6.7 6.7 0 0 1 13.586 11h1.379a3.5 3.5 0 0 0-2.255-2.785",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m2 8.223.6 3.166.4-1.445L3.467 8h1.066l.8 3.5.733-3.5H7l-1.134 5h-.932L4 9.277 3.066 13h-1L2 12.611 1 8h.934z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.052 0c.602 0 1.174.271 1.553.74l2.948 3.632c.289.356.447.802.447 1.26V6.6a5.5 5.5 0 0 0-1-.393V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2V1.5A1.5 1.5 0 0 1 3.5 0zM9 5h3.774L9.83 1.37A1 1 0 0 0 9.052 1H9z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentWebWordIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentWebIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.085 15H13V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5V7H2V1.5A1.5 1.5 0 0 1 3.5 0h5.552a2 2 0 0 1 1.553.74l2.948 3.632A2 2 0 0 1 14 5.632V14.5a1.5 1.5 0 0 1-1.5 1.5h-9a1.5 1.5 0 0 1-1.415-1m10.69-10L9.829 1.37A1 1 0 0 0 9.052 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.206 14.229a.5.5 0 0 1-.335-.623l1.73-5.77a.5.5 0 0 1 .959.288l-1.731 5.77a.5.5 0 0 1-.623.335M3.153 9.353a.5.5 0 1 0-.707-.707L.093 11l2.353 2.353a.5.5 0 1 0 .707-.707L1.507 11zM7.847 12.646a.5.5 0 1 0 .707.707L10.907 11 8.554 8.646a.5.5 0 1 0-.707.707L9.493 11z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentWebIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DocumentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 2a2 2 0 0 1 2-2h5.05a2 2 0 0 1 1.552.74l2.95 3.632A2 2 0 0 1 14 5.632V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm11 12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h4v4.5a.5.5 0 0 0 .5.5H13zm-.226-9L9.826 1.37A1 1 0 0 0 9.05 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DocumentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DownloadIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.5 1.5a.5.5 0 0 0-1 0v7.793L5.354 7.146a.5.5 0 1 0-.708.708L8 11.207l3.354-3.353a.5.5 0 0 0-.708-.708L8.5 9.293z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 9a.5.5 0 0 0-1 0v4a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V9a.5.5 0 0 0-1 0v4a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DownloadIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DragHandleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M6 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2M10 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2M11 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M10 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M6 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DragHandleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const DuplicateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 1h6a1 1 0 0 1 1 1h1a2 2 0 0 0-2-2H3a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h1v-1H3a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1M11 7.5a.5.5 0 0 0-1 0V9H8.5a.5.5 0 0 0 0 1H10v1.5a.5.5 0 0 0 1 0V10h1.5a.5.5 0 0 0 0-1H11z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 3a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm0 1a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
DuplicateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditBulkIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "m12.586.586.018-.018.035-.035v.001a2 2 0 0 1 2.775 2.88l-.002-.002-6.347 6.36a.5.5 0 0 1-.234.131L6 10.606A.5.5 0 0 1 5.394 10l.703-2.824a.5.5 0 0 1 .131-.233zM7.034 7.552l6.272-6.272a1 1 0 0 1 1.446 1.378L8.455 8.966l-1.89.47z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4 2h3v1H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V9h1v3a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M1 4.268A2 2 0 0 0 0 6v8a2 2 0 0 0 2 2h8a2 2 0 0 0 1.732-1H2a1 1 0 0 1-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
EditBulkIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditCancelIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M13.5 0a2.5 2.5 0 0 0-1.768.732l-3.938 3.94.707.708 3.946-3.949a1.5 1.5 0 0 1 2.13 2.114L10.62 7.5l.707.707 3.94-3.94A2.5 2.5 0 0 0 13.5 0M2.201 10.268l3.472-3.474.707.707-3.378 3.38-.79 2.906 2.915-.793L8.5 9.62l.707.707-3.467 3.467a.5.5 0 0 1-.222.129l-3.887 1.058a.5.5 0 0 1-.613-.614l1.054-3.878a.5.5 0 0 1 .13-.222M3.854 2.146a.5.5 0 1 0-.708.708l10 10a.5.5 0 0 0 .708-.708z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
EditCancelIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditDocIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.281 4.04c.454-.074.944.032 1.334.422.377.377.466.853.373 1.292-.088.419-.337.802-.635 1.1l-4.468 4.52a.5.5 0 0 1-.236.135l-2.034.505a.5.5 0 0 1-.605-.606l.505-2.029a.5.5 0 0 1 .131-.233l4.5-4.5a2.14 2.14 0 0 1 1.135-.606m.163.987a1.14 1.14 0 0 0-.59.326L5.451 9.755l-.271 1.088 1.091-.271 4.372-4.424.366.362-.364-.364c.203-.202.326-.42.363-.599.034-.157.003-.274-.101-.378a.5.5 0 0 0-.464-.142",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 2a2 2 0 0 1 2-2h6a2 2 0 0 1 1.6.8l2 2.667a2 2 0 0 1 .4 1.2V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm10 13H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h6a1 1 0 0 1 .8.4l2 2.667a1 1 0 0 1 .2.6V14a1 1 0 0 1-1 1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EditDocIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditLayoutIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 17 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M12.878 1.66a2.19 2.19 0 0 1 2.302 2.82l-.074.203a2.2 2.2 0 0 1-.33.55L8.487 13.15l-.083.077a.4.4 0 0 1-.1.053l-3.3 1.25-.056.016a.44.44 0 0 1-.33-.055l-.048-.034a.44.44 0 0 1-.153-.412l.6-3.477a.44.44 0 0 1 .093-.204l6.287-7.918a2.2 2.2 0 0 1 .477-.43l.184-.11c.19-.101.395-.174.606-.215zM.923 13.995a1 1 0 0 1-.893-.892L.025 13a1 1 0 0 1 1-1l.103.005a1 1 0 0 1 .897.995l-.004.102a1 1 0 0 1-.996.898zm12.05-11.337a1.2 1.2 0 0 0-.338.083l-.106.05a1.2 1.2 0 0 0-.36.293L5.979 10.88l-.408 2.366 2.237-.845 6.185-7.79.012-.015c.1-.12.174-.259.22-.408l.028-.113a1.2 1.2 0 0 0-.066-.688l-.05-.105a1.2 1.2 0 0 0-.206-.28l-.086-.08a1.2 1.2 0 0 0-.3-.18l-.11-.04a1.2 1.2 0 0 0-.46-.045M3.632 8.01c.24.049.42.261.42.515l-.011.105a.53.53 0 0 1-.41.408l-.105.011h-3L.42 9.04a.525.525 0 0 1 0-1.029l.105-.01h3zm1.975-3.05c.24.05.42.261.42.515l-.011.105a.53.53 0 0 1-.409.409L5.501 6H.525L.42 5.99a.525.525 0 0 1 0-1.029l.105-.01h4.976zm3.025-2.95c.24.05.42.261.42.515l-.011.105a.53.53 0 0 1-.41.409l-.105.01h-8L.42 3.04a.525.525 0 0 1 0-1.029l.105-.01h8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EditLayoutIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditSmIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.503 3a1.5 1.5 0 0 0-1.059.438L4.007 9.876l-.794 2.911 2.91-.794 6.439-6.437A1.497 1.497 0 0 0 11.503 3m-.956-.81a2.497 2.497 0 0 1 2.722 4.073l-6.532 6.531a.5.5 0 0 1-.222.13l-3.883 1.058a.5.5 0 0 1-.614-.614l1.059-3.883a.5.5 0 0 1 .129-.222l6.531-6.532c.232-.232.508-.415.81-.54",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EditSmIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EditIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.503 2a1.5 1.5 0 0 0-1.059.438l-9.437 9.438-.794 2.911 2.91-.794 9.439-9.437A1.497 1.497 0 0 0 12.503 2m-.956-.81a2.497 2.497 0 0 1 2.722 4.073l-9.532 9.532a.5.5 0 0 1-.222.128l-3.883 1.06a.5.5 0 0 1-.614-.615l1.059-3.883a.5.5 0 0 1 .129-.222l9.531-9.532c.232-.232.508-.415.81-.54",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
EditIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EmailAttachmentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.049 2.691A1 1 0 0 0 1 3v7a1 1 0 0 0 1 1h5v1H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v2.5h-1V3a1 1 0 0 0-.049-.309l-5.63 4.693a.5.5 0 0 1-.641 0zm.755-.672Q1.899 2.001 2 2h10q.101 0 .196.02L7 6.35z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10.438 13.71c.26.033.57-.115.888-.434l3.409-3.408-.002-.002c.027-.028.085-.115.127-.29.039-.167.054-.377.03-.603-.046-.46-.239-.921-.598-1.223a1.85 1.85 0 0 0-1.4-.436 1.56 1.56 0 0 0-.885.397l-.026.029-.082.082q-.014.015-.026.03l-.002-.002-2.938 2.937a.5.5 0 1 1-.707-.707l2.947-2.947a2.55 2.55 0 0 1 1.606-.813 2.85 2.85 0 0 1 2.156.664c.608.511.885 1.241.95 1.888.034.326.015.648-.052.933a1.7 1.7 0 0 1-.321.69l.005.005-3.484 3.483c-.388.39-.993.813-1.724.718a2.1 2.1 0 0 1-1.178-.541 2.5 2.5 0 0 1-.672-.976c-.31-.848.218-1.627.662-2.071l2.927-2.926a1.31 1.31 0 0 1 1.865.001 1.335 1.335 0 0 1 0 1.874l-.003.003-2.85 2.85a.5.5 0 0 1-.707-.708L13.2 9.36a.336.336 0 0 0 0-.47.31.31 0 0 0-.442 0l-.003.003-2.927 2.928c-.39.39-.526.761-.43 1.021.07.193.196.383.415.588.148.139.35.245.624.28",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EmailAttachmentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EmailIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm2-1h12q.12 0 .232.027L8 7.39 1.768 3.027Q1.879 3 2 3m-.965.735A1 1 0 0 0 1 4v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4q0-.138-.036-.265L8.288 8.41a.5.5 0 0 1-.574 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EmailIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EmojiIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2M3.05 3.05a7 7 0 1 1 9.9 9.9 7 7 0 0 1-9.9-9.9m2.415 2.718c.076-.15.273-.435.64-.435.365 0 .562.284.638.435.09.181.132.397.132.607s-.042.426-.132.607c-.076.15-.273.435-.639.435s-.563-.284-.639-.435a1.4 1.4 0 0 1-.132-.607c0-.21.042-.426.132-.607m3.792 0c.076-.15.273-.435.639-.435s.563.284.638.435c.091.181.133.397.133.607s-.042.426-.133.607c-.075.15-.272.435-.638.435s-.563-.284-.639-.435a1.4 1.4 0 0 1-.132-.607c0-.21.042-.426.132-.607M5.348 9.945a.5.5 0 0 1 .707 0 2.75 2.75 0 0 0 3.89 0 .5.5 0 0 1 .707.707 3.75 3.75 0 0 1-5.304 0 .5.5 0 0 1 0-.707",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EmojiIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const EnterpriseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.024 4.718a2 2 0 1 1 .714-.729A6.97 6.97 0 0 1 15 8a6.97 6.97 0 0 1-1.262 4.01 2 2 0 1 1-.714-.729C13.64 10.34 14 9.212 14 8a5.97 5.97 0 0 0-.976-3.282M12 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m1 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.248 9.854a2 2 0 0 1 0-3.708 7.003 7.003 0 0 1 9.406-4.625c-.253.23-.446.524-.555.856a6.003 6.003 0 0 0-7.767 3.65 2 2 0 0 1 0 3.946 6 6 0 0 0 7.767 3.65c.109.332.302.626.555.856a7.003 7.003 0 0 1-9.406-4.625M2 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
EnterpriseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ErrorCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5.172 5.172a.5.5 0 0 1 .707 0L8 7.292l2.121-2.12a.5.5 0 1 1 .707.707L8.708 8l2.12 2.121a.5.5 0 1 1-.707.707L8 8.708l-2.121 2.12a.5.5 0 1 1-.707-.707L7.292 8l-2.12-2.121a.5.5 0 0 1 0-.707",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ErrorCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ExitIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9 1H3a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2h1v2a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v3h-1V2a1 1 0 0 0-1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.306 6.143a.5.5 0 1 0-.7.714L12.774 8H8.5a.5.5 0 0 0 0 1h4.274l-1.168 1.143a.5.5 0 1 0 .7.714L14.715 8.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ExitIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ExportDocumentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h5.552a2 2 0 0 1 1.553.74l2.948 3.632A2 2 0 0 1 14 5.632V8h-1V6H8.5a.5.5 0 0 1-.5-.5V1H3.5a.5.5 0 0 0-.5.5v13a.5.5 0 0 0 .5.5H10v1H3.5A1.5 1.5 0 0 1 2 14.5zM12.775 5 9.828 1.37A1 1 0 0 0 9.052 1H9v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13.306 10.143a.5.5 0 1 0-.7.714L13.774 12H9.5a.5.5 0 0 0 0 1h4.274l-1.168 1.143a.5.5 0 1 0 .7.714l2.409-2.357z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ExportDocumentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ExternalLinkIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.146 7.146a.5.5 0 1 0 .708.708L14 2.707V5.5a.5.5 0 0 0 1 0V1h-4.5a.5.5 0 0 0 0 1h2.793z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3 2h5v1H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1V8h1v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ExternalLinkIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FavoriteFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "m14.332 8.61.008.007-6.325 6.324-6.098-6.097a4.46 4.46 0 1 1 6.074-6.527l.024-.025.009.009a4.46 4.46 0 0 1 6.308 6.308",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FavoriteFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FavoriteIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "m2.6 8.111 5.415 5.416 4.91-4.91-.003-.004.7-.707A3.46 3.46 0 0 0 8.727 3.01l-.707.7-.005-.004-.023.023-.707-.707a3.461 3.461 0 1 0-4.712 5.065zm5.392-5.795.023-.024.009.009a4.46 4.46 0 0 1 6.308 6.308l.008.008-6.325 6.324-6.098-6.097a4.46 4.46 0 1 1 6.074-6.527",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FavoriteIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FileInventoryIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 1a1 1 0 0 0-1 1h2a1 1 0 0 0-1-1m2 1a2 2 0 1 0-4 0H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-2m1 1H5v1h6zM4 3v1a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M9 8.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5M9 11.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8.354 6.146a.5.5 0 0 1 0 .708L5.5 9.707 4.146 8.354a.5.5 0 1 1 .708-.708l.646.647 2.146-2.147a.5.5 0 0 1 .708 0M8.354 10.146a.5.5 0 0 1 0 .708L5.5 13.707l-1.354-1.353a.5.5 0 0 1 .708-.708l.646.647 2.146-2.147a.5.5 0 0 1 .708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FileInventoryIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FilePlanIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.5 16V0h1v16zM6.5 3.5A.5.5 0 0 1 6 4H3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M6.5 5.5A.5.5 0 0 1 6 6H3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M6.5 7.5A.5.5 0 0 1 6 8H3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M13.5 3.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M13.5 5.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M13.5 7.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M13.5 9.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5M13.5 11.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
FilePlanIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FilterRemoveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m14.036 2-1.454 2h1.236l1.027-1.412A1 1 0 0 0 14.036 1H1.964a1 1 0 0 0-.809 1.588l4.844 6.66v5.134a1 1 0 0 0 1.447.894l2-1a1 1 0 0 0 .553-.894V10h-1v3.382l-2 1V8.924L1.964 2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M14.354 9.354a.5.5 0 0 1-.708 0L12.25 7.957l-1.396 1.397a.5.5 0 0 1-.708-.708l1.397-1.396-1.397-1.396a.5.5 0 0 1 .708-.708l1.396 1.397 1.396-1.397a.5.5 0 0 1 .708.708L12.957 7.25l1.397 1.396a.5.5 0 0 1 0 .708",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FilterRemoveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FilterIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 8.925 14.036 2H1.964L7 8.925v5.457l2-1zM6 9.25v5.132a1 1 0 0 0 1.447.894l2-1a1 1 0 0 0 .553-.894V9.25l4.845-6.662A1 1 0 0 0 14.036 1H1.964a1 1 0 0 0-.809 1.588z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FilterIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FinishLineFlagIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 15.5a.5.5 0 0 0 1 0V9.556s1.077.538 2.6.667q.314.028.65.028c.745 0 1.415-.086 1.95-.189a8.4 8.4 0 0 0 1.3-.345s.5-.192 1.3-.346a10.4 10.4 0 0 1 1.95-.19q.336.001.65.022c.898.06 1.641.227 2.1.355.319.089.5.159.5.159V1.535s-1.077-.414-2.6-.514A10 10 0 0 0 11.75 1c-.745 0-1.415.086-1.95.189-.8.154-1.3.346-1.3.346s-.5.192-1.3.346c-.535.103-1.205.189-1.95.189q-.336 0-.65-.022a10.5 10.5 0 0 1-2.1-.355c-.319-.089-.5-.158-.5-.158V1a.5.5 0 0 0-1 0zM14.5 4.104V6.83a10.5 10.5 0 0 0-2.1-.355V3.749c.898.059 1.641.227 2.1.355m-4.7-.188V1.7a10 10 0 0 1 1.95-.199q.319 0 .617.02l.033.003v2.226a10 10 0 0 0-.65-.022c-.745 0-1.415.086-1.95.19m-2.6.692c.8-.154 1.3-.346 1.3-.346s.5-.192 1.3-.346v2.727c-.8.154-1.3.346-1.3.346s-.5.192-1.3.346zm-2.6.167V2.55q.314.02.65.02c.739 0 1.406-.08 1.95-.18v2.219c-.535.103-1.205.189-1.95.189q-.336 0-.65-.022m0 0a10.5 10.5 0 0 1-2.1-.354v2.727c.459.128 1.202.296 2.1.355v2.219l.042.003q.295.026.608.026a10 10 0 0 0 1.95-.198V7.335a9.948 9.948 0 0 1-2.6.167zm5.2 1.868a10.4 10.4 0 0 1 1.95-.188q.336 0 .65.021v2.226q-.314-.02-.65-.02c-.739 0-1.406.08-1.95.18z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FinishLineFlagIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FlagIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 1v14.5a.5.5 0 1 0 1 0V9h13l-2.954-4L15 1H2a.5.5 0 0 0-1 0m12.018 7H2V2h11.018l-2.216 3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FlagIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FolderBrowseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 3a2 2 0 0 1 2-2h4.172a2 2 0 0 1 1.414.586l1.121 1.121A1 1 0 0 0 9.414 3H14a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm15 4v6a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm0-1V5a1 1 0 0 0-1-1H9.414A2 2 0 0 1 8 3.414L6.879 2.293A1 1 0 0 0 6.172 2H2a1 1 0 0 0-1 1v3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0M9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0M12 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FolderBrowseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FolderOpenIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.827 5a2 2 0 0 0-2-2H8.413a1 1 0 0 1-.707-.293L6.586 1.586A2 2 0 0 0 5.172 1H2a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h9.802a2 2 0 0 0 1.889-1.341l2.092-6A2 2 0 0 0 13.894 5zm-1 0a1 1 0 0 0-1-1H8.413A2 2 0 0 1 7 3.414L5.879 2.293A1 1 0 0 0 5.172 2H2a1 1 0 0 0-1 1v7.313l1.749-4.098A2 2 0 0 1 4.589 5zm-9.85 10h8.192-8.191M14.84 7.33l-2.093 6a1 1 0 0 1-.944.67H2.028a1 1 0 0 1-.92-1.393l2.56-6A1 1 0 0 1 4.589 6h9.306a1 1 0 0 1 .944 1.33",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FolderOpenIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FolderIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 3a2 2 0 0 1 2-2h4.172a2 2 0 0 1 1.414.586l1.121 1.121A1 1 0 0 0 9.414 3H14a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm15 4v6a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm0-1V5a1 1 0 0 0-1-1H9.414A2 2 0 0 1 8 3.414L6.879 2.293A1 1 0 0 0 6.172 2H2a1 1 0 0 0-1 1v3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FolderIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const FormIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 17",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M15 3.004H1v3h14zm-14-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zM15 12.004H1v3h14zm-14-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M0 0h6v1H0zM0 9h8v1H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
FormIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ForwardHistoryIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 15h8a1 1 0 0 0 1-1h1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8.5l1 1V14a1 1 0 0 0 1 1M14 5v-.333a2 2 0 0 0-.4-1.2L11.6.8A2 2 0 0 0 10 0H4a2 2 0 0 0-2 2v1.5L3 3V2a1 1 0 0 1 1-1h6a1 1 0 0 1 .8.4l2 2.667a1 1 0 0 1 .2.6V5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.884 7.15a.5.5 0 0 1 .707-.007L16 9.5l-2.41 2.357a.5.5 0 1 1-.699-.714L14.06 10H10.5A1.5 1.5 0 0 0 9 11.5v1a.5.5 0 0 1-1 0v-1A2.5 2.5 0 0 1 10.5 9h3.56l-1.168-1.143a.5.5 0 0 1-.007-.707",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 3.59a.5.5 0 0 1 .5.5v1.72L5.155 6.98a.5.5 0 1 1-.712.703L3 6.222V4.09a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ForwardHistoryIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const GoToLocationUpIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m7 3.707 2.146 2.147a.5.5 0 1 0 .708-.708L6.5 1.793 3.146 5.146a.5.5 0 1 0 .708.708L6 3.707V10.5A3.5 3.5 0 0 0 9.5 14h3a.5.5 0 0 0 0-1h-3A2.5 2.5 0 0 1 7 10.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
GoToLocationUpIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const GoToLocationIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m12.293 7-2.147 2.146a.5.5 0 0 0 .708.708L14.207 6.5l-3.353-3.354a.5.5 0 0 0-.708.708L12.293 6H5.5A3.5 3.5 0 0 0 2 9.5v3a.5.5 0 0 0 1 0v-3A2.5 2.5 0 0 1 5.5 7z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
GoToLocationIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const GridSlimIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 13.5a.5.5 0 0 0 1 0V12h3.5v1.5a.5.5 0 0 0 1 0V12H12v1.5a.5.5 0 0 0 1 0V12h1.5a.5.5 0 0 0 0-1H13V8h1.5a.5.5 0 0 0 0-1H13V4h1.5a.5.5 0 0 0 0-1H13V1.5a.5.5 0 0 0-1 0V3H8.5V1.5a.5.5 0 0 0-1 0V3H4V1.5a.5.5 0 0 0-1 0V3H1.5a.5.5 0 0 0 0 1H3v3H1.5a.5.5 0 0 0 0 1H3v3H1.5a.5.5 0 0 0 0 1H3zM12 4H8.5v3H12zm0 4H8.5v3H12zM7.5 8v3H4V8zm0-4v3H4V4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
GridSlimIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const GridIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 13.5a.5.5 0 0 0 1 0V13h4.5v.5a.5.5 0 0 0 1 0V13H13v.5a.5.5 0 0 0 1 0V13h.5a.5.5 0 0 0 0-1H14V8h.5a.5.5 0 0 0 0-1H14V3h.5a.5.5 0 0 0 0-1H14v-.5a.5.5 0 0 0-1 0V2H8.5v-.5a.5.5 0 0 0-1 0V2H3v-.5a.5.5 0 0 0-1 0V2h-.5a.5.5 0 0 0 0 1H2v4h-.5a.5.5 0 0 0 0 1H2v4h-.5a.5.5 0 0 0 0 1H2zM13 3H8.5v4H13zm0 5H8.5v4H13zM7.5 8v4H3V8zm0-5v4H3V3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
GridIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const GroupInboxIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M13.5 5a.5.5 0 1 1 .857-.514L16 8l-.429 1.257zM2.672 5.186a.5.5 0 0 0-.858-.514L0 8l.429 1.257z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.52 9H1v5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V9h-2.52l-.699.874A3 3 0 0 1 9.44 11H6.56A3 3 0 0 1 4.22 9.874zM4 8H0v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8h-4l-1 1.25A2 2 0 0 1 9.44 10H6.56A2 2 0 0 1 5 9.25z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.7 1a1.834 1.834 0 1 1 0 3.667l-.01-.001c-.792.005-1.526.562-1.644 1.2v.005a15.394 15.394 0 0 0-.027.446c-.011.243-.019.51-.019.675a.5.5 0 0 1-1 0 18 18 0 0 1 .038-1.06c.006-.084.013-.186.025-.25.135-.724.631-1.298 1.255-1.646A1.833 1.833 0 0 1 5.698 1m0 1a.833.833 0 0 0-.01 1.666h.016A.833.833 0 0 0 5.7 2",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10.946 3a.929.929 0 1 0-.93.929v1l-.196-.01a1.93 1.93 0 0 1-1.722-1.722L8.088 3c0-1.065.864-1.929 1.929-1.929l.197.01a1.93 1.93 0 0 1 1.732 1.92l-.01.196a1.93 1.93 0 0 1-1.92 1.732v-1a.93.93 0 0 0 .93-.929",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12 6.952a1.983 1.983 0 0 0-3.967 0V10h-1V6.952a2.983 2.983 0 0 1 5.967 0v1.942h-1zM7 12h2v1H7z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
GroupInboxIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const GroupObjectsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7 0H5v1h2zM1 7V5H0v2zM16 5h-1v2h1zM16 9v2h-1V9zM1 11V9H0v2zM9 0h2v1H9zM7 15v1H5v-1zM9 15h2v1H9zM0 13.25V15a1 1 0 0 0 1 1h1.75v-1H1v-1.75zM1 2.75H0V1a1 1 0 0 1 1-1h1.75v1H1zM13.25 0v1H15v1.75h1V1a1 1 0 0 0-1-1zM15 13.25h1V15a1 1 0 0 1-1 1h-1.75v-1H15zM4 8V4h4v2h1V3.5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5H6V8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5zM8 12V8h4v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
GroupObjectsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HaltIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "m4.036 13.189-1.183-2.465-.64-1.229a1.625 1.625 0 0 1 2.59-1.898L5 7.793V2.387c0-.253.09-.497.253-.69l.103-.121a1.5 1.5 0 0 1 1.661-.439c.035-.196.125-.38.26-.529l.11-.121a1.5 1.5 0 0 1 2.545.56A1.5 1.5 0 0 1 12 2.436v.63a1.5 1.5 0 0 1 2 1.414v7.55c0 1.324-.719 2.342-1.736 3.007-1.007.66-2.328.993-3.647.993-1.221 0-2.227-.274-3.005-.784a3.92 3.92 0 0 1-1.576-2.058M8.129 1.156a.5.5 0 0 1 .87.335V7.5a.5.5 0 1 0 1 0V2.266q.001-.033.024-.057l.118-.121a.5.5 0 0 1 .859.348V8.5a.5.5 0 0 0 1 0V4.315q0-.03.02-.051l.111-.122A.5.5 0 0 1 13 4.48v7.55c0 .913-.48 1.645-1.283 2.17-.813.532-1.934.83-3.1.83-1.073 0-1.877-.24-2.458-.62-.577-.379-.967-.915-1.185-1.568l-.023-.058-1.204-2.507-.646-1.243a.625.625 0 0 1 .996-.73l1.05 1.05A.5.5 0 0 0 6 9V2.387q0-.024.016-.043l.103-.121a.5.5 0 0 1 .88.323V7.5a.5.5 0 1 0 1 0V1.328q.001-.028.02-.05z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
HaltIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HamburgerCloseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7 6a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H8a1 1 0 0 1-1-1M5.207 8.793a1 1 0 0 1 0 1.414L4.414 11H22a1 1 0 1 1 0 2H4.414l.793.793a1 1 0 1 1-1.414 1.414L.586 12l3.207-3.207a1 1 0 0 1 1.414 0M8 17a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
HamburgerCloseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HamburgerIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M4 6a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1M5 17a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2zM4 12a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
HamburgerIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HelpCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M6.871 5.407C6.59 5.65 6.5 5.899 6.5 6a.5.5 0 0 1-1 0c0-.49.303-.992.717-1.35A2.7 2.7 0 0 1 8 4c.809 0 1.44.203 1.877.586.442.388.623.909.623 1.414 0 .407-.23.8-.435 1.087-.222.31-.498.603-.727.826-.286.28-.524.577-.686.902-.1.2-.152.42-.152.642V10a.5.5 0 0 1-1 0v-.543c0-.378.088-.751.257-1.09.228-.454.546-.839.882-1.168.21-.205.44-.452.613-.695.19-.265.248-.435.248-.504a.85.85 0 0 0-.283-.663C9.018 5.163 8.65 5 8 5c-.48 0-.865.178-1.129.407",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("circle", {
        cx: "8.025",
        cy: "12.025",
        r: ".625",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
HelpCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HflexIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.002 2.504c0-.829-.67-1.5-1.496-1.5h-8.98c-.827 0-1.497.671-1.497 1.5v6.5h-.998v-6.5c0-1.38 1.117-2.5 2.495-2.5h8.98A2.497 2.497 0 0 1 15 2.504v6.5h-.998z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13.306 10.143a.5.5 0 1 0-.7.714L13.774 12H9.5a.5.5 0 0 0 0 1h4.274l-1.168 1.143a.5.5 0 1 0 .7.714l2.409-2.357zM2.694 14.857a.5.5 0 1 0 .7-.714L2.226 13H6.5a.5.5 0 0 0 0-1H2.226l1.168-1.143a.5.5 0 0 0-.7-.714L.285 12.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
HflexIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HistoryIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5.38 2.602a6 6 0 1 1-2.566 8.415.5.5 0 0 0-.865.503A7 7 0 1 0 2 4.394V2.5a.5.5 0 1 0-1 0V6h3.5a.5.5 0 0 0 0-1H2.804A6 6 0 0 1 5.38 2.602",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8.5 4.5A.5.5 0 0 1 9 5v3l1.354 1.146a.5.5 0 0 1-.708.708L8 8.5V5a.5.5 0 0 1 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
HistoryIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HoldUserIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M7 9.576a1.625 1.625 0 0 0-2.384 2.073c.78 1.5 1.481 2.633 2.955 3.597.778.51 1.666.754 2.888.754.592 0 1.263-.014 1.903-.106.632-.09 1.32-.267 1.902-.648C15.283 14.58 16 13.563 16 12.24V7.69a1.5 1.5 0 0 0-2-1.415v-.63a1.5 1.5 0 0 0-2.068-1.388 1.5 1.5 0 0 0-2.545-.56 1.5 1.5 0 0 0-.341.662 1.51 1.51 0 0 0-1.69.427c-.257.302-.356.65-.356.97zm2-3.823a.5.5 0 0 0-.119-.321.506.506 0 0 0-.762 0A.48.48 0 0 0 8 5.755v4.454c0 .444 0 .788-.111.979-.283.481-.633.36-1.39-.73a.624.624 0 0 0-.996.73C6.57 13.24 7.89 15.076 10.46 15c1.167 0 2.445-.059 3.258-.59.803-.526 1.283-1.258 1.283-2.17V7.69q0-.009 0 0a.5.5 0 0 0-.868-.339C14 7.494 14 7.623 14 7.69V9.71a.5.5 0 0 1-1 0V5.644a.5.5 0 0 0-1 0v3.064a.5.5 0 0 1-1 0V4.701a.5.5 0 0 0-.871-.335A.6.6 0 0 0 10 4.7v1.054M9 8.71a.5.5 0 1 0 1 0m0-.336V8.21M9 5.752v.002zm0 .745v1.578z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7 9.576a1.625 1.625 0 0 0-2.384 2.073c.78 1.5 1.481 2.633 2.955 3.597.778.51 1.666.754 2.888.754.592 0 1.263-.014 1.903-.106.632-.09 1.32-.267 1.902-.648C15.283 14.58 16 13.563 16 12.24V7.69a1.5 1.5 0 0 0-2-1.415v-.63a1.5 1.5 0 0 0-2.068-1.388 1.5 1.5 0 0 0-2.545-.56 1.5 1.5 0 0 0-.341.662 1.51 1.51 0 0 0-1.69.427c-.257.302-.356.65-.356.97zm2-3.823a.5.5 0 0 0-.119-.321.506.506 0 0 0-.762 0A.48.48 0 0 0 8 5.755v4.454c0 .444 0 .788-.111.979-.283.481-.633.36-1.39-.73a.624.624 0 0 0-.996.73C6.57 13.24 7.89 15.076 10.46 15c1.167 0 2.445-.059 3.258-.59.803-.526 1.283-1.258 1.283-2.17V7.69a.5.5 0 0 0-.868-.339C14 7.494 14 7.623 14 7.69V9.71a.5.5 0 0 1-1 0V5.644a.5.5 0 0 0-1 0v3.064a.5.5 0 0 1-1 0V4.701a.5.5 0 0 0-.871-.335A.6.6 0 0 0 10 4.7V8.71a.5.5 0 0 1-1 0V5.753M4.197 4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.005 9.01c-.302 0-1.252-.002-1.468 0-.208.001-.388.003-.565.002a5 5 0 0 1-.671-.03.6.6 0 0 1-.123-.032.8.8 0 0 1-.146-.146 1 1 0 0 1-.019-.113 6 6 0 0 1-.005-.764C1.055 6.194 2.383 5 4.005 5c.855 0 1.432.344 1.986.832V4.687C5.331 4.284 4.838 4 4.005 4 1.8 4 .068 5.667.008 7.9c-.02.706-.023 1.187.214 1.495.518.627.785.625 2.327.615.221-.002 1.173 0 1.451 0v-.995z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
HoldUserIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HoldViewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 9.576a1.625 1.625 0 0 0-2.384 2.073c.78 1.5 1.481 2.633 2.955 3.597.778.51 1.666.754 2.888.754.592 0 1.263-.014 1.903-.106.632-.09 1.32-.267 1.902-.648C15.283 14.58 16 13.563 16 12.24V7.69a1.5 1.5 0 0 0-2-1.415v-.63a1.5 1.5 0 0 0-2.068-1.388 1.5 1.5 0 0 0-2.545-.56 1.5 1.5 0 0 0-.341.662 1.51 1.51 0 0 0-1.69.427c-.257.302-.356.65-.356.97zm2-3.823a.5.5 0 0 0-.119-.321.506.506 0 0 0-.762 0A.48.48 0 0 0 8 5.755v4.454c0 .444 0 .788-.111.979-.283.481-.633.36-1.39-.73a.624.624 0 0 0-.996.73C6.57 13.24 7.89 15.076 10.46 15c1.167 0 2.445-.059 3.258-.59.803-.526 1.283-1.258 1.283-2.17V7.69q0-.009 0 0a.5.5 0 0 0-.868-.339C14 7.494 14 7.623 14 7.69V9.71a.5.5 0 0 1-1 0V5.644a.5.5 0 0 0-1 0v3.064a.5.5 0 0 1-1 0V4.701a.5.5 0 0 0-.871-.335A.6.6 0 0 0 10 4.7v1.054M9 8.71a.5.5 0 1 0 1 0m0-.336V8.21M9 5.752v.002zm0 .745v1.578z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 9.576a1.625 1.625 0 0 0-2.384 2.073c.78 1.5 1.481 2.633 2.955 3.597.778.51 1.666.754 2.888.754.592 0 1.263-.014 1.903-.106.632-.09 1.32-.267 1.902-.648C15.283 14.58 16 13.563 16 12.24V7.69a1.5 1.5 0 0 0-2-1.415v-.63a1.5 1.5 0 0 0-2.068-1.388 1.5 1.5 0 0 0-2.545-.56 1.5 1.5 0 0 0-.341.662 1.51 1.51 0 0 0-1.69.427c-.257.302-.356.65-.356.97zm2-3.823a.5.5 0 0 0-.119-.321.506.506 0 0 0-.762 0A.48.48 0 0 0 8 5.755v4.454c0 .444 0 .788-.111.979-.283.481-.633.36-1.39-.73a.624.624 0 0 0-.996.73C6.57 13.24 7.89 15.076 10.46 15c1.167 0 2.445-.059 3.258-.59.803-.526 1.283-1.258 1.283-2.17V7.69a.5.5 0 0 0-.868-.339C14 7.494 14 7.623 14 7.69V9.71a.5.5 0 0 1-1 0V5.644a.5.5 0 0 0-1 0v3.064a.5.5 0 0 1-1 0V4.701a.5.5 0 0 0-.871-.335A.6.6 0 0 0 10 4.7V8.71a.5.5 0 0 1-1 0V5.753",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M0 1.248C0 .558.56 0 1.25 0h4.5c.393 0 .764.185 1 .499l1 1.33c.162.217.25.48.25.75V3.5H7v-.922a.25.25 0 0 0-.05-.149l-1-1.33a.25.25 0 0 0-.2-.1h-4.5a.25.25 0 0 0-.25.249v7.504a.25.25 0 0 0 .25.249H4V10H1.25C.56 10 0 9.442 0 8.752z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
HoldViewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HomeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "m8 .12 7.804 5.983a.5.5 0 1 1-.608.794L15 6.747V14.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 1 14.5V6.747l-.196.15a.5.5 0 1 1-.608-.794zm0 1.26L14.026 6H14v8.5a.5.5 0 0 1-.5.5h-3v-5a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0-.5.5v5h-3a.5.5 0 0 1-.5-.5V6h-.026zM6.5 15h3v-4.5h-3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
HomeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HostMaintenanceIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M2 1a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v3h-1V1H3v4h6v1H3v4h4v1H3v4h2v1H3a1 1 0 0 1-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1A.5.5 0 0 1 10 3",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M15.34 6.642a3 3 0 0 0-.628-.836l-1.334 1.836a.05.05 0 0 1-.025.017.474.474 0 0 1-.603-.438l-.003-.062q0-.018.01-.032l1.258-1.806a3 3 0 0 0-1.009-.302 2.999 2.999 0 0 0-3.003 4.366L6.875 13.76a1.44 1.44 0 0 0 2.343 1.676l3.18-4.446a3 3 0 0 0 2.942-4.347m-3.404-.087c-.13.188-.197.413-.188.642l.002.062a1.474 1.474 0 0 0 1.875 1.362c.226-.064.424-.202.562-.392l.442-.608a2.001 2.001 0 0 1-2.636 2.264l-.624.821.002.001-2.966 4.146a.44.44 0 0 1-.717-.512l2.899-4.052-.002-.002.646-.892a2.001 2.001 0 0 1 1.068-3.36z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
HostMaintenanceIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const HostIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M10 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1A.5.5 0 0 1 10 3",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1zm1 0h10v4H3zm0 5v4h10V6zm0 9v-4h10v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
HostIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const IdeaIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.75 2.5a.5.5 0 0 1 .5-.5A3.75 3.75 0 0 1 12 5.75a.5.5 0 0 1-1 0A2.75 2.75 0 0 0 8.25 3a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.5 13.866A1 1 0 0 0 11 13v-1.226c0-.357.194-.681.485-.89a6 6 0 1 0-6.97 0c.29.208.485.533.485.89V13a1 1 0 0 0 .5.866v.634A1.5 1.5 0 0 0 7 16h2a1.5 1.5 0 0 0 1.5-1.5zm.403-3.795a5 5 0 1 0-5.806 0c.509.364.903.973.903 1.703V13h4v-1.226c0-.73.394-1.339.903-1.703M9.5 14v.5a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V14z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
IdeaIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const IframeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5.179 6.87a2.795 2.795 0 0 1 3.952 0l.088.088-.015.016a.542.542 0 0 1-.876.63 1.71 1.71 0 0 0-2.38.034l-1.911 1.91a1.709 1.709 0 0 0 2.415 2.416l.955-.955a.544.544 0 0 1 .769.767l-.955.957A2.795 2.795 0 0 1 3.268 8.78z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8.78 3.268a2.794 2.794 0 1 1 3.951 3.952l-1.91 1.91a2.794 2.794 0 0 1-3.95 0 .543.543 0 1 1 .771-.764c.668.662 1.746.66 2.411-.005l1.91-1.91a1.708 1.708 0 0 0-2.415-2.415l-.955.955a.543.543 0 1 1-.768-.768z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
IframeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImageButtonIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 4H2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1M2 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8.326 8.942c-3.059-1.637-5.875-.967-7.58-.006l-.491-.871c1.929-1.087 5.115-1.84 8.543-.004 2.005 1.073 3.441 1.146 4.431.944.806-.164 1.335-.503 1.733-.758q.157-.103.29-.18l.495.87c-.05.027-.114.07-.193.12-.384.25-1.11.72-2.125.928-1.254.255-2.926.123-5.103-1.043",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ImageButtonIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImageIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11 6a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2zm2-1h10a1 1 0 0 1 1 1v8.185l-2.354-2.649a1.5 1.5 0 0 0-2.274.036L8.208 9.97 6.553 7.677a1.5 1.5 0 0 0-2.295-.165L2 9.85V3a1 1 0 0 1 1-1m5.812 8.807 1.328-1.594a.5.5 0 0 1 .758-.012L14 12.69V13a1 1 0 0 1-1 1h-1.883zm-3.07-2.545L9.883 14H3a1 1 0 0 1-1-1v-1.736l.012.012 2.965-3.069a.5.5 0 0 1 .765.055",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ImageIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ImportDocumentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.702 8.645a.5.5 0 1 1 .7.714l-1.168 1.143H12.5a.5.5 0 1 1 0 1H7.234L8.4 12.645a.5.5 0 0 1-.699.714l-2.41-2.357z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 0A1.5 1.5 0 0 0 2 1.5v13A1.5 1.5 0 0 0 3.5 16h9a1.5 1.5 0 0 0 1.5-1.5V13h-1v1.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 .5-.5H8v4.5a.5.5 0 0 0 .5.5H13v3h1V5.633a2 2 0 0 0-.447-1.26L10.605.74A2 2 0 0 0 9.052 0zm6.328 1.37L12.775 5H9V1h.052a1 1 0 0 1 .776.37",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ImportDocumentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const InformationCircleFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.25-4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 0-.5-.5h-.5a.5.5 0 0 0-.5.5v4a.5.5 0 0 0 .5.5zm-1-7.45a.75.75 0 1 1 1.5 0 .75.75 0 0 1-1.5 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
InformationCircleFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const InformationCircleSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.6 5a.6.6 0 1 1-1.2 0 .6.6 0 0 1 1.2 0M8.5 7a.5.5 0 0 0-1 0v4a.5.5 0 0 0 1 0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12m0-1A5 5 0 1 0 8 3a5 5 0 0 0 0 10",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
InformationCircleSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const InformationCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M8 6.031a.6.6 0 0 1 .6.6v4.77a.6.6 0 1 1-1.2 0v-4.77a.6.6 0 0 1 .6-.6M8 5.088a.6.6 0 1 0 0-1.2.6.6 0 0 0 0 1.2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
InformationCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const IntegerIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 3H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8.097 11.08q-.603 0-1.068-.205a1.8 1.8 0 0 1-.74-.574 1.5 1.5 0 0 1-.286-.852h.977a.74.74 0 0 0 .165.429q.15.182.395.284.247.1.551.1a1.4 1.4 0 0 0 .58-.114.95.95 0 0 0 .397-.321.8.8 0 0 0 .142-.475.84.84 0 0 0-.142-.491.95.95 0 0 0-.417-.333 1.65 1.65 0 0 0-.662-.119h-.503v-.767h.503q.316 0 .55-.108a.9.9 0 0 0 .373-.31.8.8 0 0 0 .136-.468.86.86 0 0 0-.116-.452.78.78 0 0 0-.33-.298 1.1 1.1 0 0 0-.494-.108q-.276 0-.514.1a.96.96 0 0 0-.384.283.75.75 0 0 0-.156.44h-.929q.011-.48.279-.843.27-.366.715-.571.447-.205.995-.205.573 0 .991.219.42.216.648.58.23.363.23.798 0 .492-.281.83a1.35 1.35 0 0 1-.747.445v.046q.6.085.92.454.324.37.324.918 0 .486-.273.87-.272.38-.747.599a2.56 2.56 0 0 1-1.082.219",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
IntegerIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LabelIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 6H2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1M2 5a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M0 1h10v2H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LabelIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LanguageIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-11.342.616H1.027a7.004 7.004 0 0 0 5.79 6.285c-1.34-1.694-2.048-4.063-2.159-6.285m1.002 0h4.68c-.123 2.29-.927 4.652-2.34 6.12-1.413-1.468-2.217-3.83-2.34-6.12m4.69-1h-4.7C5.74 5.34 6.615 2.813 8 1.283c1.386 1.53 2.26 4.057 2.35 6.333m.992 1c-.111 2.222-.82 4.59-2.16 6.285a7.004 7.004 0 0 0 5.791-6.285zm3.648-1h-3.64c-.081-2.244-.862-4.766-2.209-6.523 3.2.524 5.67 3.219 5.849 6.523m-10.34 0H1.01A7 7 0 0 1 6.86 1.093C5.513 2.85 4.73 5.373 4.649 7.616",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
LanguageIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LaptopIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6.984h-3.764a1.5 1.5 0 0 0-.67.159l-.578.289a.5.5 0 0 1-.224.052H7.236a.5.5 0 0 1-.224-.052l-.577-.29a1.5 1.5 0 0 0-.671-.158H2zm-1 6.984V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v6.984a1 1 0 0 1 1 1v.516a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-.516a1 1 0 0 1 1-1m0 1L5.764 12c.078 0 .154.002.224.037l.577.289a1.5 1.5 0 0 0 .671.158h1.528a1.5 1.5 0 0 0 .67-.158l.579-.289a.5.5 0 0 1 .223-.037L15 11.984v.516a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LaptopIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LaunchIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.736 9.5 6.5 12.264v1.532c0 1.289 1.518 1.978 2.488 1.129l1.988-1.74a1.5 1.5 0 0 0 .512-1.166l-.047-1.877a10.89 10.89 0 0 0 3.56-8.054V1h-1.702a10.12 10.12 0 0 0-7.655 3.5h-1.69a1.5 1.5 0 0 0-1.13.512l-1.749 2C.226 7.982.915 9.5 2.204 9.5zM7.5 13.796v-1.358a10.9 10.9 0 0 0 2.96-1.501l.028 1.107a.5.5 0 0 1-.17.388l-1.989 1.74a.5.5 0 0 1-.829-.376M3.523 8.5a10.1 10.1 0 0 1 1.358-3h-.927a.5.5 0 0 0-.377.17l-1.75 2a.5.5 0 0 0 .377.83zM14 2h-.7a9.1 9.1 0 0 0-3.046.522l3.096 3.096a9.9 9.9 0 0 0 .65-3.53zm-1.063 4.551-.034.034L9.26 2.942a9.12 9.12 0 0 0-4.788 5.88l2.678 2.679a9.9 9.9 0 0 0 5.787-4.95",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "m5.698 12.626-2.326-2.325A4.32 4.32 0 0 0 1 14.158V15h.841q.08 0 .16-.003a4.32 4.32 0 0 0 3.697-2.37m-3.694 1.37c.046-.953.5-1.831 1.229-2.42l1.19 1.19a3.32 3.32 0 0 1-2.419 1.23",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LaunchIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LayersIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.3 1.282a1.01 1.01 0 0 1 1.4 0l6.01 5.038a.943.943 0 0 1 0 1.36L8.7 12.72a1.01 1.01 0 0 1-1.4 0l-6-5.039a.943.943 0 0 1 0-1.36zm.7.68L14.01 7 8 12.039 2 7z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 10.633c-.518-.503-.676-.991-.5-1.633l5.8 4.757a1.01 1.01 0 0 0 1.4 0L14.5 9c.176.642.028 1.13-.49 1.633L9.4 14.437a2.02 2.02 0 0 1-2.8 0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LayersIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LayoutsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2H2v7h4zM2 1a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM14 7H9v7h5zM9 6a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zM14 2H9v2h5zM9 1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM6 12H2v2h4zm-4-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LayoutsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LegendIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.03 8a4 4 0 0 0 7.94 0h2.53a.5.5 0 0 0 0-1h-2.53a4 4 0 0 0-7.94 0h-2.53a.5.5 0 0 0 0 1zM8 10.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LegendIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LicenseKeyIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M11.428 5.714a1.143 1.143 0 1 0 0-2.285 1.143 1.143 0 0 0 0 2.285",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.904 6.532.218 12.218a.5.5 0 0 0-.147.353v2.858a.5.5 0 0 0 .5.5H4a.5.5 0 0 0 .5-.5v-1.786h1.786a.5.5 0 0 0 .5-.5v-1.786H8a.5.5 0 0 0 .353-.146l1.115-1.115a5.143 5.143 0 1 0-3.564-3.564M15 5.142A4.143 4.143 0 0 1 9.22 8.95L8.15 10l-.357.357H5.786v2.286H3.5v2.286H1.07v-2.15l4.78-4.78 1.197-1.225A4.143 4.143 0 1 1 15 5.143",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
LicenseKeyIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LikeFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.412 1c1.107 0 1.94.807 2.318 1.906l.041.149q.03.148.03.29l-.006.14-.204 2.181h3.418a1.666 1.666 0 0 1 1.375 2.607l.049.035.108.091c.603.559.64 1.488.112 2.092l-.112.116a1.5 1.5 0 0 1-.219.167c.312.557.243 1.27-.21 1.754l-.124.117a1.5 1.5 0 0 1-.38.236c.169.37.182.79.035 1.166l-.08.17a1.5 1.5 0 0 1-1.315.783H7.673c-.614 0-1.716-.162-2.248-.469l-.147-.085a.5.5 0 0 1-.257-.308l-.005-.019a1 1 0 0 1-.011-.072l-.003-.027L5 14V5.5l.002-.02q0-.028.006-.054.002-.023.008-.044a.5.5 0 0 1 .033-.095l.008-.018 1.31-1.555.026-.058.018-.06.515-2.21.026-.081A.5.5 0 0 1 7.412 1M1 6a1 1 0 0 1 1-1h1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LikeFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LikeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.927 1.387A.5.5 0 0 1 7.414 1c1.107 0 1.94.808 2.319 1.907.068.197.081.396.064.577l-.205 2.182h3.42a1.666 1.666 0 0 1 1.376 2.608 1.505 1.505 0 0 1-.062 2.5 1.5 1.5 0 0 1-.713 2.107A1.498 1.498 0 0 1 12.25 15H7.528c-.505 0-1.003-.11-1.462-.32l-1.083-.497A1 1 0 0 1 4 15H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h2a1 1 0 0 1 .996.908L6.36 3.709a.5.5 0 0 0 .062-.15zM5 7.733v5.357l1.484.682A2.5 2.5 0 0 0 7.528 14h4.722a.498.498 0 0 0 .437-.736l-.024-.044a.41.41 0 0 0-.351-.216H11.8v-1h1.218a.498.498 0 0 0 .012-.996h-1.244v-1h1.735a.504.504 0 0 0 0-1.009h-1.735v-1h1.225a.667.667 0 0 0 0-1.333H9.043a.5.5 0 0 1-.498-.547l.256-2.728a.4.4 0 0 0-.014-.158C8.566 2.59 8.2 2.21 7.796 2.066l-.4 1.72a1.5 1.5 0 0 1-.187.45l-2.084 3.36A.5.5 0 0 1 5 7.733M2 6h2v8H2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LikeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LinkBrokenIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M6 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 6 0M1.146 1.146a.5.5 0 0 1 .708 0l1.5 1.5a.5.5 0 1 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708M0 6a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2A.5.5 0 0 1 0 6M13.611 2.923a3.19 3.19 0 0 0-4.513 0L7.956 4.065a.5.5 0 0 0 .707.707L9.805 3.63a2.192 2.192 0 0 1 3.1 3.1L10.62 9.012a2.19 2.19 0 0 1-3.095.004.499.499 0 0 0-.868.338.5.5 0 0 0 .157.365 3.19 3.19 0 0 0 4.514 0l2.283-2.284a3.19 3.19 0 0 0 0-4.513",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.509 14.027a3.19 3.19 0 0 0 4.513 0l1.142-1.142a.5.5 0 0 0-.707-.707L6.315 13.32a2.192 2.192 0 1 1-3.1-3.1L5.5 7.936a2.19 2.19 0 0 1 3.06-.038.499.499 0 1 0 .744-.667l.002-.002a3.19 3.19 0 0 0-4.514 0L2.51 9.513a3.19 3.19 0 0 0 0 4.514",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LinkBrokenIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LinkIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9.098 2.923a3.192 3.192 0 0 1 4.513 4.513L11.328 9.72a3.19 3.19 0 0 1-4.514 0 .5.5 0 1 1 .711-.703c.856.852 2.24.85 3.095-.004l2.284-2.284a2.192 2.192 0 0 0-3.1-3.1L8.664 4.773a.5.5 0 1 1-.707-.707z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.022 14.027A3.192 3.192 0 1 1 2.51 9.513L4.792 7.23a3.19 3.19 0 0 1 4.514 0l-.002.002a.5.5 0 1 1-.745.667 2.19 2.19 0 0 0-3.06.039L3.217 10.22a2.192 2.192 0 1 0 3.099 3.1l1.142-1.142a.5.5 0 1 1 .707.707z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LinkIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ListViewSlimIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2.5 3a.5.5 0 0 0 0 1h11a.5.5 0 0 0 0-1zM2.5 9a.5.5 0 0 0 0 1h11a.5.5 0 0 0 0-1zM2 12.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2.5 6a.5.5 0 0 0 0 1h11a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ListViewSlimIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ListViewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2 4.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 8.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2.5 12a.5.5 0 0 0 0 1h11a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ListViewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ListIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 4.51c.552 0 1-.45 1-1.005S3.552 2.5 3 2.5s-1 .45-1 1.005.448 1.004 1 1.004M3 8.505c.552 0 1-.45 1-1.005s-.448-1.005-1-1.005-1 .45-1 1.005.448 1.005 1 1.005M4 11.495c0 .555-.448 1.005-1 1.005s-1-.45-1-1.005.448-1.004 1-1.004 1 .45 1 1.004M5.5 3.005a.5.5 0 1 0 0 1h8a.5.5 0 0 0 0-1zM5 7.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1h-8a.5.5 0 0 1-.5-.5M5.5 10.995a.5.5 0 0 0 0 1h8a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ListIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LocationIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0M9 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 6c0 3.158-3.74 7.562-5.314 9.277a.924.924 0 0 1-1.372 0C5.74 13.562 2 9.157 2 6a6 6 0 1 1 12 0m-1 0c0 1.258-.778 2.932-1.9 4.628-1.067 1.612-2.324 3.069-3.1 3.917-.776-.848-2.033-2.305-3.1-3.917C3.778 8.932 3 7.258 3 6a5 5 0 0 1 10 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LocationIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LockOpenIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8 12a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 8 12",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4.5A3.5 3.5 0 0 1 7.5 1h1A3.5 3.5 0 0 1 12 4.5a.5.5 0 0 0 1 0A4.5 4.5 0 0 0 8.5 0h-1A4.5 4.5 0 0 0 3 4.5V7a1 1 0 0 0-1 1v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8a1 1 0 0 0-1-1H4zM13 8H3v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LockOpenIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const LockIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.5 12.5a.5.5 0 0 0-1 0v1a.5.5 0 0 0 1 0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5v2a1 1 0 0 0-1 1v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8a1 1 0 0 0-1-1V5A5 5 0 0 0 3 5m9 2V5a4 4 0 0 0-8 0v2zm-9 7V8h10v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
LockIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ManageSupportingFilesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M4 .014a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.681a2 2 0 0 0-.4-1.2l-2-2.667a2 2 0 0 0-1.6-.8zm0 15h8a1 1 0 0 0 1-1V4.681a1 1 0 0 0-.2-.6l-2-2.667a1 1 0 0 0-.8-.4H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8.571 4H7.43l-.322 1.285a3 3 0 0 0-.42.177l-1.175-.704-.808.808.72 1.198q-.08.165-.139.343L4 7.43V8.57l1.285.322q.057.172.134.334l-.715 1.192.808.808 1.16-.696q.209.108.435.184L7.43 12H8.57l.322-1.285q.21-.07.407-.17l1.135.681.808-.808-.686-1.143q.1-.197.167-.41l1.287-.293.024-1.143-1.334-.362a3 3 0 0 0-.148-.35l.69-1.151-.808-.808-1.15.69a3 3 0 0 0-.392-.163zm1.143 4a1.714 1.714 0 1 1-3.428 0 1.714 1.714 0 0 1 3.428 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ManageSupportingFilesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ManualIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.204 2.043a3.96 3.96 0 0 0-2.126 1.115.5.5 0 1 1-.723-.691 4.96 4.96 0 0 1 2.688-1.41c1.223-.2 2.641.099 4.016 1.39a.5.5 0 0 1-.685.73C8.22 2.092 7.112 1.894 6.204 2.043M11.044 7.385q.128.118.223.268c.117-.027.224-.037.31-.038.281-.005.697.069 1.026.391.245.24.4.577.4.947v2.956c0 .643-.333 1.22-.634 1.611-.322.418-.744.8-1.172 1.053-.49.288-.981.383-1.432.413-.283.02-.613.015-.913.01l-.35-.004c-.409 0-.848-.004-1.25-.048-.392-.043-.854-.134-1.258-.372a5 5 0 0 1-.921-.725c-.256-.254-.566-.617-.732-1.028l-.893-1.676-.486-.841c-.537-.929.11-1.902.954-2.092a1.53 1.53 0 0 1 1.086.16V5.426l.001-.022a2 2 0 0 1 .031-.249c.021-.107.09-.413.334-.673.65-.689 1.699-.595 2.26 0 .148.157.217.326.244.396a1.93 1.93 0 0 1 .118.638v.83c.159-.039.309-.048.43-.044.315.01.732.12 1.039.426q.142.142.237.32a1.5 1.5 0 0 1 1.348.337m.959 4.524c0 .628-.7 1.44-1.314 1.802-.52.306-1.075.297-1.764.286q-.204-.005-.423-.005c-.822 0-1.556-.02-2-.281-.442-.26-1.075-.838-1.241-1.287l-.018-.04-.921-1.727-.495-.856c-.142-.246.009-.548.308-.615a.52.52 0 0 1 .454.113l.804.723c.149.134.359.134.508 0l.072-.09.029-.95V5.462s.003-.197.094-.293a.566.566 0 0 1 .804 0c.048.05.078.197.087.293l.002.017.001.038v3.298q0 .036.012.07c.052.162.275.302.46.302a.58.58 0 0 0 .406-.193.28.28 0 0 0 .076-.179V7.742c0-.014 0-.042.004-.075a.6.6 0 0 1 .042-.19L8 7.462c.174-.243.6-.177.753-.026a.33.33 0 0 1 .099.231v1.147a.4.4 0 0 0 .077.19c.077.104.2.182.33.182a.4.4 0 0 0 .213-.062.39.39 0 0 0 .194-.31v-.47900000000000004c.004-.103.037-.146.101-.217a.3.3 0 0 1 .085-.068.49.49 0 0 1 .512.068q.05.046.078.105.03.064.03.135v1.139c.012.181.179.325.383.325q.079-.001.148-.026a.35.35 0 0 0 .234-.318v-.525c0-.115.01-.148.081-.233a.3.3 0 0 1 .154-.089c.141-.038.326-.013.43.089.065.063.1.146.1.233z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ManualIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MarkReadIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9.4 5.984a.576.576 0 0 0-.815-.815L4.383 9.37 2.947 7.934a.576.576 0 1 0-.815.815L4.382 11zM8.852 11l-1.6-1.6.815-.814.785.784 4.201-4.201a.576.576 0 0 1 .815.815z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MarkReadIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MenuIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3 8.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3.5 12a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MenuIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MetadataEditIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "m12.89 7.57-1.15 1.22-3.81 3.69c-.06.06-.1.13-.13.22l-.73 2.54a.5.5 0 0 0 .13.49c.13.13.32.18.49.13l2.56-.73c.08-.02.16-.07.22-.13l4.91-4.89c.27-.26.5-.71.59-1.19.22-1.14-.88-2.13-1.98-1.91-.45.09-.84.28-1.1.54zm2.09 1.19c-.06.3-.24.6-.35.7l-.9.97-.69.71-3.2 3.08-1.56.44.45-1.55 4.84-4.81c.11-.1.34-.23.61-.28.45-.09.87.34.8.74",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7 11H2c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v4h1V2c0-1.1-.9-2-2-2H2C.9 0 0 .9 0 2v8c0 1.1.9 2 2 2h5v-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5.31 3.55c-.2-.2-.53-.2-.74 0L2.36 5.76c-.2.2-.2.53 0 .74l2.21 2.21c.2.2.53.2.74 0s.2-.53 0-.74L3.47 6.13l1.84-1.84c.2-.2.2-.53 0-.74M11.43 3.55c-.2-.2-.53-.2-.74 0-.2.2-.2.53 0 .74l1.84 1.84q.48-.285 1.05-.42l-2.15-2.15zM9.92 3.97a.52.52 0 0 0-.9-.52l-2.6 4.5a.52.52 0 0 0 .9.52z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
MetadataEditIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MetadataIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.994 7.125a.5.5 0 0 1 .34.651l-1.73 4.787a.499.499 0 0 1-.938-.338l1.73-4.787a.5.5 0 0 1 .598-.313M4.475 7.525a.5.5 0 0 1 .707.707L3.414 10l1.768 1.768a.5.5 0 0 1-.707.707L2 10zM10.812 7.525a.5.5 0 0 1 .707 0L13.994 10l-2.475 2.475a.5.5 0 1 1-.707-.707L12.579 10l-1.767-1.768a.5.5 0 0 1 0-.707",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zM1 6v7a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6zm1-4a1 1 0 0 0-1 1v2h14V3a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MetadataIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MoreCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M9 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M12 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
MoreCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MoreHorizontalIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M9 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M12 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MoreHorizontalIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MoreVerticalIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9 4a1 1 0 1 1-2 0 1 1 0 0 1 2 0M9 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0M8 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MoreVerticalIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MoveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M2 1h7a1 1 0 0 1 1 1h1a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2v-1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7 3a2 2 0 0 0-2 2v1.132q.13.112.233.25c.173.233.43.542.767.861V5a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v9a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-3.083a7.5 7.5 0 0 1-1-.598V14a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.423 6.985c.44.592 1.368 1.644 2.78 2.279 1.552.698 3.22.345 3.69.245l.075-.015-1.206-1.206c-.195-.195-.255-.509-.028-.736s.54-.167.736.029l2.473 2.473-2.466 2.483a.513.513 0 0 1-.719 0 .507.507 0 0 1 .006-.712l1.337-1.337c-.892.205-2.431.242-3.657-.08-1.961-.516-3.34-2.16-3.887-2.917a.457.457 0 0 1 .128-.649c.238-.16.567-.087.738.143",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
MoveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyAviatorIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.53.764a.498.498 0 0 1 .93 0l1.265 3.263H8.652l-.654-1.692L3.5 14.04l2.759-1.113q.12-.049.241-.09v1.07L2.481 15.53c-.28.113-.565-.156-.458-.434l.21-.544zM3.224 9.059h-.222A2 2 0 0 1 1 7.057h3.044zM4.453 6.059H2.002A2 2 0 0 1 0 4.057h5.273z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.143 6.571a2.571 2.571 0 1 1 5.143 0 2.571 2.571 0 0 1-5.143 0M11.714 10a4.286 4.286 0 0 0-4.285 4.286v.857c0 .473.383.857.857.857h6.857a.857.857 0 0 0 .857-.857v-.857A4.286 4.286 0 0 0 11.714 10",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MyAviatorIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyContributionsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8 3h1v1H8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 11a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1h1a2 2 0 0 0-2-2H3a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h3v1a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v5zm4 2a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10 11.707a.5.5 0 1 0 1 0V8.914l.646.793A.5.5 0 0 0 12.354 9L10.5 7 8.555 9a.5.5 0 1 0 .707.707L10 8.914z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MyContributionsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyInboxIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M3.429 4.257a.5.5 0 1 0-.858-.514L0 8l.429 1.257zM12.571 4.257a.5.5 0 0 1 .858-.514L16 8l-.429 1.257z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.52 9H1v5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V9h-2.52l-.699.874A3 3 0 0 1 9.44 11H6.56A3 3 0 0 1 4.22 9.874zM4 8H0v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8h-4l-1 1.25A2 2 0 0 1 9.44 10H6.56A2 2 0 0 1 5 9.25z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7 12h2v1H7zM8.3.5a.5.5 0 0 0-1 0v5.793l-1.646-2A.5.5 0 0 0 4.946 5L7.8 8.207 10.946 5a.5.5 0 1 0-.707-.707l-1.939 2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
MyInboxIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyTaskCompleteIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 1a1 1 0 0 0-1 1h2a1 1 0 0 0-1-1m2 1a2 2 0 1 0-4 0H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-2m1 1H5v2h6zM4 3v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.106 8.146a.5.5 0 0 1 0 .708l-4.03 4.03-1.93-1.93a.5.5 0 1 1 .708-.707l1.222 1.222 3.323-3.323a.5.5 0 0 1 .707 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MyTaskCompleteIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyTaskRejectIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 1a1 1 0 0 0-1 1h2a1 1 0 0 0-1-1m2 1a2 2 0 1 0-4 0H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-2m1 1H5v2h6zM4 3v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.646 12.854a.5.5 0 0 0 .708-.708L8.707 10.5l1.647-1.646a.5.5 0 0 0-.708-.708L8 9.793 6.354 8.146a.5.5 0 1 0-.708.708L7.293 10.5l-1.647 1.646a.5.5 0 0 0 .708.708L8 11.207z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MyTaskRejectIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyTaskIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 1a1 1 0 0 0-1 1h2a1 1 0 0 0-1-1m2 1a2 2 0 1 0-4 0H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-2m1 1H5v2h6zM4 3v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 7.972a.5.5 0 1 0 0 1h4a.5.5 0 0 0 0-1zM4.5 10.472a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5M4.5 12.472a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MyTaskIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyWorkIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 5h12v8a1 1 0 0 1-1 1H8v1h5a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-2V.5a.5.5 0 0 0-1 0V1H6V.5a.5.5 0 0 0-1 0V1H3a2 2 0 0 0-2 2v10.003V6h1zm9-3h2a1 1 0 0 1 1 1v1H2V3a1 1 0 0 1 1-1h2v.5a.5.5 0 0 0 1 0V2h4v.5a.5.5 0 0 0 1 0z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 10v1h3.5a.5.5 0 0 0 0-1zM11.5 8H7V7h4.5a.5.5 0 0 1 0 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 9c0 .714-.374 1.34-.936 1.694A3 3 0 0 1 7 13.5v.375C7 14.496 6.496 15 5.875 15h-3.75A1.125 1.125 0 0 1 1 13.875V13.5c0-1.282.805-2.377 1.936-2.806A2 2 0 1 1 6 9m-2 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2m2 3.875V13.5a2 2 0 1 0-4 0v.375c0 .069.056.125.125.125h3.75A.125.125 0 0 0 6 13.875",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
MyWorkIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const MyWorkspaceIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5.709 3.998A5.5 5.5 0 0 0 2.5 9h-1a6.5 6.5 0 0 1 3.791-5.91zM13.5 9a5.5 5.5 0 0 0-2.459-4.584l.554-.832a6.5 6.5 0 0 1 2.9 5.656l-.999-.037zM8 14.5c.926 0 1.798-.229 2.563-.632l.467.884A6.5 6.5 0 0 1 8 15.5a6.5 6.5 0 0 1-2.928-.695l.451-.893A5.5 5.5 0 0 0 8 14.5M8 10.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5M8.5 4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5M2.5 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5M13.5 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
MyWorkspaceIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const NodeLocationIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 4.2a3.8 3.8 0 1 0 .001 7.601A3.8 3.8 0 0 0 8 4.2M3 8a5 5 0 1 1 10.001.001A5 5 0 0 1 3 8",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.14-7-7 3.14-7 7-7m0-1a8 8 0 1 0 0 16A8 8 0 0 0 8 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
NodeLocationIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const NotesAddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14 8h-1V3a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h5v1H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2zM12.5 15a.5.5 0 0 1-.5-.5V13h-1.5a.5.5 0 0 1 0-1H12v-1.5a.5.5 0 0 1 1 0V12h1.5a.5.5 0 0 1 0 1H13v1.5a.5.5 0 0 1-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4 4a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zM3.5 6.5A.5.5 0 0 1 4 6h2a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5M4 9a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
NotesAddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const NotesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14 3v3.018a3.534 3.534 0 0 0-1 .288V3a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h3.674l-.288 1H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.5 4.5A.5.5 0 0 1 4 4h5a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5M3.5 6.5A.5.5 0 0 1 4 6h2a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5M7.5 9.5A.5.5 0 0 0 7 9H4a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "m12.889 7.574-1.152 1.224-3.81 3.692a.5.5 0 0 0-.128.216l-.732 2.545a.5.5 0 0 0 .129.49c.129.129.318.177.494.127l2.56-.727a.5.5 0 0 0 .218-.127l4.914-4.886c.265-.263.501-.715.59-1.187.216-1.141-.88-2.129-1.982-1.91-.455.09-.839.282-1.101.543m2.094 1.182a1.55 1.55 0 0 1-.347.698l-.897.969-.695.712-3.196 3.08-1.564.444.447-1.554 4.843-4.813.005-.006c.113-.097.34-.221.608-.274.446-.089.872.343.796.744",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
NotesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const NotificationIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 0c-.579 0-1.048.448-1.048 1v.032C4.474 1.3 2.5 3.221 2.32 5.647l-.305 4.115a2 2 0 0 1-.093.465l-.824 2.47c-.215.645.29 1.303.999 1.303h3.336q.05.235.146.457c.132.303.325.579.568.81.244.233.532.417.85.543a2.73 2.73 0 0 0 2.006 0c.318-.126.606-.31.85-.542A2.5 2.5 0 0 0 10.567 14h3.336c.71 0 1.214-.658.999-1.303l-.824-2.47a2 2 0 0 1-.093-.465l-.305-4.115C13.5 3.221 11.526 1.3 9.048 1.032V1c0-.552-.47-1-1.048-1m5.903 13H2.097l.823-2.47q.114-.34.14-.697l.305-4.115C3.522 3.623 5.348 2 7.548 2h.906c2.2 0 4.026 1.623 4.182 3.718l.305 4.115q.026.357.14.698zm-4.42 1-.03.074a1.5 1.5 0 0 1-.341.487c-.146.139-.32.25-.51.325a1.64 1.64 0 0 1-1.204 0 1.6 1.6 0 0 1-.51-.325 1.5 1.5 0 0 1-.37-.561z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
NotificationIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const NumberIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 3H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M11.738 11q-.7 0-1.202-.355-.5-.357-.77-1.03Q9.5 8.942 9.5 7.99q.003-.951.27-1.617.27-.67.768-1.021.503-.352 1.2-.352.699 0 1.2.352.502.351.77 1.021.269.669.269 1.617 0 .954-.27 1.628-.267.673-.769 1.027-.5.355-1.2.355m0-.888q.545 0 .86-.536.318-.54.318-1.586 0-.692-.145-1.163-.145-.47-.409-.71a.9.9 0 0 0-.624-.24q-.54 0-.856.539-.315.536-.318 1.574-.003.695.139 1.169.144.474.408.715a.9.9 0 0 0 .627.238M6.238 11q-.7 0-1.203-.355-.499-.357-.768-1.03Q4 8.942 4 7.99q.003-.951.27-1.617.27-.67.768-1.021Q5.541 5 6.238 5q.699 0 1.2.352.502.351.77 1.021.269.669.269 1.617 0 .954-.27 1.628-.267.673-.769 1.027-.5.355-1.2.355m0-.888q.545 0 .86-.536.318-.54.318-1.586 0-.692-.145-1.163-.145-.47-.409-.71a.9.9 0 0 0-.624-.24q-.541 0-.856.539-.315.536-.318 1.574-.003.695.139 1.169.144.474.408.715a.9.9 0 0 0 .627.238M3.066 10.952a.6.6 0 0 1-.443-.181.59.59 0 0 1-.181-.443.58.58 0 0 1 .181-.437.6.6 0 0 1 .443-.181q.248 0 .434.181a.6.6 0 0 1 .1.752.65.65 0 0 1-.228.227.6.6 0 0 1-.306.082",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
NumberIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const OfficeWebIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 10.707A.5.5 0 0 1 11 10l3.293-3H12.5a.5.5 0 0 1 0-1H16v3.5a.5.5 0 0 1-1 0V7.707l-3.293 3a.5.5 0 0 1-.707 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "m7 1 .021.006 4.808 1.127A1.5 1.5 0 0 1 13 3.596V5h-1V3.596a.5.5 0 0 0-.39-.488L9 2.57v10.861l2.61-.546a.5.5 0 0 0 .39-.488V12h1v.397a1.5 1.5 0 0 1-1.168 1.463l-4.744 1.075-.022.006-.002.001a1.41 1.41 0 0 1-1.094-.13l-2.602-1.49c-.646-.381-.368-1.314.38-1.322H8V3.108L4.406 4.835a1.005 1.005 0 0 0-.658.949v3.432a1.01 1.01 0 0 1-.517.887l-1.145.625A.735.735 0 0 1 1 10.073V4.856a1.42 1.42 0 0 1 .705-1.227l4.18-2.492A1.46 1.46 0 0 1 7 1",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
OfficeWebIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const OrganizationChartIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 1a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H8.5v2.5H14a.5.5 0 0 1 .5.5v3h.5a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h.5V8.5h-5V11H9a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h.5V8.5h-5V11H3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h.5V8a.5.5 0 0 1 .5-.5h5.5V5H6a1 1 0 0 1-1-1zm1 0h4v3H6zM1 12v2h2v-2zm12 0v2h2v-2zm-4 0H7v2h2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
OrganizationChartIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PagesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 2A1.5 1.5 0 0 0 4 3.5v11A1.5 1.5 0 0 0 5.5 16h8a1.5 1.5 0 0 0 1.5-1.5V13h-1v1.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9v3.5a.5.5 0 0 0 .5.5H14v6h1V6.633a2 2 0 0 0-.447-1.26L11.605 2.74A2 2 0 0 0 10.052 2zm5.328 1.37L13.775 6H10V3h.052a1 1 0 0 1 .776.37",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v10a2 2 0 0 0 1 1.732V2a1 1 0 0 1 1-1h7c-.378-.504-1.37-1-2-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PagesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PanIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        d: "m8 .793 1.854 1.853a.5.5 0 1 1-.707.707L8.5 2.707V7.5h4.793l-.646-.647a.5.5 0 0 1 .707-.707L15.207 8l-1.853 1.853a.5.5 0 1 1-.707-.707l.646-.646H8.5v4.793l.646-.647a.5.5 0 0 1 .708.707L8 15.207l-1.854-1.854a.5.5 0 1 1 .708-.707l.646.647V8.5H2.707l.647.646a.5.5 0 1 1-.707.707L.793 8l1.854-1.854a.5.5 0 0 1 .707.707l-.647.647H7.5V2.707l-.646.646a.5.5 0 0 1-.707-.707z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PanIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PanelLeftIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 3v10h1V3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 2H2a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5.694 6.143a.5.5 0 1 1 .7.714L5.226 8H9.5a.5.5 0 0 1 0 1H5.226l1.168 1.143a.5.5 0 0 1-.7.714L3.285 8.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PanelLeftIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PanelRightIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 3v10h1V3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 2H2a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.306 6.143a.5.5 0 1 0-.7.714L7.774 8H3.5a.5.5 0 0 0 0 1h4.274l-1.168 1.143a.5.5 0 0 0 .7.714L9.715 8.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PanelRightIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PasteIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 15v-1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3a1 1 0 0 1 1 1v3h1V4a2 2 0 0 0-2-2h-2a2 2 0 1 0-4 0H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2zm1 0a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1zM9 2a1 1 0 0 0-2 0zm0 7v6h5V9zM5 3v2h6V3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PasteIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PauseCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5.75 5.5a.5.5 0 0 1 .5-.5h.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-.5.5h-.5a.5.5 0 0 1-.5-.5zM9.25 5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h.5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PauseCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PauseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5.75 4a.75.75 0 0 0-.75.75v6.5c0 .414.336.75.75.75h.5a.75.75 0 0 0 .75-.75v-6.5A.75.75 0 0 0 6.25 4zM9.75 4a.75.75 0 0 0-.75.75v6.5c0 .414.336.75.75.75h.5a.75.75 0 0 0 .75-.75v-6.5a.75.75 0 0 0-.75-.75z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PauseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PermissionsManageIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 9h-1l-.281 1.124q-.191.063-.368.155l-1.028-.616-.707.707.63 1.049a3 3 0 0 0-.122.3L9 12v1l1.124.281q.05.15.118.293l-.626 1.042.707.707 1.015-.609q.183.096.38.162L12 16h1l.281-1.124q.185-.06.356-.149l.994.596.707-.707-.6-1q.086-.173.145-.359L16.01 13l.02-1-1.167-.317a3 3 0 0 0-.129-.306l.604-1.007-.707-.707-1.006.604a2.5 2.5 0 0 0-.344-.143zm1 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10 6a1 1 0 0 1 1 1v1h-1V7H2v5a1 1 0 0 0 1 1h5v1H3a2 2 0 0 1-2-2V7a1 1 0 0 1 1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M6 10a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 6 10",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 6V4a2 2 0 1 0-4 0v2zM6 1a3 3 0 0 0-3 3v3h6V4a3 3 0 0 0-3-3",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PermissionsManageIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PinFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.932 9.007 10.562 3h.729a.5.5 0 1 0 0-1h-7.5a.5.5 0 0 0 0 1h.647l-.37 6.007A2.25 2.25 0 0 0 2 11.25V13h5.04v3h1v-3H13v-1.75a2.25 2.25 0 0 0-2.068-2.243",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PinFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PinIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "m10.321 10.27 3.986-4.509.516.516a.5.5 0 1 0 .707-.707L10.227.266a.5.5 0 1 0-.708.707l.458.458-4.51 3.986a2.25 2.25 0 0 0-3.048.124L1.182 6.778l3.564 3.565-2.828 2.828a.5.5 0 1 0 .707.707l2.829-2.828 3.506 3.506 1.238-1.237a2.25 2.25 0 0 0 .123-3.049m-1.36 2.872.53-.53a1.25 1.25 0 0 0 0-1.768l-.53-.53 4.644-5.255-2.926-2.926-5.254 4.645-.53-.53a1.25 1.25 0 0 0-1.768 0l-.53.53z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PinIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PlayCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M6.757 5.454a.5.5 0 0 0-.757.43v4.233a.5.5 0 0 0 .757.429l3.528-2.117a.5.5 0 0 0 0-.858z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PlayCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PlayIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5 10.696V5.304a1 1 0 0 1 1.53-.848l4.313 2.696a1 1 0 0 1 0 1.696L6.53 11.544A1 1 0 0 1 5 10.696",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PlayIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PodcastIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M10 4.182c0-.507-.161-.995-.453-1.383l-.133-.16a1.94 1.94 0 0 0-1.217-.628L8 2c-.53 0-1.039.23-1.414.639l-.133.16A2.3 2.3 0 0 0 6 4.182v3.636l.01.216c.045.5.248.97.576 1.327.328.358.759.579 1.217.628L8 10a1.9 1.9 0 0 0 1.268-.494l.146-.145a2.27 2.27 0 0 0 .576-1.327l.01-.216zm1 3.636c0 .817-.297 1.617-.849 2.22A2.92 2.92 0 0 1 8 11a2.92 2.92 0 0 1-2.151-.963A3.3 3.3 0 0 1 5 7.818V4.182c0-.817.297-1.617.849-2.22A2.92 2.92 0 0 1 8 1l.154.004a2.93 2.93 0 0 1 1.997.959c.552.602.849 1.402.849 2.219zM10.667 14.5l.101.01a.5.5 0 0 1 0 .98l-.102.01H5.333a.5.5 0 0 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.5 15v-2.5a.5.5 0 0 1 .99-.1l.01.1V15l-.01.1a.5.5 0 0 1-.98 0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3 7a.5.5 0 0 1 1 0c0 1.673.416 2.922 1.099 3.743C5.772 11.553 6.749 12 8 12s2.228-.447 2.901-1.257C11.584 9.922 12 8.673 12 7a.5.5 0 0 1 1 0c0 1.827-.454 3.328-1.33 4.382C10.784 12.447 9.51 13 8 13s-2.784-.553-3.67-1.618C3.454 10.328 3 8.827 3 7",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PodcastIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PopOverIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M14 1H6a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1M6 0a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM3 2H2a2 2 0 0 0-2 2v1h1V4a1 1 0 0 1 1-1h1zM0 13v1a2 2 0 0 0 2 2h1v-1H2a1 1 0 0 1-1-1v-1zm0-2.5h1v-3H0zM14 13h-1v1a1 1 0 0 1-1 1h-1v1h1a2 2 0 0 0 2-2zm-5.5 3v-1h-3v1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PopOverIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PowerRestartIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.5 1a.5.5 0 0 0-1 0v5.997a.5.5 0 0 0 1 0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.536 6.02A6 6 0 0 1 5.227 3.18a.5.5 0 1 0-.462-.887 7 7 0 1 0 6.518.025.5.5 0 0 0-.47.883 6 6 0 1 1-8.277 2.82",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.5 2.5A.5.5 0 0 1 2 2h4v4a.5.5 0 0 1-1 0V3H2a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PowerRestartIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PowerIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.5 1a.5.5 0 0 0-1 0v5.997a.5.5 0 0 0 1 0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.536 6.02A6 6 0 0 1 5.227 3.18a.5.5 0 1 0-.462-.887 7 7 0 1 0 6.518.025.5.5 0 0 0-.47.883 6 6 0 1 1-8.277 2.82",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PowerIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PreferencesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5.5 2a.5.5 0 0 0-.5.5V3H2.5a.5.5 0 0 0 0 1H5v.5a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5V4h6.5a.5.5 0 0 0 0-1H7v-.5a.5.5 0 0 0-.5-.5zM4.5 12a.5.5 0 0 0-.5.5v.5H2.5a.5.5 0 0 0 0 1H4v.5a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5V14h7.5a.5.5 0 0 0 0-1H6v-.5a.5.5 0 0 0-.5-.5zM10 7.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5V8h1.5a.5.5 0 0 1 0 1H12v.5a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5V9H2.5a.5.5 0 0 1 0-1H10z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PreferencesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PrintIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M11 7.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4V1a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v3h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2v1a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-1H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2zm1-3h6v3H5zm0 14h6v-3H5zm7-2v-1h.5a.5.5 0 0 0 0-1h-9a.5.5 0 0 0 0 1H4v1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PrintIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ProjectIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.622.76a.93.93 0 0 1 .756 0l6.046 2.696c.336.15.553.485.553.854v7.38a.94.94 0 0 1-.553.854L8.378 15.24a.93.93 0 0 1-.756.001l-6.046-2.696a.94.94 0 0 1-.553-.853V4.31c0-.37.217-.704.553-.854zM2.021 11.648 7.5 14.09V7.324L2.02 4.89zM8.5 7.324v6.766l5.48-2.442v-6.76zM2.646 4.072 8 6.452l5.352-2.38L8 1.686z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ProjectIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PropertiesViewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 2H3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1M3 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7 4.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5M5 7.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M7 10.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PropertiesViewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PropertiesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M9.75 3.432a1.11 1.11 0 1 1-2.219 0 1.11 1.11 0 0 1 2.219 0m-3.277 9.07c-.28-.308-.43-.59-.393-1.155.027-.416.221-1.733.376-2.787.056-.38.107-.727.143-.984.137-.969.142-1.096.142-1.096a.33.33 0 0 1 .058-.15c.068-.092.185-.166.435-.238.251-.073.712-.092 1.384 0l.092.008-.022.09a241 241 0 0 1-.742 3.076c-.111.438-.184.727-.206.83l-.043.201a7 7 0 0 0-.108.56.6.6 0 0 0 .044.363.41.41 0 0 0 .268.205.65.65 0 0 0 .376-.003c.149-.046.325-.155.511-.386.053-.075.095-.137.149-.22l.027-.041.05.006h.003c.04.005.248.028.571.183.218.104.31.208.346.288.032.074.002.144-.02.184-.09.157-.372.632-.728.972a2.06 2.06 0 0 1-1.546.597c-.582-.02-.876-.191-1.167-.503",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
PropertiesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PublishClearIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M14.991 2a.5.5 0 1 0-1 0v8h1zM11.96 7.5l-3.1-3.345a.5.5 0 1 0-.724.69L10.102 7H1.495a.5.5 0 0 0 0 1h8.606l-1.966 2.155a.5.5 0 1 0 .724.69z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M15.146 15.854a.5.5 0 0 0 .708-.708L14.207 13.5l1.647-1.646a.5.5 0 0 0-.708-.708L13.5 12.793l-1.646-1.647a.5.5 0 0 0-.708.708l1.647 1.646-1.647 1.646a.5.5 0 0 0 .708.708l1.646-1.647z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PublishClearIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const PublishIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.491 1.5a.5.5 0 0 1 .5.5v12a.5.5 0 1 1-1 0V2a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m11.96 7.5-3.1-3.345a.5.5 0 1 0-.724.69L10.102 7H1.495a.5.5 0 0 0 0 1h8.606l-1.966 2.155a.5.5 0 1 0 .724.69z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
PublishIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RadioGroupIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12m0 1A7 7 0 1 0 8 1a7 7 0 0 0 0 14",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("circle", {
        cx: "8",
        cy: "8",
        r: "4",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RadioGroupIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RecentIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M8 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.14-7-7 3.14-7 7-7m0-1a8 8 0 1 0 0 16A8 8 0 0 0 8 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.5 3.5A.5.5 0 0 1 8 4v4l2.354 2.146a.5.5 0 0 1-.708.708L7 8.5V4a.5.5 0 0 1 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
RecentIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RedoIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M13.617 5.148C11.964 2.43 8.752 1.17 5.594 2.59a6.196 6.196 0 0 0 .478 11.44.5.5 0 1 1-.345.938 7.2 7.2 0 0 1-4.047-3.714c-1.687-3.606-.122-7.89 3.493-9.571l.006-.003C8.564.157 12.004 1.313 14 3.938V1.994a.5.5 0 1 1 1 0v4.154h-4.185a.5.5 0 1 1 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RedoIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RefreshIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.924 2C11.285 2 14 4.692 14 8s-2.715 6-6.076 6a6.09 6.09 0 0 1-5.209-2.91.5.5 0 1 0-.854.52A7.09 7.09 0 0 0 7.924 15C11.827 15 15 11.871 15 8s-3.173-7-7.076-7A7.09 7.09 0 0 0 2 4.171V1.5a.5.5 0 0 0-1 0V6h4.5a.5.5 0 0 0 0-1H2.661a6.09 6.09 0 0 1 5.263-3",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RefreshIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RelatedIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9 2H2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1h1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v2h-1V3a1 1 0 0 0-1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M14 7H7a1 1 0 0 0-1 1H5a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-2h1v2a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RelatedIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RemoveCircleFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.25a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
RemoveCircleFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RemoveCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M4.5 7.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
RemoveCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RemoveSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M13 8.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1 0-1h9a.5.5 0 0 1 .5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RemoveSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RemoveXsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M12 8.5c0 .276-.179.5-.4.5H4.4c-.221 0-.4-.224-.4-.5s.179-.5.4-.5h7.2c.221 0 .4.224.4.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RemoveXsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RemoveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14 8.5c0 .276-.21.5-.47.5H1.47C1.21 9 1 8.776 1 8.5s.21-.5.47-.5h12.06c.26 0 .47.224.47.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RemoveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RenameIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M12 2.5a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0 0 1h.5v10h-.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1H11V3h.5a.5.5 0 0 0 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 4h7v1H2a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h7v1H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2M14 11h-2v1h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-2v1h2a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RenameIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ReplyIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m3.707 9 2.147-2.146a.5.5 0 1 0-.708-.708L1.681 9.612l3.477 3.253a.5.5 0 1 0 .684-.73L3.559 10H10.5A3.5 3.5 0 0 0 14 6.5v-3a.5.5 0 0 0-1 0v3A2.5 2.5 0 0 1 10.5 9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ReplyIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ResizeHandleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m7.857 13.854 6.017-6.009-.707-.707-6.016 6.008zM11.853 14.85l3.005-3.008-.708-.707-3.005 3.008z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ResizeHandleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RestoreIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M13 5h1v8.321c0 .947-.768 1.715-1.714 1.715H6.714A1.714 1.714 0 0 1 5 13.32V7h1v6.321c0 .474.24.679.714.679h5.572c.473 0 .714-.205.714-.679z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.433.197a.957.957 0 0 0-1.307.35l-.593 1.027L6.02.124a.529.529 0 1 0-.528.915l9.65 5.572a.529.529 0 1 0 .528-.916l-2.511-1.45.593-1.026a.957.957 0 0 0-.35-1.308zm-.985 1.906.543-.94 2.796 1.614-.543.94z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.116 1.15a.5.5 0 0 0-.707-.007L1 3.5l2.41 2.357a.5.5 0 0 0 .699-.714L2.94 4h3.274c.829 0 1.77.68 1.77 1.508v3c0 .276.239.492.515.492a.48.48 0 0 0 .484-.492v-3C8.984 4.128 7.596 3 6.215 3H2.941l1.168-1.143a.5.5 0 0 0 .007-.707",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RestoreIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RotateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.385.616a.501.501 0 0 1 .708.707l-.71.708q.305-.03.617-.03a6 6 0 0 1 3.27 11.03.5.5 0 1 1-.546-.838 5 5 0 0 0-4.116-8.997l1.501 1.502a.5.5 0 1 1-.707.707L5 3.002z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.647 4.333a.5.5 0 0 1 .707 0l2.829 2.83a.5.5 0 0 1 0 .706l-2.829 2.828a.5.5 0 0 1-.707 0L.82 7.87a.5.5 0 0 1 0-.707zM1.88 7.516 4 9.636l2.122-2.12-2.121-2.121z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RotateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const RsiViewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 8h-.5A1.5 1.5 0 0 0 0 9.5v5A1.5 1.5 0 0 0 1.5 16h7a1.5 1.5 0 0 0 1.5-1.5v-5A1.5 1.5 0 0 0 8.5 8H8v-.5a.5.5 0 0 0-1 0V8H3v-.5a.5.5 0 0 0-1 0zm7 6.5v-5a.5.5 0 0 0-.5-.5H8a.5.5 0 0 1-1 0H3a.5.5 0 0 1-1 0h-.5a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.5 11H1v-1h8.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 0a2 2 0 0 0-2 2v3h1V2a1 1 0 0 1 1-1h4v4.2a.8.8 0 0 0 .8.8H13v8a1 1 0 0 1-1 1h-1v1h1a2 2 0 0 0 2-2V5.702a2.5 2.5 0 0 0-.548-1.562l-1.557-1.946L11 1a2.5 2.5 0 0 0-2-1zm8.826 5a1.5 1.5 0 0 0-.155-.235l-1.566-1.959L10.2 1.6A1.5 1.5 0 0 0 9 1v4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
RsiViewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SaveAsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.5 4a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 9a.5.5 0 0 0-.5.5V14H3a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v2.5A1.5 1.5 0 0 0 6.5 6h3A1.5 1.5 0 0 0 11 4.5V2h.574L14 4.53V7h1V4.53a1 1 0 0 0-.278-.693l-2.427-2.53A1 1 0 0 0 11.574 1H3a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4v-1H5v-4h6V9zM6 4.5V2h4v2.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "m13.103 8.567.025-.026c.211-.212.535-.39.877-.485.573-.16 1.132.041 1.502.395s.597.908.44 1.493c-.096.36-.284.702-.5.918l-4.334 4.34a.5.5 0 0 1-.217.128l-2.259.646a.5.5 0 0 1-.618-.618l.646-2.26a.5.5 0 0 1 .127-.216zm1.171.452a.57.57 0 0 1 .542.155c.154.147.212.338.166.51a1.15 1.15 0 0 1-.26.49l-4.225 4.23-1.27.363.364-1.27 4.262-4.266.004-.004c.076-.065.226-.154.417-.208",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SaveAsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SaveLayoutTemplateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 3.5A2.5 2.5 0 0 1 2.5 1h8A2.5 2.5 0 0 1 13 3.5v3.462h-1V3.5A1.5 1.5 0 0 0 10.5 2h-8A1.5 1.5 0 0 0 1 3.5v8A1.5 1.5 0 0 0 2.5 13h4.462v1H2.5A2.5 2.5 0 0 1 0 11.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 15h6v-4.25L13.5 9H9zm5-7H9.143C8.512 8 8 8.512 8 9.143v5.714C8 15.488 8.512 16 9.143 16h5.714c.631 0 1.143-.512 1.143-1.143v-4.571z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10 9h2v2h-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 14h-2v1h2zm-3-1v3h4v-3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M0 4h13v1H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3 14h10v1H3z",
        transform: "rotate(-90 3 14)",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SaveLayoutTemplateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SaveTemplateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 1H1v3h5zM1 0a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM15 1h-5v3h5zm-5-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M6 7H1.5A1.5 1.5 0 0 0 0 8.5v6A1.5 1.5 0 0 0 1.5 16H6v-1H1.5a.5.5 0 0 1-.5-.5v-6a.5.5 0 0 1 .5-.5H6z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 15h6v-4.25L13.5 9H9zm5-7H9.143C8.512 8 8 8.512 8 9.143v5.714C8 15.488 8.512 16 9.143 16h5.714c.631 0 1.143-.512 1.143-1.143v-4.571z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10 9h2v2h-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 14h-2v1h2zm-3-1v3h4v-3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SaveTemplateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SaveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.5 4a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4.53a1 1 0 0 0-.278-.693l-2.427-2.53A1 1 0 0 0 11.574 1H3a2 2 0 0 0-2 2zm3.5-4a.5.5 0 0 0-.5.5V14H3a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v2.5A1.5 1.5 0 0 0 6.5 6h3A1.5 1.5 0 0 0 11 4.5V2h.574L14 4.53V13a1 1 0 0 1-1 1h-1V9.5a.5.5 0 0 0-.5-.5zm6.5 1v4H5v-4zM6 4.5V2h4v2.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SaveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ScriptIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M4.5 4a.5.5 0 1 0 0 1h6a.5.5 0 1 0 0-1zM4.5 6a.5.5 0 0 0 0 1h6a.5.5 0 1 0 0-1zM4 8.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 4v6.914h-.001V14a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1.5a.5.5 0 0 1 .5-.5H2V2a2 2 0 0 1 2-2h10.5A1.5 1.5 0 0 1 16 1.5v2a.5.5 0 0 1-.5.5zM4 1a1 1 0 0 0-1 1v10h7.5a.5.5 0 0 1 .5.5V14a1 1 0 1 0 2 0V1.5q.001-.264.085-.5zm11 2h-1V1.5a.5.5 0 0 1 1 0zm-5 10v1c0 .364.097.706.268 1H3a1 1 0 0 1-1-1v-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ScriptIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SearchSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 7a4 4 0 1 1-8 0 4 4 0 0 1 8 0m-.836 3.871a5 5 0 1 1 .707-.707l3.018 3.018a.5.5 0 0 1-.707.707z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SearchSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SearchIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.836 11.614a6 6 0 1 1 .778-.778l3.664 3.664a.55.55 0 1 1-.778.778zM11.9 7a4.9 4.9 0 1 1-9.8 0 4.9 4.9 0 0 1 9.8 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SearchIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SectionIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 2H2a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M0 5h16v1H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SectionIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SelectAllIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M10.854 4.854a.5.5 0 0 0-.708-.708L5.5 8.793 3.854 7.146a.5.5 0 1 0-.708.708L5.5 10.207z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zm10 1H2v10h10z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M3.268 14A2 2 0 0 0 5 15h8a2 2 0 0 0 2-2V5a2 2 0 0 0-1-1.733V13a1 1 0 0 1-1 1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SelectAllIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SelectBoxIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 17",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 2.004H3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-10a1 1 0 0 0-1-1m-10-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-10a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.793 6.793a.5.5 0 0 1 .707 0l2.5 2.5 2.5-2.5a.5.5 0 1 1 .707.707L8 10.707 4.793 7.5a.5.5 0 0 1 0-.707",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SelectBoxIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SelectNoneIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm1 0h10v10H2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 15a2 2 0 0 1-1.732-1H13a1 1 0 0 0 1-1V3.267A2 2 0 0 1 15 5v8a2 2 0 0 1-2 2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SelectNoneIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SelectIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.387 12.326a.02.02 0 0 0-.017.007l-2.334 2.626a.02.02 0 0 1-.035-.013v-.017l.17-7.883a.02.02 0 0 1 .034-.014l5.755 5.532a.02.02 0 0 1-.016.035zm4.266-.483L9.898 6.311c-.64-.616-1.707-.175-1.726.713l-.17 7.9c-.021.949 1.151 1.409 1.782.7l2.01-2.264 3.074.236c.954.073 1.475-1.09.785-1.753",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 0h2v1H5zM1 5v2H0V5zM15 5h1v2h-1zM14 9V2H2v12h5v-1H3V3h10v5zM7 15H5v1h2zM1 9v2H0V9zM11 0H9v1h2zM0 15v-1.75h1V15h1.75v1H1a1 1 0 0 1-1-1M0 2.75h1V1h1.75V0H1a1 1 0 0 0-1 1zM13.25 1V0H15a1 1 0 0 1 1 1v1.75h-1V1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
SelectIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SendToIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.55 14.5a.5.5 0 0 0-.5-.5H3.175c-.593 0-1.075-.448-1.075-1V3c0-.552.482-1 1.075-1h9.675c.594 0 1.075.448 1.075 1v5.463a.538.538 0 0 0 1.075 0V3c0-1.105-.963-2-2.15-2H3.175c-1.187 0-2.15.895-2.15 2v10c0 1.105.963 2 2.15 2H8.05a.5.5 0 0 0 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.5 3.972a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zM4 6.472a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M4 8.472a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5M13.306 10.143a.5.5 0 1 0-.7.714L13.774 12H9.5a.5.5 0 0 0 0 1h4.274l-1.168 1.143a.5.5 0 1 0 .7.714l2.409-2.357z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SendToIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SendIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.512 7.498a.48.48 0 0 1-.275.437l-11.05 5.518a.49.49 0 0 1-.51-.058.48.48 0 0 1-.17-.48L3.67 7.498 2.034 2.624a.48.48 0 0 1 .14-.504.49.49 0 0 1 .522-.076L14.23 7.067a.48.48 0 0 1 .281.431M3.287 3.366l1.345 3.966c.026.081.03.168.01.252l-.971 4.577 9.217-4.65z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4.011 7.011h9v1h-9z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SendIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SeparatorIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M0 8h16v1H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 2H4v3h8zM4 1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM12 12H4v3h8zm-8-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SeparatorIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ServerIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3h10a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1M1.677 8.5A2 2 0 0 1 1 7V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3c0 .597-.262 1.134-.677 1.5.415.366.677.903.677 1.5v3a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-3c0-.597.262-1.134.677-1.5M3 9a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zm1-3.5a.5.5 0 0 1 .5-.5H5a.5.5 0 0 1 0 1h-.5a.5.5 0 0 1-.5-.5m.5 5.5a.5.5 0 0 0 0 1H5a.5.5 0 0 0 0-1zM7 5.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5m.5 5.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ServerIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SettingsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M11.466 8.005a3.461 3.461 0 1 1-6.923 0 3.461 3.461 0 0 1 6.923 0m-1 0a2.461 2.461 0 1 1-4.923 0 2.461 2.461 0 0 1 4.923 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.21.005a1 1 0 0 0-.948.683l-.397 1.193-.71.354-1.148-.765a1 1 0 0 0-1.261.125l-1.152 1.15a1 1 0 0 0-.124 1.262l.765 1.149-.354.709-1.193.397a1 1 0 0 0-.684.949v1.587a1 1 0 0 0 .684.948l1.193.398.354.709L1.47 12a1 1 0 0 0 .124 1.262l1.151 1.15a1 1 0 0 0 1.262.126l1.149-.766.709.355.397 1.192a1 1 0 0 0 .949.684h1.587a1 1 0 0 0 .948-.684l.398-1.192.709-.355L12 14.54a1 1 0 0 0 1.262-.125l1.15-1.151A1 1 0 0 0 14.54 12l-.766-1.148.355-.71 1.192-.397a1 1 0 0 0 .684-.948V7.21a1 1 0 0 0-.684-.949l-1.192-.397-.355-.71.766-1.148a1 1 0 0 0-.125-1.261l-1.151-1.151A1 1 0 0 0 12 1.47l-1.148.765-.71-.354L9.747.688a1 1 0 0 0-.948-.683zm0 1h1.588l.397 1.192a1 1 0 0 0 .501.578l.71.355a1 1 0 0 0 1.001-.063l1.149-.765 1.15 1.15-.765 1.149a1 1 0 0 0-.062 1.002l.354.709a1 1 0 0 0 .579.501l1.192.398v1.587l-1.192.397a1 1 0 0 0-.579.502l-.354.709a1 1 0 0 0 .062 1.002l.766 1.148-1.151 1.15-1.149-.765a1 1 0 0 0-1.001-.062l-.71.354a1 1 0 0 0-.501.579l-.397 1.192H7.21l-.398-1.192a1 1 0 0 0-.501-.579l-.71-.354a1 1 0 0 0-1.001.062l-1.148.766-1.151-1.151.765-1.148a1 1 0 0 0 .062-1.002l-.354-.71a1 1 0 0 0-.578-.5l-1.193-.398V7.21l1.193-.398a1 1 0 0 0 .578-.501l.354-.71a1 1 0 0 0-.062-1.001l-.765-1.148 1.15-1.151 1.149.765a1 1 0 0 0 1.002.063l.709-.355a1 1 0 0 0 .501-.578z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
SettingsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ShareIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5M12.5 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5M12.5 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 5.175 5.477 7.52l-.39-.92 5.522-2.344zM10.762 12 5.238 9.656l.391-.92 5.523 2.343z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ShareIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ShieldIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3 8 .02 14 3v3c0 3.898-.96 6.88-4.392 9.079q-.21.134-.417.27c-.278.183-.788.5-1.191.651-1.349-.54-2.989-2.098-4.213-3.419C2.577 11.277 2 9.534 2 7.755zm6.5-1.615L13 3.62V6q0 .516-.024 1H8.5zm-1 0L3 3.62V7h4.5zM3.004 8c.05 1.478.558 2.867 1.516 3.902a24 24 0 0 0 1.975 1.92c.352.3.69.559 1.005.77V8zM8.5 14.605l.143-.092q.208-.136.425-.276c1.567-1.004 2.526-2.154 3.109-3.466.367-.827.596-1.745.716-2.771H8.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ShieldIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ShowImpactIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "m13 7.633-1.146-1.146a.5.5 0 0 0-.708.707l2.466 2.466 2.253-2.478a.5.5 0 1 0-.73-.683L14 7.78v-3.94c0-1.5-1-2.5-2.5-2.5a.5.5 0 0 0 0 1q1.5 0 1.5 1.5zM3 7.633l1.146-1.146a.5.5 0 1 1 .708.707L2.388 9.66.135 7.182a.5.5 0 0 1 .73-.683L2 7.78v-3.94c0-1.5 1-2.5 2.5-2.5a.5.5 0 0 1 0 1Q3 2.34 3 3.84zM10.708 8.806a.5.5 0 0 0-.715-.7L8.85 9.274V5.5a.5.5 0 0 0-1 0v3.774L6.707 8.106a.5.5 0 1 0-.714.7l2.357 2.409zM9 2.996v1H7v-1zM9 1H7v2.996a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v1.996a1 1 0 0 1-1 1zM9 15v1H7v-1zm0-1.996H7V16a1 1 0 0 1-1-1v-1.996a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1V15a1 1 0 0 1-1 1zM15 15v1h-2v-1zm0-1.996h-2V16a1 1 0 0 1-1-1v-1.996a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1V15a1 1 0 0 1-1 1zM3 15v1H1v-1zm0-1.996H1V16a1 1 0 0 1-1-1v-1.996a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1V15a1 1 0 0 1-1 1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ShowImpactIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ShowToolbarIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1zM9 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-1 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-3.854.854a.5.5 0 0 1 .708-.708L8 13.293l3.146-3.147a.5.5 0 0 1 .708.708L8 14.707z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ShowToolbarIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SizeLargeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 3a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H1.5A1.5 1.5 0 0 1 0 13.5zm2-1a1 1 0 0 0-1 1v10.5a.5.5 0 0 0 .5.5H14a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SizeLargeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SizeMediumIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 8H1v6h10zM1 7a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2 2h12a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-1v1h1a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v3h1V3a1 1 0 0 1 1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SizeMediumIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SizeSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2 1a2 2 0 0 0-2 2v5h1V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-4v1h4a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm1 0h7v4H1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SizeSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SortAscendingIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14.146 6.854a.5.5 0 0 0 .708-.708L11.5 2.793 8.146 6.146a.5.5 0 1 0 .708.708L11 4.707V12.5a.5.5 0 1 0 1 0V4.707zM1.5 12a.5.5 0 1 1 0-1h7a.5.5 0 0 1 0 1zM1.5 9a.5.5 0 1 1 0-1h5a.5.5 0 0 1 0 1zM1 5.5a.5.5 0 0 0 .5.5h2a.5.5 0 1 0 0-1h-2a.5.5 0 0 0-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SortAscendingIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SortDescendingIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M11 11.293 8.854 9.146a.5.5 0 1 0-.708.708l3.354 3.353 3.354-3.353a.5.5 0 0 0-.708-.708L12 11.293V3.5a.5.5 0 0 0-1 0zM1.5 5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1zM1.5 8a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zM1 11.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SortDescendingIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SortOrderIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7.146 6.354a.5.5 0 1 0 .708-.708L4.5 2.293 1.146 5.646a.5.5 0 1 0 .708.708L4 4.207V13a.5.5 0 1 0 1 0V4.207zM8.854 9.646a.5.5 0 1 0-.708.708l3.354 3.353 3.354-3.353a.5.5 0 0 0-.708-.708L12 11.793V3a.5.5 0 0 0-1 0v8.793z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SortOrderIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SortIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2 4.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 7.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1h-8a.5.5 0 0 1-.5-.5M2.5 10a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SortIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SparklesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M6.799 4.103a.25.25 0 0 1 .473 0c.92 2.78 1.846 3.707 4.627 4.625a.25.25 0 0 1 0 .475c-2.781.918-3.708 1.845-4.627 4.625a.25.25 0 0 1-.473 0c-.92-2.78-1.846-3.706-4.627-4.625a.25.25 0 0 1 0-.475C4.953 7.81 5.88 6.884 6.799 4.103m4.563-2.016c.038-.115.2-.115.238 0 .459 1.39.922 1.853 2.313 2.312.114.038.114.2 0 .237-1.39.46-1.854.923-2.313 2.313-.038.114-.2.114-.238 0-.459-1.39-.922-1.853-2.313-2.313-.115-.037-.114-.199 0-.237 1.39-.459 1.853-.922 2.313-2.312",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SparklesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const StarFilledIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.106.67a1 1 0 0 1 1.788 0l1.908 3.81 4.254.61a1 1 0 0 1 .551 1.71l-3.069 2.95.726 4.17a1 1 0 0 1-1.445 1.06L8 13l-3.819 1.98a1 1 0 0 1-1.445-1.06l.726-4.17L.392 6.8a1 1 0 0 1 .552-1.71l4.254-.61z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
StarFilledIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const StarIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.106.67a1 1 0 0 1 1.788 0l1.908 3.81 4.254.61a1 1 0 0 1 .551 1.71l-3.069 2.95.726 4.17a1 1 0 0 1-1.445 1.06L8 13l-3.819 1.98a1 1 0 0 1-1.445-1.06l.726-4.17L.392 6.8a1 1 0 0 1 .552-1.71l4.254-.61zM8 1.116 5.858 5.396l-4.772.683 3.452 3.318-.817 4.695 4.28-2.218 4.278 2.218-.817-4.695 3.453-3.318-4.773-.683z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
StarIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const StopCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M6.5 6a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
StopCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const StopIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5 6a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
StopIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SubmitApprovalIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.55 14.5a.5.5 0 0 0-.5-.5H3.175C2.582 14 2 13.552 2 13V3c0-.552.582-1 1.175-1h9.675c.594 0 1.15.448 1.15 1v5.463c0 .296.203.537.5.537s.5-.24.5-.537V3c0-1.105-.963-2-2.15-2H3.175C1.988 1 1 1.895 1 3v10c0 1.105.988 2 2.175 2H8.05a.5.5 0 0 0 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M13.306 10.143a.5.5 0 1 0-.7.714L13.774 12H9.5a.5.5 0 0 0 0 1h4.274l-1.168 1.143a.5.5 0 1 0 .7.714l2.409-2.357z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.106 5.146a.5.5 0 0 1 0 .708l-4.03 4.03-1.93-1.93a.5.5 0 1 1 .708-.707L7.076 8.47l3.323-3.323a.5.5 0 0 1 .707 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SubmitApprovalIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SubscribeAddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        d: "M5.93.273c.559-.15 1.127.16 1.27.694L7.21 1c2.463-.383 4.867.961 5.669 3.258l1.36 3.896q.079.226.21.426l1.435 2.172c.374.567.057 1.334-.628 1.517l-3.223.863q.012.24-.022.479a2.5 2.5 0 0 1-.34.93c-.174.288-.405.54-.68.744a2.73 2.73 0 0 1-1.937.52 2.6 2.6 0 0 1-.961-.304 2.5 2.5 0 0 1-1.019-1.04L7 14.48v-1.036l7.996-2.143-1.434-2.172a3 3 0 0 1-.317-.637l-1.36-3.896c-.691-1.983-2.875-3.078-5-2.509l-.875.235c-2.126.57-3.47 2.61-3.077 4.673L3.124 8H2.058l-.154-.802c-.454-2.39.956-4.757 3.28-5.657l-.008-.032C5.033.976 5.37.423 5.93.273M3.5 9.5a.5.5 0 0 1 .5.5v2h2a.5.5 0 0 1 0 1H4v2a.5.5 0 0 1-1 0v-2H1a.5.5 0 0 1 0-1h2v-2a.5.5 0 0 1 .5-.5m4.621 4.68a1.52 1.52 0 0 0 1.08.627 1.64 1.64 0 0 0 1.57-.758 1.5 1.5 0 0 0 .213-.637z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
SubscribeAddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SubscribeRemoveIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8 0c.579 0 1.049.448 1.049 1v.032c2.478.268 4.452 2.189 4.631 4.615L13.854 8h-1.05l-.17-2.282C12.48 3.623 10.654 2 8.453 2h-.905c-2.2 0-4.027 1.623-4.182 3.718L3.06 9.832a3 3 0 0 1-.14.698L2.098 13h7v1H6.518q.014.038.03.074c.079.182.195.347.34.486.146.14.32.25.51.326a1.64 1.64 0 0 0 1.204 0 1.6 1.6 0 0 0 .495-.312v1.197l-.094.039a2.73 2.73 0 0 1-2.005 0 2.6 2.6 0 0 1-.85-.542A2.5 2.5 0 0 1 5.432 14H2.097c-.709 0-1.214-.659-.999-1.304l.824-2.469q.076-.227.093-.465l.305-4.115C2.5 3.221 4.474 1.3 6.952 1.032V1c0-.552.47-1 1.048-1m7.146 10.147a.5.5 0 0 1 .707.707L14.207 12.5l1.646 1.646a.5.5 0 0 1-.707.707L13.5 13.208l-1.647 1.646a.5.5 0 0 1-.707-.707l1.647-1.646-1.647-1.646a.5.5 0 0 1 .707-.707l1.647 1.646z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SubscribeRemoveIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SuccessCircleIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M11.854 5.854a.5.5 0 0 0-.708-.708L6.5 9.793 4.854 8.146a.5.5 0 1 0-.708.708L6.5 11.207z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-1 0A7 7 0 1 1 1 8a7 7 0 0 1 14 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
SuccessCircleIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const SyncIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M10.382 2.5c-1.5-.569-2.437-.64-4.099-.253-1.786.513-2.974 1.83-3.568 2.897-.54 1.157-.603 1.507-.695 2.372a.5.5 0 0 1-1 0c.082-1.02.289-1.76.835-2.86.763-1.534 2.344-2.885 4.237-3.39s3.776-.24 5.27.596c1.493.835 2.156 1.753 2.642 2.529V2.066c0-.276.224-.507.5-.507s.508.231.508.507L15 6h-4c-.276 0-.54-.18-.54-.5s.264-.5.54-.5h2.207c-.189-.282-1.133-1.858-2.825-2.5M9.441 13.828c-2.44.713-5.203-.49-6.644-2.825h2.268a.5.5 0 0 0 0-1H1v3.934c0 .276.24.5.516.5a.487.487 0 0 0 .484-.5v-2.3c.852 1.298 2.121 2.41 3.406 2.87 1.45.521 2.62.67 4.168.345 2.868-.603 5.226-3.312 5.418-6.354a.5.5 0 1 0-1 0c-.289 2.74-2.11 4.617-4.55 5.33",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
SyncIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TabletIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M13 1H3a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1M3 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 13.5A.75.75 0 1 0 8 12a.75.75 0 0 0 0 1.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TabletIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TabsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 2H2a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M1 5h14v1H1zM5 2h1v3H5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TabsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TagIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "m1.03 1.958-.037 5.62 6.82 6.821a1 1 0 0 0 1.415 0l4.243-4.242a1 1 0 0 0 0-1.414L6.65 1.92zM-.008 7.572l.036-5.62a1 1 0 0 1 .994-.994l5.62-.037a1 1 0 0 1 .714.293l6.82 6.822a2 2 0 0 1 0 2.828l-4.242 4.243a2 2 0 0 1-2.828 0L.286 8.285a1 1 0 0 1-.293-.713",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5.121 6.121a1 1 0 1 0-1.414-1.414A1 1 0 0 0 5.121 6.12",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
TagIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TaskListIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        d: "M8 0a2 2 0 0 1 2 2h2a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2-2m4 5a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-7 7a.25.25 0 0 1 .25.25v.5A.25.25 0 0 1 5 13h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zm5.031-.028a.5.5 0 0 1 0 1H7a.5.5 0 0 1 0-1zM5 10a.25.25 0 0 1 .25.25v.5A.25.25 0 0 1 5 11h-.75a.25.25 0 0 1-.25-.25v-.5a.25.25 0 0 1 .25-.25zm6.031-.028a.5.5 0 0 1 0 1H7a.5.5 0 0 1 0-1zM5 8a.25.25 0 0 1 .25.25v.5A.25.25 0 0 1 5 9h-.75A.25.25 0 0 1 4 8.75v-.5A.25.25 0 0 1 4.25 8zm4.031-.028a.5.5 0 0 1 0 1H7a.5.5 0 0 1 0-1zM5 5h6V3H5zm3-4a1 1 0 0 0-1 1h2a1 1 0 0 0-1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
TaskListIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TemplateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 1.003h1v-1H3zM1 2.976h1v-1H1zM1 5h1V4H1zM2 6.92H1v-1h1zM1 8.894h1v-1H1zM2 10.867H1v-1h1zM6 1.003H5v-1h1zM9 3.014h1v-1H9zM4 13H3v-1h1zM5 13h1v-1H5zM2 1.003h-.756a.1.1 0 0 1-.07-.171L1.83.184A.1.1 0 0 1 2 .256zM9.007.254v.756h.747a.1.1 0 0 0 .071-.17L9.178.183a.1.1 0 0 0-.171.07M2 12v.747a.1.1 0 0 1-.17.072l-.656-.648a.1.1 0 0 1 .07-.171zM7 1.003h1v-1H7z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 5.5A1.5 1.5 0 0 1 8.5 4h3.55a2 2 0 0 1 1.553.74l1.95 2.401A2 2 0 0 1 16 8.401V14.5a1.5 1.5 0 0 1-1.5 1.5h-6A1.5 1.5 0 0 1 7 14.5zm8 9a.5.5 0 0 1-.5.5h-6a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5H11v3.5a.5.5 0 0 0 .5.5H15zM14.916 8a1 1 0 0 0-.14-.228L12.827 5.37a1 1 0 0 0-.776-.37H12v3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TemplateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TestConnectionIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2.901 6.654a.5.5 0 0 1 .63-.064l.077.064 1.665 1.664 1.173-1.172a.5.5 0 0 1 .707.707L5.98 9.025l1.143 1.144 1.104-1.103a.5.5 0 1 1 .707.707L7.83 10.876l1.436 1.435.063.079a.5.5 0 0 1-.692.692l-.078-.064-.431-.43-1.062 1.12-.008.01c-1.38 1.38-3.464 1.79-4.89.82l-.815.816a.5.5 0 0 1-.707-.708l.803-.803c-1.054-1.426-.657-3.57.753-4.98l.006-.008 1.114-1.073-.42-.42-.064-.079a.5.5 0 0 1 .063-.629M2.91 9.57l-.225.244c-1.057 1.246-1.07 2.829-.238 3.66.885.886 2.62.813 3.896-.455l1.079-1.137-3.392-3.392zM14.646.646a.5.5 0 0 1 .707.707l-.681.681c1.013 1.433.583 3.566-.83 4.979l-.007.007-1.145 1.091.428.428.064.078a.5.5 0 0 1-.772.63L6.754 3.59a.501.501 0 0 1 .707-.708l.415.415 1.106-1.135.005-.005C10.4.745 12.532.315 13.965 1.327zm-1.004 1.711c-.881-.882-2.641-.8-3.948.507l-1.111 1.14 3.4 3.4 1.155-1.102c1.303-1.306 1.386-3.063.505-3.945",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TestConnectionIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TestIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 1.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1H10v3.319l4.652 5.583c.225.27.348.61.348.96V13.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 1 13.5v-1.638c0-.35.123-.69.348-.96L6 5.319V2H4.5a.5.5 0 0 1-.5-.5M7 2h2v3.5a.5.5 0 0 0 .116.32L10.932 8H7.5a.5.5 0 0 0-.354.146L6.293 9H4.234l2.65-3.18A.5.5 0 0 0 7 5.5zm-3.6 8-1.284 1.542a.5.5 0 0 0-.116.32V13.5a.5.5 0 0 0 .5.5h11a.5.5 0 0 0 .5-.5v-1.638a.5.5 0 0 0-.116-.32L11.766 9H7.707l-.853.854A.5.5 0 0 1 6.5 10z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TestIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextAlignCenterIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M4 6.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M2 9.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M4 12.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextAlignCenterIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextAlignJustifyIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 9.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 12.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 6.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextAlignJustifyIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextAlignLeftIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 6.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M2 9.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2 12.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextAlignLeftIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextAlignRightIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M6 6.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M2 9.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M6 12.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextAlignRightIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextAreaIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 17",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 2.004H2a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-10a1 1 0 0 0-1-1m-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-10a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M4 4.004h1v8H4z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M2.5 4.004h4v1h-4zM2.5 11.004h4v1h-4zM10.707 13.004l3.305-3.297-.707-.708L10 12.297zM13.203 13.5l1.297-1.3-.708-.707-1.296 1.3z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextAreaIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextBoldIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 2.028C3 1.46 3.46 1 4.029 1H8.5a3.5 3.5 0 0 1 2.736 5.683A4 4 0 0 1 9 14H4.071C3.48 14 3 13.52 3 12.928zM5 6V3h3.5a1.5 1.5 0 1 1 0 3zm0 2v4h4a2 2 0 1 0 0-4z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextBoldIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextBoxIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M14 .996h1v1h-1zM14 13.996h1v1h-1zM1 13.996h1v1H1zM1 .996h1v1H1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 .996H7v1h2zm-7 8v-2H1v2zm13-2v2h-1v-2zm-8 7h2v1H7zm-6 0v-2.5h1v2.5zm1 0h2.5v1H2zm0-9.5H1v-2.5h1zm0-2.5v-1h2.5v1zm9.5 0v-1H14v1zm2.5 0h1v2.5h-1zm0 9.5h1v2.5h-1zm0 3.5h-2.5v-1H14z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 3.996h1v2H5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M5 3.996h7v1H5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M11 3.996h1v2h-1zM8 3.996h1v8H8z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7 10.996h3v1H7z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextBoxIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextItalicIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-.978l-3 10H8.5a.5.5 0 0 1 0 1h-3a.5.5 0 0 1 0-1h.978l3-10H8.5a.5.5 0 0 1-.5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextItalicIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextStrikethroughIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 8.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M5.992 13.6q.937.4 2.142.4 1.12 0 1.992-.4.885-.4 1.372-1.083.502-.7.502-1.55 0-.535-.115-.967h-1.184q.245.407.245.967 0 .916-.804 1.483-.786.567-1.991.567-1.959 0-3.264-1.433a.51.51 0 0 0-.368-.167.51.51 0 0 0-.368.167.54.54 0 0 0-.151.366q0 .234.2.4.871.85 1.792 1.25M7.184 7H5.193a3 3 0 0 1-.272-.333q-.452-.65-.452-1.633 0-.885.468-1.567.486-.683 1.34-1.067.87-.4 1.99-.4 1.021 0 1.909.35.903.333 1.44.967.25.283.25.483a.5.5 0 0 1-.167.35.54.54 0 0 1-.368.15.39.39 0 0 1-.285-.116q-.452-.534-1.205-.867a3.85 3.85 0 0 0-1.573-.333q-1.223 0-1.992.55-.77.533-.77 1.466 0 .968.737 1.484.384.27.941.516",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextStrikethroughIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TextUnderlineIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2a.5.5 0 0 1 .5.5V8a3 3 0 0 0 6 0V2.5a.5.5 0 0 1 1 0V8a4 4 0 0 1-8 0V2.5a.5.5 0 0 1 .5-.5M4 13.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TextUnderlineIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TicketIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M10.5 6a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 1 .5-.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.5 2A1.5 1.5 0 0 0 0 3.5V6a2 2 0 1 1 0 4v2.5A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5V10a2 2 0 1 1 0-4V3.5A1.5 1.5 0 0 0 14.5 2zM11 13v-1.5a.5.5 0 0 0-1 0V13H1.5a.5.5 0 0 1-.5-.5v-1.67a3.001 3.001 0 0 0 0-5.66V3.5a.5.5 0 0 1 .5-.5H10v1.5a.5.5 0 0 0 1 0V3h3.5a.5.5 0 0 1 .5.5v1.67a3.001 3.001 0 0 0 0 5.66v1.67a.5.5 0 0 1-.5.5z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TicketIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TimeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M7 8.49V3.5a.5.5 0 0 1 1 0v4.732l2.777 1.852a.5.5 0 0 1-.554.832L7.227 8.919a.5.5 0 0 1-.18-.209A.5.5 0 0 1 7 8.49",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M8 1a7 7 0 1 1 0 14A7 7 0 0 1 8 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TimeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ToggleSwitchIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11 4H5a4 4 0 1 0 0 8h6a4 4 0 0 0 0-8M5 3a5 5 0 0 0 0 10h6a5 5 0 0 0 0-10z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("circle", {
        cx: "11",
        cy: "8",
        r: "3",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ToggleSwitchIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ToolIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.099 3.787c.025-.248.136-.48.313-.657l1.74-1.74a3.501 3.501 0 0 0-3.948 4.917L6.469 8.1l-4.922 4.923a1 1 0 1 0 1.414 1.414l4.903-4.903 1.773-1.689a3.502 3.502 0 0 0 5.035-4.192l-1.838 1.882a1.1 1.1 0 0 1-.666.322 1.885 1.885 0 0 1-2.07-2.07m2.02 1.05L14.887 2q.327.412.545.874a4.502 4.502 0 0 1-5.638 6.144l-6.126 6.126A2 2 0 0 1 .84 12.316L7.055 6.1a4.5 4.5 0 0 1 6.83-5.03l-2.766 2.767a.1.1 0 0 0-.026.053.885.885 0 0 0 .972.972.1.1 0 0 0 .054-.026",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ToolIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TranslateIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.5 9.202H11V8.5h-1v.702H7.5v1h.901c.058.119.114.248.178.396l.057.13c.134.308.296.663.543 1.047.162.252.355.51.596.778-.354.292-.79.602-1.333.928l.516.857c.624-.375 1.13-.738 1.542-1.087.413.35.918.712 1.542 1.087l.516-.857a11 11 0 0 1-1.333-.928 6 6 0 0 0 .596-.778c.247-.384.41-.739.543-1.046l.057-.13c.064-.149.12-.278.178-.397h.901zm-4.003 1 .003.007.052.12a6 6 0 0 0 .469.906c.126.197.28.406.479.628.198-.222.353-.43.48-.628.202-.316.34-.613.468-.906l.052-.12.003-.007z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.268 8A2 2 0 0 1 7 7h7a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V9c0-.364.097-.706.268-1M7 8a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10 2v4h1V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h2V8H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.535 5.47h1.927l.37 1.03H8l-1.996-5H4.985L3 6.5h1.168zm1.63-.835H4.832l.663-1.871z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
TranslateIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const TreeViewIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h1.5v9a.5.5 0 0 0 .5.5h4v-1H4.5v-5H8V9a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v.5H4.5V5H6a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zm4 1H2v2h4zm6 5H9v2h3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 13a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1zm1 0h3v2H9z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
TreeViewIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UndoSmallIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M10.495 2.714C7.717 1.464 4.734 1.95 3 4V2.717c0-.3-.2-.543-.5-.543s-.5.243-.5.543V6h3.637c.299 0 .542-.2.542-.5S5.936 5 5.637 5H3.5c1-1.5 4.09-2.598 6.545-1.3 2.455 1.3 3.58 4.084 2.39 6.627a5.08 5.08 0 0 1-2.858 2.623.542.542 0 1 0 .374 1.017 6.16 6.16 0 0 0 3.468-3.182c1.445-3.09 0-6.566-2.919-8.068z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UndoSmallIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UndoIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.384 5.148C4.037 2.43 7.25 1.17 10.407 2.59a6.196 6.196 0 0 1-.478 11.44.5.5 0 1 0 .345.938 7.2 7.2 0 0 0 4.048-3.714c1.686-3.606.12-7.89-3.494-9.571l-.005-.003C7.437.157 3.997 1.313 2 3.938V1.994a.5.5 0 0 0-1 0v4.154h4.185a.5.5 0 1 0 0-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UndoIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UploadIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1.5 8.5A.5.5 0 0 1 2 9v4a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V9a.5.5 0 0 1 1 0v4a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.354 4.854a.5.5 0 0 1-.708 0L8.5 2.707V10.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 0 1-.708-.708L8 .793l3.354 3.353a.5.5 0 0 1 0 .708",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UploadIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserAddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.069 4c0 1.427-.753 2.68-1.886 3.388A6.05 6.05 0 0 1 12.544 9h-1.482a5.04 5.04 0 0 0-3.02-1c-2.781 0-5.035 2.239-5.035 5v1c0 .552.45 1 1.007 1H8.04v1H4.014A2.007 2.007 0 0 1 2 14v-1c0-2.565 1.62-4.753 3.9-5.612A3.99 3.99 0 0 1 4.013 4c0-2.21 1.803-4 4.027-4s4.028 1.79 4.028 4M8.04 1a3.01 3.01 0 0 0-3.02 3c0 1.657 1.352 3 3.02 3a3.01 3.01 0 0 0 3.02-3c0-1.657-1.352-3-3.02-3",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12.5 16a.5.5 0 0 1-.5-.5V14h-1.5a.5.5 0 0 1 0-1H12v-1.5a.5.5 0 0 1 1 0V13h1.5a.5.5 0 0 1 0 1H13v1.5a.5.5 0 0 1-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserAddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserChangeIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M9.692 15.857a.5.5 0 1 0 .7-.714L9.224 14h2.275A2.5 2.5 0 0 0 14 11.5V8.226l1.143 1.167a.5.5 0 0 0 .714-.699L13.5 6.284l-2.357 2.41a.5.5 0 1 0 .714.7L13 8.225v1.23l-.002.044v2A1.5 1.5 0 0 1 11.5 13H9.224l1.168-1.143a.5.5 0 0 0-.7-.714L7.283 13.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.183 7.388A3.99 3.99 0 0 0 12.07 4c0-2.21-1.803-4-4.028-4S4.014 1.79 4.014 4c0 1.427.753 2.68 1.885 3.388C3.62 8.247 2 10.435 2 13v1c0 1.105.902 2 2.014 2h4.008L7 15H4.014a1.003 1.003 0 0 1-1.007-1v-1c0-2.761 2.254-5 5.034-5 .743 0 1.448.16 2.083.447q.106-.248.304-.452l.342-.35a6 6 0 0 0-.587-.257M5.021 4c0-1.657 1.352-3 3.02-3a3.01 3.01 0 0 1 3.02 3c0 1.657-1.352 3-3.02 3a3.01 3.01 0 0 1-3.02-3",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserChangeIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserDeleteIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M5.817 7.388A3.99 3.99 0 0 1 3.93 4c0-2.21 1.803-4 4.028-4s4.027 1.79 4.027 4c0 1.427-.753 2.68-1.885 3.388C12.38 8.247 14 10.435 14 13v1c0 1.105-.902 2-2.014 2H7.96v-1h4.027c.556 0 1.007-.448 1.007-1v-1c0-2.761-2.254-5-5.034-5-1.134 0-2.18.372-3.021 1H3.456a6.05 6.05 0 0 1 2.36-1.612M10.979 4c0-1.657-1.352-3-3.02-3a3.01 3.01 0 0 0-3.02 3c0 1.657 1.352 3 3.02 3a3.01 3.01 0 0 0 3.02-3",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.146 15.854a.5.5 0 0 0 .708-.708L4.207 13.5l1.647-1.646a.5.5 0 0 0-.708-.708L3.5 12.793l-1.646-1.647a.5.5 0 0 0-.708.708L2.793 13.5l-1.647 1.646a.5.5 0 0 0 .708.708L3.5 14.207z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserDeleteIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserEditIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M8.183 7.388A3.99 3.99 0 0 0 10.07 4c0-2.21-1.803-4-4.028-4S2.014 1.79 2.014 4c0 1.427.753 2.68 1.885 3.388C1.62 8.247 0 10.435 0 13v1c0 1.105.902 2 2.014 2H6.04v-1H2.014a1.003 1.003 0 0 1-1.007-1v-1c0-2.761 2.254-5 5.034-5 1.134 0 2.18.372 3.021 1h1.482a6.05 6.05 0 0 0-2.36-1.612M3.021 4c0-1.657 1.352-3 3.02-3a3.01 3.01 0 0 1 3.02 3c0 1.657-1.352 3-3.02 3a3.01 3.01 0 0 1-3.02-3",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m12.889 7.574-1.152 1.224-3.81 3.692a.5.5 0 0 0-.128.216l-.732 2.545a.5.5 0 0 0 .129.49c.129.129.318.177.494.127l2.56-.727a.5.5 0 0 0 .218-.127l4.914-4.886c.265-.263.501-.715.59-1.187.216-1.141-.88-2.129-1.982-1.91-.455.09-.839.282-1.101.543m2.095 1.182a1.55 1.55 0 0 1-.348.698l-.897.969-.695.712-3.196 3.08-1.564.444.447-1.554 4.843-4.813.006-.006c.112-.097.338-.221.607-.274.446-.089.872.343.797.744",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserEditIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserGroupIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 14v-2a4 4 0 1 0-8 0v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1M5 7a5 5 0 0 0-5 5v2a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-2a5 5 0 0 0-5-5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M11.25 2a2.75 2.75 0 0 1 1.215 5.218C14.512 7.844 16 9.246 16 11.016v.734c0 .966 0 2.25-1.75 2.25H11v-1h3.25c.75 0 .75-.836.75-1.25v-.437C15 9.437 13.21 8 11 8c-.437 0-.857.073-1.251.202l-.772-.772a5 5 0 0 1 .892-.301A2.75 2.75 0 0 1 11.25 2m0 1a1.75 1.75 0 1 0 0 3.5 1.75 1.75 0 0 0 0-3.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserGroupIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserReassignIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 9a2.25 2.25 0 1 0 0-4.5A2.25 2.25 0 0 0 8 9m3.25-2.25a3.25 3.25 0 1 1-6.5 0 3.25 3.25 0 0 1 6.5 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M7.82 9a5 5 0 0 1 4.9 4c-.33.315-.531.475-.908.742a4 4 0 0 0-7.936-.409L3 12.668A5 5 0 0 1 7.82 9M14.5 6H13a.5.5 0 1 0 0 1h3V4a.505.505 0 0 0-.5-.506A.505.505 0 0 0 15 4v1.5l-.207-.249v.542h-.542z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.937 1.5a6.5 6.5 0 1 0 .145 13c1.601-.02 3.197-.486 4.065-1.354a.5.5 0 1 1 .707.707c-1.133 1.133-3.038 1.625-4.759 1.646a7.5 7.5 0 1 1 7.018-9.878.5.5 0 1 1-.949.317A6.5 6.5 0 0 0 7.937 1.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserReassignIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserSettingsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M8.127 7.388a4 4 0 1 0-4.255 0A6 6 0 0 0 0 13v1a2 2 0 0 0 2 2h5v-1H2a1 1 0 0 1-1-1v-1a5 5 0 0 1 8-4h1.472a6 6 0 0 0-2.345-1.612M3 4a3 3 0 1 1 6 0 3 3 0 0 1-6 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M12 9h-1l-.281 1.124q-.191.063-.368.155l-1.028-.616-.707.707.63 1.049a3 3 0 0 0-.122.3L8 12v1l1.124.281q.05.15.118.293l-.626 1.042.707.707 1.015-.609q.183.096.38.162L11 16h1l.281-1.124q.185-.06.356-.149l.994.596.707-.707-.6-1q.086-.173.145-.359L15.01 13l.02-1-1.166-.317a3 3 0 0 0-.13-.306l.604-1.007-.707-.707-1.006.604a2.5 2.5 0 0 0-.344-.143zm1 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
UserSettingsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const UserIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 4a3 3 0 1 1 6 0 3 3 0 0 1-6 0m5.127 3.388a4 4 0 1 0-4.255 0A6 6 0 0 0 2 13v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1a6 6 0 0 0-3.873-5.612M8 8a5 5 0 0 0-5 5v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1a5 5 0 0 0-5-5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
UserIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const VersionAddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "m6.07 5.5 1.402 3.936h.056L8.927 5.5H10l-1.899 5H6.896L5 5.5zM11.5 15a.5.5 0 0 1-.5-.5V13H9.5a.5.5 0 0 1 0-1H11v-1.5a.5.5 0 0 1 1 0V12h1.5a.5.5 0 0 1 0 1H12v1.5a.5.5 0 0 1-.5.5",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 1a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h4v-1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v6h1V3a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
VersionAddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const VersionControlIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M2 1h6a1 1 0 0 1 1 1h1a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2v-1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 3a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm0 1a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "m9.07 7.5 1.402 3.935h.056L11.927 7.5H13l-1.899 5H9.896L8 7.5z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
VersionControlIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const VflexIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 17",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.504 1.998c-.829 0-1.5.67-1.5 1.496v8.98c0 .827.671 1.497 1.5 1.497h6.5v.998h-6.5c-1.38 0-2.5-1.117-2.5-2.495v-8.98A2.497 2.497 0 0 1 2.504 1h6.5v.998z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M10.143 2.694a.5.5 0 0 0 .714.7L12 2.226V6.5a.5.5 0 0 0 1 0V2.226l1.143 1.168a.5.5 0 0 0 .714-.7L12.5.285zM14.857 13.306a.5.5 0 1 0-.714-.7L13 13.774V9.5a.5.5 0 0 0-1 0v4.274l-1.143-1.168a.5.5 0 1 0-.714.7l2.357 2.409z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
VflexIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const VideocameraIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4h9a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1m11 6.5v.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v.5L16 4v8zm0-1.118 2 1V5.618l-2 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
VideocameraIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewColumnsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 3v10h1V3zm5 0v10h1V3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 3H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewColumnsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewDescriptionsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M2 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M2 7.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5M2.5 10a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewDescriptionsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewGalleryIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 3H1v3h5zM1 2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1zM6 10H1v3h5zM1 9a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zM15 3h-5v3h5zm-5-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1zM15 10h-5v3h5zm-5-1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewGalleryIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewGridIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        fillRule: "evenodd",
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        clipRule: "evenodd",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M3 1H1v2h2zM1 0a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM3 7H1v2h2zM1 6a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zM9 1H7v2h2zM7 0a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM9 7H7v2h2zM7 6a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zM15 1h-2v2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM15 7h-2v2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zM3 13H1v2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1zM9 13H7v2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1zM15 13h-2v2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ViewGridIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewKanbanIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 3H2v7h3zm-3 8h3v2a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1V8h3a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1m7-8H6v10h3zm1 4h3V3h-3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewKanbanIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewRowsIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        d: "M3 14a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2zM2 5h12V3a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1zm0 1v3h12V6zm12 4H2v2a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewRowsIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewTableIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M1 4h14v1h-4v2h4v1h-4v2h4v1h-4v2h-1v-2H6v2H5v-2H1v-1h4V8H1V7h4V5H1zm9 6V8H6v2zm0-3V5H6v2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M14 3H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewTableIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ViewTimelineIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 1.5a.5.5 0 0 0-1 0V2H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h5v1H5a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h2v1.5a.5.5 0 0 0 1 0V13h6a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1H8V7h1a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H8zM7 3H2v3h5zm1 3V3h1v3zM7 9H5v3h2zm1 3V9h6v3z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
ViewTimelineIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const VisibilityOffIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.397 4.23C1.96 5.1.871 6.399.347 8c1 3.051 4.048 5 7.653 5a9.2 9.2 0 0 0 3.52-.681l-.775-.772A8.3 8.3 0 0 1 8 12c-3.126 0-5.649-1.608-6.59-4 .503-1.28 1.46-2.336 2.72-3.04zm9.647 5.975A5.8 5.8 0 0 0 14.59 8C13.649 5.608 11.127 4 8 4q-.562 0-1.095.068L6.04 3.2A9.6 9.6 0 0 1 8 3c3.605 0 6.654 1.949 7.653 5a6.77 6.77 0 0 1-1.9 2.914zM6.23 7.052A2.002 2.002 0 0 0 8.95 9.76l-.778-.774Q8.086 9 7.996 9a1.002 1.002 0 0 1-.988-1.175zM3.147 2.146a.5.5 0 0 1 .707 0l10 10a.5.5 0 0 1-.707.708l-10-10a.5.5 0 0 1 0-.708",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
VisibilityOffIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const VisibilityIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 12c-3.306 0-5.885-1.653-6.71-4C2.114 5.653 4.693 4 8 4s5.884 1.653 6.71 4c-.826 2.347-3.405 4-6.71 4m0-9c3.744 0 6.887 1.962 7.76 5-.873 3.038-4.016 5-7.76 5S1.112 11.038.24 8C1.112 4.962 4.256 3 8 3m1 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m1 0a2 2 0 1 1-4 0 2 2 0 0 1 4 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
VisibilityIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WidgetsAddIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`,
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }, React.createElement("path", {
        d: "M5 6v1H2V6zm1-1V2a1 1 0 0 0-.897-.995L5 1H2a1 1 0 0 0-.995.897L1 2v3a1 1 0 0 0 1 1v1l-.204-.01A2 2 0 0 1 .01 5.203L0 5V2A2 2 0 0 1 1.796.01L2 0h3l.204.01A2 2 0 0 1 7 2v3l-.01.204A2 2 0 0 1 5.203 6.99L5 7V6a1 1 0 0 0 1-1M5 15v1H2v-1zm1-1v-3a1 1 0 0 0-.897-.995L5 10H2a1 1 0 0 0-.995.898L1 11v3a1 1 0 0 0 1 1v1l-.204-.01A2 2 0 0 1 .01 14.203L0 14v-3a2 2 0 0 1 1.796-1.99L2 9h3l.204.01A2 2 0 0 1 7 11v3l-.01.204a2 2 0 0 1-1.786 1.785L5 16v-1a1 1 0 0 0 1-1M14 15v1h-3v-1zm1-1v-3a1 1 0 0 0-.898-.995L14 10h-3a1 1 0 0 0-.995.898L10 11v3a1 1 0 0 0 1 1v1l-.204-.01a2 2 0 0 1-1.785-1.786L9 14v-3a2 2 0 0 1 1.796-1.99L11 9h3l.204.01A2 2 0 0 1 16 11v3l-.01.204a2 2 0 0 1-1.786 1.785L14 16v-1a1 1 0 0 0 1-1M12 6.125V.875a.5.5 0 0 1 1 0v5.25a.5.5 0 0 1-1 0",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        d: "M9.813 3h5.25a.5.5 0 0 1 0 1h-5.25a.5.5 0 0 1 0-1",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
WidgetsAddIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WindowCollapseIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10a.5.5 0 0 1 .5-.5h4v4a.5.5 0 0 1-1 0v-2.293l-3.646 3.647a.5.5 0 1 1-.708-.707L4.793 10.5H2.5A.5.5 0 0 1 2 10M14.854 1.146a.5.5 0 0 1 0 .708L11.207 5.5H13.5a.5.5 0 1 1 0 1h-4v-4a.5.5 0 0 1 1 0v2.293l3.646-3.647a.5.5 0 0 1 .707 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
WindowCollapseIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WindowExpandIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 14.5a.5.5 0 0 1-.5.5H1v-4a.5.5 0 0 1 1 0v2.293l3.646-3.647a.5.5 0 0 1 .708.707L2.707 14H5a.5.5 0 0 1 .5.5M9.646 6.354a.5.5 0 0 1 0-.708L13.293 2H11a.5.5 0 0 1 0-1h4v4a.5.5 0 0 1-1 0V2.707l-3.646 3.647a.5.5 0 0 1-.708 0",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
WindowExpandIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WindowFullScreenIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2h3a1 1 0 0 1 1 1v3h1V3a2 2 0 0 0-2-2h-3zM6 2V1H3a2 2 0 0 0-2 2v3h1V3a1 1 0 0 1 1-1zm-4 8H1v3a2 2 0 0 0 2 2h3v-1H3a1 1 0 0 1-1-1zm8 4v1h3a2 2 0 0 0 2-2v-3h-1v3a1 1 0 0 1-1 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
WindowFullScreenIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WorkflowTemplatesIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.25 4a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-.75.75h-1.5A.75.75 0 0 1 8 6.25V6H6v1h.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-.75.75H6v1h2v-.25a.75.75 0 0 1 .75-.75h1.5a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-.75.75h-1.5a.75.75 0 0 1-.75-.75V12H6a1 1 0 0 1-1-1v-1h-.25A.75.75 0 0 1 4 9.25v-1.5A.75.75 0 0 1 4.75 7H5V6a1 1 0 0 1 1-1h2v-.25A.75.75 0 0 1 8.75 4zM9 12h1v-1H9zM5 9h1V8H5zm4-3h1V5H9z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 0a2 2 0 0 1 1.6.8l2 1.667a2 2 0 0 1 .4 1.2V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zM4 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3.667c0-.216-.07-.427-.2-.6l-2-1.667A1 1 0 0 0 10 1z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
WorkflowTemplatesIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WorkflowIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2h3v3h-3zM9 2a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1V4H5.5a.5.5 0 0 0-.5.5V5a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1v1.5a.5.5 0 0 0 .5.5H9v-1a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-1H5.5A1.5 1.5 0 0 1 4 11.5V10H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h2v-.5A1.5 1.5 0 0 1 5.5 3H9zm4 9h-3v3h3zM2 6h3v3H2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
WorkflowIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const WorkspaceIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 11H3a3 3 0 0 1-3-3V3a3 3 0 0 1 3-3h5a3 3 0 0 1 3 3v2h2a3 3 0 0 1 3 3v5a3 3 0 0 1-3 3H8a3 3 0 0 1-3-3zM3 1h5a2 2 0 0 1 2 2v2H8a3 3 0 0 0-3 3v2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2m8 5h2a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2v-2h2a3 3 0 0 0 3-3zm-1 0v2a2 2 0 0 1-2 2H6V8a2 2 0 0 1 2-2z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }));
});
WorkspaceIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ZoomInIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11m4.936-1.27a6.5 6.5 0 1 0-.707.707l4.372 4.371a.5.5 0 1 0 .707-.707zM7.051 3.5a.5.5 0 0 0-1 0V6.05H3.5a.5.5 0 1 0 0 1h2.551V9.5a.5.5 0 1 0 1 0V7.05H9.5a.5.5 0 0 0 0-1H7.051z",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ZoomInIcon.propTypes = iconPropTypes;
/** THIS FILE IS AUTOGENERATED! DO NOT MODIFY! */
const ZoomOutIcon = forwardRef((props, ref) => {
    const { iconProps, label, titleId, style, getId } = useIconProps(props);
    return React.createElement("svg", Object.assign({
        ref: ref,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        style: Object.assign(Object.assign({}, style), {
            fill: "none"
        })
    }, iconProps), label && React.createElement("title", {
        id: titleId
    }, label), React.createElement("g", {
        clipPath: `url(#${getId("uxa-icon-id-1")})`
    }, React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11m4.936-1.27a6.5 6.5 0 1 0-.707.707l4.307 4.306a.5.5 0 1 0 .707-.707zM3 6.55a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    })), React.createElement("defs", null, React.createElement("clipPath", {
        id: getId("uxa-icon-id-1")
    }, React.createElement("path", {
        d: "M0 0h16v16H0z",
        fillOpacity: "1",
        style: {
            fill: "var(--uxa-icon__fill, currentColor)"
        }
    }))));
});
ZoomOutIcon.propTypes = iconPropTypes;
export { ChartPieIcon as $, AccordionIcon as A, AviatorPrimaryIcon as B, BadgeIcon as C, BlockIcon as D, BookIcon as E, BookmarkFilledIcon as F, BookmarkGroupIcon as G, BookmarkIcon as H, BoxIcon as I, BroadcastIcon as J, BugIcon as K, ButtonIcon as L, CabinetIcon as M, CalculatorIcon as N, CalendarApprovalHistoryIcon as O, CalendarApprovalIcon as P, CalendarRemoveIcon as Q, CalendarIcon as R, CameraIcon as S, BriefcaseIcon as T, ChangeContentTypeIcon as U, ChangeLocationIcon as V, ChangeOrderIcon as W, ChartBarIcon as X, ChartDonutIcon as Y, ChartLineIcon as Z, ChartPartitionIcon as _, AchievementIcon as a, DmsMetadataOffIcon as a$, ChartSankeyIcon as a0, ChatsIcon as a1, CheckInIcon as a2, CheckOutIcon as a3, CheckboxIcon as a4, CheckmarkSelectIcon as a5, CheckmarkIcon as a6, ChevronDoubleDownIcon as a7, ChevronDoubleLeftIcon as a8, ChevronDoubleRightIcon as a9, ConnectIcon as aA, ContainerIcon as aB, ContentServerIcon as aC, CopyIcon as aD, CreateShortcutIcon as aE, CreateIcon as aF, CriteriaPlayIcon as aG, CriteriaSearchStopIcon as aH, CriteriaSearchIcon as aI, CriteriaStopIcon as aJ, CriteriaIcon as aK, CrownIcon as aL, CutIcon as aM, DashboardIcon as aN, DataAddIcon as aO, DataBaseIcon as aP, DataGridIcon as aQ, DateTimeIcon as aR, DelegatesIcon as aS, TrashIcon as aT, DesktopIcon as aU, DestroyIcon as aV, DetatchIcon as aW, DeviceMobileIcon as aX, DeviceMonitorIcon as aY, DevicesIcon as aZ, DislikeIcon as a_, ChevronDoubleUpIcon as aa, ChevronFirstIcon as ab, ChevronLargeDownIcon as ac, ChevronLargeLeftIcon as ad, ChevronLargeRightIcon as ae, ChevronLargeUpIcon as af, ChevronLastIcon as ag, ChevronSmallDownIcon as ah, ChevronSmallLeftIcon as ai, ChevronSmallRightIcon as aj, ChevronSmallUpIcon as ak, ClearCircleFilledIcon as al, ClearCircleIcon as am, CloseExtraSmallIcon as an, CloseSmallIcon as ao, CloseIcon as ap, CloudIcon as aq, CodeIcon as ar, CollectionDeleteIcon as as, CollectionRecentIcon as at, CollectionIcon as au, CommentFilledIcon as av, CommentNewIcon as aw, CommentIcon as ax, CommunityIcon as ay, ComplianceIcon as az, AcknowledgeIcon as b, HflexIcon as b$, DmsMetadataOnIcon as b0, DocumentCompressedIcon as b1, DocumentCustomIcon as b2, DocumentDeleteIcon as b3, DocumentDisabledIcon as b4, DocumentDownloadIcon as b5, DocumentEditIcon as b6, DocumentGenerateIcon as b7, DocumentLicenseIcon as b8, DocumentLockedIcon as b9, ErrorCircleIcon as bA, ExitIcon as bB, ExportDocumentIcon as bC, ExternalLinkIcon as bD, FavoriteFilledIcon as bE, FavoriteIcon as bF, FileInventoryIcon as bG, FilePlanIcon as bH, FilterRemoveIcon as bI, FilterIcon as bJ, FinishLineFlagIcon as bK, FlagIcon as bL, FolderBrowseIcon as bM, FolderOpenIcon as bN, FolderIcon as bO, FormIcon as bP, ForwardHistoryIcon as bQ, GoToLocationUpIcon as bR, GoToLocationIcon as bS, GridSlimIcon as bT, GridIcon as bU, GroupInboxIcon as bV, GroupObjectsIcon as bW, HaltIcon as bX, HamburgerCloseIcon as bY, HamburgerIcon as bZ, HelpCircleIcon as b_, DocumentOpenExcelIcon as ba, DocumentOpenPowerpointIcon as bb, DocumentOpenWordIcon as bc, DocumentPdfIcon as bd, DocumentRunTimeIcon as be, DocumentTestIcon as bf, DocumentVideoIcon as bg, DocumentViewIcon as bh, DocumentWebExcelIcon as bi, DocumentWebPowerpointIcon as bj, DocumentWebWordIcon as bk, DocumentWebIcon as bl, DocumentIcon as bm, DownloadIcon as bn, DragHandleIcon as bo, DuplicateIcon as bp, EditBulkIcon as bq, EditCancelIcon as br, EditDocIcon as bs, EditLayoutIcon as bt, EditSmIcon as bu, EditIcon as bv, EmailAttachmentIcon as bw, EmailIcon as bx, EmojiIcon as by, EnterpriseIcon as bz, ActionBarIcon as c, PauseCircleIcon as c$, HistoryIcon as c0, HoldUserIcon as c1, HoldViewIcon as c2, HomeIcon as c3, HostMaintenanceIcon as c4, HostIcon as c5, IdeaIcon as c6, IframeIcon as c7, ImageButtonIcon as c8, ImageIcon as c9, MenuIcon as cA, MetadataEditIcon as cB, MetadataIcon as cC, MoreCircleIcon as cD, MoreHorizontalIcon as cE, MoreVerticalIcon as cF, MoveIcon as cG, MyAviatorIcon as cH, MyContributionsIcon as cI, MyInboxIcon as cJ, MyTaskCompleteIcon as cK, MyTaskRejectIcon as cL, MyTaskIcon as cM, MyWorkIcon as cN, MyWorkspaceIcon as cO, NodeLocationIcon as cP, NotesAddIcon as cQ, NotesIcon as cR, NotificationIcon as cS, NumberIcon as cT, OfficeWebIcon as cU, OrganizationChartIcon as cV, PagesIcon as cW, PanIcon as cX, PanelLeftIcon as cY, PanelRightIcon as cZ, PasteIcon as c_, ImportDocumentIcon as ca, InformationCircleFilledIcon as cb, InformationCircleSmallIcon as cc, InformationCircleIcon as cd, IntegerIcon as ce, LabelIcon as cf, LanguageIcon as cg, LaptopIcon as ch, LaunchIcon as ci, LayersIcon as cj, LayoutsIcon as ck, LegendIcon as cl, LicenseKeyIcon as cm, LikeFilledIcon as cn, LikeIcon as co, LinkBrokenIcon as cp, LinkIcon as cq, ListViewSlimIcon as cr, ListViewIcon as cs, ListIcon as ct, LocationIcon as cu, LockOpenIcon as cv, LockIcon as cw, ManageSupportingFilesIcon as cx, ManualIcon as cy, MarkReadIcon as cz, AddCircleFilledIcon as d, StarFilledIcon as d$, PauseIcon as d0, PermissionsManageIcon as d1, PinFilledIcon as d2, PinIcon as d3, PlayCircleIcon as d4, PlayIcon as d5, PodcastIcon as d6, PopOverIcon as d7, PowerRestartIcon as d8, PowerIcon as d9, SaveTemplateIcon as dA, SaveIcon as dB, ScriptIcon as dC, SearchSmallIcon as dD, SearchIcon as dE, SectionIcon as dF, SelectAllIcon as dG, SelectBoxIcon as dH, SelectNoneIcon as dI, SelectIcon as dJ, SendToIcon as dK, SendIcon as dL, SeparatorIcon as dM, ServerIcon as dN, SettingsIcon as dO, ShareIcon as dP, ShieldIcon as dQ, ShowImpactIcon as dR, ShowToolbarIcon as dS, SizeLargeIcon as dT, SizeMediumIcon as dU, SizeSmallIcon as dV, SortAscendingIcon as dW, SortDescendingIcon as dX, SortOrderIcon as dY, SortIcon as dZ, SparklesIcon as d_, PreferencesIcon as da, PrintIcon as db, ProjectIcon as dc, PropertiesViewIcon as dd, PropertiesIcon as de, PublishClearIcon as df, PublishIcon as dg, RadioGroupIcon as dh, RecentIcon as di, RedoIcon as dj, RefreshIcon as dk, RelatedIcon as dl, RemoveCircleFilledIcon as dm, RemoveCircleIcon as dn, RemoveSmallIcon as dp, RemoveXsIcon as dq, RemoveIcon as dr, RenameIcon as ds, ReplyIcon as dt, ResizeHandleIcon as du, RestoreIcon as dv, RotateIcon as dw, RsiViewIcon as dx, SaveAsIcon as dy, SaveLayoutTemplateIcon as dz, AddCircleIcon as e, ZoomInIcon as e$, StarIcon as e0, StopCircleIcon as e1, StopIcon as e2, SubmitApprovalIcon as e3, SubscribeAddIcon as e4, SubscribeRemoveIcon as e5, SuccessCircleIcon as e6, SyncIcon as e7, TabletIcon as e8, TabsIcon as e9, UserDeleteIcon as eA, UserEditIcon as eB, UserGroupIcon as eC, UserReassignIcon as eD, UserSettingsIcon as eE, UserIcon as eF, VersionAddIcon as eG, VersionControlIcon as eH, VflexIcon as eI, VideocameraIcon as eJ, ViewColumnsIcon as eK, ViewDescriptionsIcon as eL, ViewGalleryIcon as eM, ViewGridIcon as eN, ViewKanbanIcon as eO, ViewRowsIcon as eP, ViewTableIcon as eQ, ViewTimelineIcon as eR, VisibilityOffIcon as eS, VisibilityIcon as eT, WidgetsAddIcon as eU, WindowCollapseIcon as eV, WindowExpandIcon as eW, WindowFullScreenIcon as eX, WorkflowTemplatesIcon as eY, WorkflowIcon as eZ, WorkspaceIcon as e_, TagIcon as ea, TaskListIcon as eb, TemplateIcon as ec, TestConnectionIcon as ed, TestIcon as ee, TextAlignCenterIcon as ef, TextAlignJustifyIcon as eg, TextAlignLeftIcon as eh, TextAlignRightIcon as ei, TextAreaIcon as ej, TextBoldIcon as ek, TextBoxIcon as el, TextItalicIcon as em, TextStrikethroughIcon as en, TextUnderlineIcon as eo, TicketIcon as ep, TimeIcon as eq, ToggleSwitchIcon as er, ToolIcon as es, TranslateIcon as et, TreeViewIcon as eu, UndoSmallIcon as ev, UndoIcon as ew, UploadIcon as ex, UserAddIcon as ey, UserChangeIcon as ez, AddSmallIcon as f, ZoomOutIcon as f0, AddTemplateIcon as g, AddIcon as h, AddressBookIcon as i, AdminCenterIcon as j, AdminWorkspaceIcon as k, AlarmClockIcon as l, AnnotateIcon as m, AnnouncementIcon as n, AppSwitchIcon as o, ApplyToAllIcon as p, ArchiveIcon as q, ArrowDownCircleIcon as r, ArrowDownIcon as s, ArrowLeftCircleIcon as t, ArrowLeftIcon as u, ArrowRightCircleIcon as v, ArrowRightIcon as w, ArrowUpCircleIcon as x, ArrowUpIcon as y, AttachmentIcon as z };
